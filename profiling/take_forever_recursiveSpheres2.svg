<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="791"><g><title>perf-exec (5 samples, 0.63%)</title><rect x="0.0000%" y="1045" width="0.6321%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="1029" width="0.6321%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="1013" width="0.6321%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="997" width="0.6321%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="981" width="0.6321%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="965" width="0.6321%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="949" width="0.6321%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="933" width="0.6321%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="917" width="0.6321%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="901" width="0.6321%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="885" width="0.6321%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="869" width="0.6321%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="853" width="0.6321%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="837" width="0.6321%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="821" width="0.6321%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="805" width="0.6321%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="0.0000%" y="789" width="0.6321%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="5"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (11 samples, 1.39%)</title><rect x="0.6321%" y="1013" width="1.3906%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="11"/><text x="0.8821%" y="1023.50"></text></g><g><title>rustracer::primitive::solve_quadratic (2 samples, 0.25%)</title><rect x="1.7699%" y="997" width="0.2528%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="2"/><text x="2.0199%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.25%)</title><rect x="1.7699%" y="981" width="0.2528%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="2"/><text x="2.0199%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="1013" width="0.1264%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="1"/><text x="2.2728%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="997" width="0.1264%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="1"/><text x="2.2728%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="981" width="0.1264%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="1"/><text x="2.2728%" y="991.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (1 samples, 0.13%)</title><rect x="2.0228%" y="965" width="0.1264%" height="15" fill="rgb(247,18,42)" fg:x="16" fg:w="1"/><text x="2.2728%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="949" width="0.1264%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="1"/><text x="2.2728%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="933" width="0.1264%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="1"/><text x="2.2728%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="2.0228%" y="917" width="0.1264%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="2.2728%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.13%)</title><rect x="2.0228%" y="901" width="0.1264%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="1"/><text x="2.2728%" y="911.50"></text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (1 samples, 0.13%)</title><rect x="2.0228%" y="885" width="0.1264%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="2.2728%" y="895.50"></text></g><g><title>__atan2f (1 samples, 0.13%)</title><rect x="2.1492%" y="1013" width="0.1264%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="1"/><text x="2.3992%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.25%)</title><rect x="2.2756%" y="1013" width="0.2528%" height="15" fill="rgb(209,103,24)" fg:x="18" fg:w="2"/><text x="2.5256%" y="1023.50"></text></g><g><title>[[heap]] (16 samples, 2.02%)</title><rect x="0.6321%" y="1029" width="2.0228%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="16"/><text x="0.8821%" y="1039.50">[..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.13%)</title><rect x="2.5284%" y="1013" width="0.1264%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="1"/><text x="2.7784%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.13%)</title><rect x="2.5284%" y="997" width="0.1264%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="1"/><text x="2.7784%" y="1007.50"></text></g><g><title>&lt;std::path::PathBuf as core::hash::Hash&gt;::hash (1 samples, 0.13%)</title><rect x="2.5284%" y="981" width="0.1264%" height="15" fill="rgb(241,83,37)" fg:x="20" fg:w="1"/><text x="2.7784%" y="991.50"></text></g><g><title>&lt;std::path::Path as core::hash::Hash&gt;::hash (1 samples, 0.13%)</title><rect x="2.5284%" y="965" width="0.1264%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="1"/><text x="2.7784%" y="975.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.13%)</title><rect x="2.6549%" y="1013" width="0.1264%" height="15" fill="rgb(226,3,54)" fg:x="21" fg:w="1"/><text x="2.9049%" y="1023.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.13%)</title><rect x="2.6549%" y="997" width="0.1264%" height="15" fill="rgb(245,192,40)" fg:x="21" fg:w="1"/><text x="2.9049%" y="1007.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.13%)</title><rect x="2.6549%" y="981" width="0.1264%" height="15" fill="rgb(238,167,29)" fg:x="21" fg:w="1"/><text x="2.9049%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.13%)</title><rect x="2.6549%" y="965" width="0.1264%" height="15" fill="rgb(232,182,51)" fg:x="21" fg:w="1"/><text x="2.9049%" y="975.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="2.7813%" y="1013" width="0.2528%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="2"/><text x="3.0313%" y="1023.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="3.0341%" y="1013" width="0.1264%" height="15" fill="rgb(208,69,12)" fg:x="24" fg:w="1"/><text x="3.2841%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.13%)</title><rect x="3.1606%" y="1013" width="0.1264%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="1"/><text x="3.4106%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="3.1606%" y="997" width="0.1264%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="1"/><text x="3.4106%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.13%)</title><rect x="3.1606%" y="981" width="0.1264%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="1"/><text x="3.4106%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.13%)</title><rect x="3.1606%" y="965" width="0.1264%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="1"/><text x="3.4106%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.25%)</title><rect x="3.2870%" y="1013" width="0.2528%" height="15" fill="rgb(218,138,4)" fg:x="26" fg:w="2"/><text x="3.5370%" y="1023.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (1 samples, 0.13%)</title><rect x="3.5398%" y="1013" width="0.1264%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="1"/><text x="3.7898%" y="1023.50"></text></g><g><title>[[stack]] (16 samples, 2.02%)</title><rect x="2.6549%" y="1029" width="2.0228%" height="15" fill="rgb(239,60,40)" fg:x="21" fg:w="16"/><text x="2.9049%" y="1039.50">[..</text></g><g><title>rustracer::shape::Shape::intersect (8 samples, 1.01%)</title><rect x="3.6662%" y="1013" width="1.0114%" height="15" fill="rgb(206,27,48)" fg:x="29" fg:w="8"/><text x="3.9162%" y="1023.50"></text></g><g><title>glm::builtin::matrix::inverse (4 samples, 0.51%)</title><rect x="4.1719%" y="997" width="0.5057%" height="15" fill="rgb(225,35,8)" fg:x="33" fg:w="4"/><text x="4.4219%" y="1007.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (4 samples, 0.51%)</title><rect x="4.1719%" y="981" width="0.5057%" height="15" fill="rgb(250,213,24)" fg:x="33" fg:w="4"/><text x="4.4219%" y="991.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (4 samples, 0.51%)</title><rect x="4.1719%" y="965" width="0.5057%" height="15" fill="rgb(247,123,22)" fg:x="33" fg:w="4"/><text x="4.4219%" y="975.50"></text></g><g><title>[anon] (1 samples, 0.13%)</title><rect x="4.6776%" y="1029" width="0.1264%" height="15" fill="rgb(231,138,38)" fg:x="37" fg:w="1"/><text x="4.9276%" y="1039.50"></text></g><g><title>png::filter::filter (1 samples, 0.13%)</title><rect x="4.6776%" y="1013" width="0.1264%" height="15" fill="rgb(231,145,46)" fg:x="37" fg:w="1"/><text x="4.9276%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.13%)</title><rect x="4.6776%" y="997" width="0.1264%" height="15" fill="rgb(251,118,11)" fg:x="37" fg:w="1"/><text x="4.9276%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="4.6776%" y="981" width="0.1264%" height="15" fill="rgb(217,147,25)" fg:x="37" fg:w="1"/><text x="4.9276%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="4.8040%" y="1013" width="0.1264%" height="15" fill="rgb(247,81,37)" fg:x="38" fg:w="1"/><text x="5.0540%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="4.9305%" y="1013" width="0.2528%" height="15" fill="rgb(209,12,38)" fg:x="39" fg:w="2"/><text x="5.1805%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="1013" width="0.1264%" height="15" fill="rgb(227,1,9)" fg:x="41" fg:w="1"/><text x="5.4333%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="997" width="0.1264%" height="15" fill="rgb(248,47,43)" fg:x="41" fg:w="1"/><text x="5.4333%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="981" width="0.1264%" height="15" fill="rgb(221,10,30)" fg:x="41" fg:w="1"/><text x="5.4333%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="965" width="0.1264%" height="15" fill="rgb(210,229,1)" fg:x="41" fg:w="1"/><text x="5.4333%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="949" width="0.1264%" height="15" fill="rgb(222,148,37)" fg:x="41" fg:w="1"/><text x="5.4333%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="933" width="0.1264%" height="15" fill="rgb(234,67,33)" fg:x="41" fg:w="1"/><text x="5.4333%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="917" width="0.1264%" height="15" fill="rgb(247,98,35)" fg:x="41" fg:w="1"/><text x="5.4333%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="901" width="0.1264%" height="15" fill="rgb(247,138,52)" fg:x="41" fg:w="1"/><text x="5.4333%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="885" width="0.1264%" height="15" fill="rgb(213,79,30)" fg:x="41" fg:w="1"/><text x="5.4333%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.1833%" y="869" width="0.1264%" height="15" fill="rgb(246,177,23)" fg:x="41" fg:w="1"/><text x="5.4333%" y="879.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.13%)</title><rect x="5.3097%" y="1013" width="0.1264%" height="15" fill="rgb(230,62,27)" fg:x="42" fg:w="1"/><text x="5.5597%" y="1023.50"></text></g><g><title>__GI___ioctl (1 samples, 0.13%)</title><rect x="5.4362%" y="1013" width="0.1264%" height="15" fill="rgb(216,154,8)" fg:x="43" fg:w="1"/><text x="5.6862%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="5.4362%" y="997" width="0.1264%" height="15" fill="rgb(244,35,45)" fg:x="43" fg:w="1"/><text x="5.6862%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="5.5626%" y="1013" width="0.1264%" height="15" fill="rgb(251,115,12)" fg:x="44" fg:w="1"/><text x="5.8126%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.13%)</title><rect x="5.6890%" y="1013" width="0.1264%" height="15" fill="rgb(240,54,50)" fg:x="45" fg:w="1"/><text x="5.9390%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="5.8154%" y="1013" width="0.1264%" height="15" fill="rgb(233,84,52)" fg:x="46" fg:w="1"/><text x="6.0654%" y="1023.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::inc (2 samples, 0.25%)</title><rect x="5.9418%" y="1013" width="0.2528%" height="15" fill="rgb(207,117,47)" fg:x="47" fg:w="2"/><text x="6.1918%" y="1023.50"></text></g><g><title>png::decoder::stream::StreamingDecoder::update (1 samples, 0.13%)</title><rect x="6.1947%" y="1013" width="0.1264%" height="15" fill="rgb(249,43,39)" fg:x="49" fg:w="1"/><text x="6.4447%" y="1023.50"></text></g><g><title>png::decoder::stream::StreamingDecoder::next_state (1 samples, 0.13%)</title><rect x="6.1947%" y="997" width="0.1264%" height="15" fill="rgb(209,38,44)" fg:x="49" fg:w="1"/><text x="6.4447%" y="1007.50"></text></g><g><title>png::decoder::zlib::ZlibStream::decompress (1 samples, 0.13%)</title><rect x="6.1947%" y="981" width="0.1264%" height="15" fill="rgb(236,212,23)" fg:x="49" fg:w="1"/><text x="6.4447%" y="991.50"></text></g><g><title>miniz_oxide::inflate::core::decompress (1 samples, 0.13%)</title><rect x="6.1947%" y="965" width="0.1264%" height="15" fill="rgb(242,79,21)" fg:x="49" fg:w="1"/><text x="6.4447%" y="975.50"></text></g><g><title>miniz_oxide::inflate::core::decompress_fast (1 samples, 0.13%)</title><rect x="6.1947%" y="949" width="0.1264%" height="15" fill="rgb(211,96,35)" fg:x="49" fg:w="1"/><text x="6.4447%" y="959.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::lookup (1 samples, 0.13%)</title><rect x="6.1947%" y="933" width="0.1264%" height="15" fill="rgb(253,215,40)" fg:x="49" fg:w="1"/><text x="6.4447%" y="943.50"></text></g><g><title>miniz_oxide::inflate::core::HuffmanTable::fast_lookup (1 samples, 0.13%)</title><rect x="6.1947%" y="917" width="0.1264%" height="15" fill="rgb(211,81,21)" fg:x="49" fg:w="1"/><text x="6.4447%" y="927.50"></text></g><g><title>rustracer::lights::uv_lookup (2 samples, 0.25%)</title><rect x="6.3211%" y="1013" width="0.2528%" height="15" fill="rgb(208,190,38)" fg:x="50" fg:w="2"/><text x="6.5711%" y="1023.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (11 samples, 1.39%)</title><rect x="6.5740%" y="1013" width="1.3906%" height="15" fill="rgb(235,213,38)" fg:x="52" fg:w="11"/><text x="6.8240%" y="1023.50"></text></g><g><title>rustracer::raytracer::RayTracer::render::{{closure}} (3 samples, 0.38%)</title><rect x="7.9646%" y="1013" width="0.3793%" height="15" fill="rgb(237,122,38)" fg:x="63" fg:w="3"/><text x="8.2146%" y="1023.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (2 samples, 0.25%)</title><rect x="8.3439%" y="1013" width="0.2528%" height="15" fill="rgb(244,218,35)" fg:x="66" fg:w="2"/><text x="8.5939%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.13%)</title><rect x="8.4703%" y="997" width="0.1264%" height="15" fill="rgb(240,68,47)" fg:x="67" fg:w="1"/><text x="8.7203%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.13%)</title><rect x="8.4703%" y="981" width="0.1264%" height="15" fill="rgb(210,16,53)" fg:x="67" fg:w="1"/><text x="8.7203%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.13%)</title><rect x="8.4703%" y="965" width="0.1264%" height="15" fill="rgb(235,124,12)" fg:x="67" fg:w="1"/><text x="8.7203%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.4703%" y="949" width="0.1264%" height="15" fill="rgb(224,169,11)" fg:x="67" fg:w="1"/><text x="8.7203%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.4703%" y="933" width="0.1264%" height="15" fill="rgb(250,166,2)" fg:x="67" fg:w="1"/><text x="8.7203%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.4703%" y="917" width="0.1264%" height="15" fill="rgb(242,216,29)" fg:x="67" fg:w="1"/><text x="8.7203%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.13%)</title><rect x="8.4703%" y="901" width="0.1264%" height="15" fill="rgb(230,116,27)" fg:x="67" fg:w="1"/><text x="8.7203%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.4703%" y="885" width="0.1264%" height="15" fill="rgb(228,99,48)" fg:x="67" fg:w="1"/><text x="8.7203%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.13%)</title><rect x="8.4703%" y="869" width="0.1264%" height="15" fill="rgb(253,11,6)" fg:x="67" fg:w="1"/><text x="8.7203%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.13%)</title><rect x="8.4703%" y="853" width="0.1264%" height="15" fill="rgb(247,143,39)" fg:x="67" fg:w="1"/><text x="8.7203%" y="863.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (1 samples, 0.13%)</title><rect x="8.4703%" y="837" width="0.1264%" height="15" fill="rgb(236,97,10)" fg:x="67" fg:w="1"/><text x="8.7203%" y="847.50"></text></g><g><title>rustracer::shape::Shape::intersect (2 samples, 0.25%)</title><rect x="8.5967%" y="1013" width="0.2528%" height="15" fill="rgb(233,208,19)" fg:x="68" fg:w="2"/><text x="8.8467%" y="1023.50"></text></g><g><title>[unknown] (33 samples, 4.17%)</title><rect x="4.8040%" y="1029" width="4.1719%" height="15" fill="rgb(216,164,2)" fg:x="38" fg:w="33"/><text x="5.0540%" y="1039.50">[unkn..</text></g><g><title>std::path::Path::as_u8_slice (1 samples, 0.13%)</title><rect x="8.8496%" y="1013" width="0.1264%" height="15" fill="rgb(220,129,5)" fg:x="70" fg:w="1"/><text x="9.0996%" y="1023.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_zlib_encoded_idat (1 samples, 0.13%)</title><rect x="8.9760%" y="613" width="0.1264%" height="15" fill="rgb(242,17,10)" fg:x="71" fg:w="1"/><text x="9.2260%" y="623.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_chunk (1 samples, 0.13%)</title><rect x="8.9760%" y="597" width="0.1264%" height="15" fill="rgb(242,107,0)" fg:x="71" fg:w="1"/><text x="9.2260%" y="607.50"></text></g><g><title>png::encoder::write_chunk (1 samples, 0.13%)</title><rect x="8.9760%" y="581" width="0.1264%" height="15" fill="rgb(251,28,31)" fg:x="71" fg:w="1"/><text x="9.2260%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.13%)</title><rect x="8.9760%" y="565" width="0.1264%" height="15" fill="rgb(233,223,10)" fg:x="71" fg:w="1"/><text x="9.2260%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.13%)</title><rect x="8.9760%" y="549" width="0.1264%" height="15" fill="rgb(215,21,27)" fg:x="71" fg:w="1"/><text x="9.2260%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.13%)</title><rect x="8.9760%" y="533" width="0.1264%" height="15" fill="rgb(232,23,21)" fg:x="71" fg:w="1"/><text x="9.2260%" y="543.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.13%)</title><rect x="8.9760%" y="517" width="0.1264%" height="15" fill="rgb(244,5,23)" fg:x="71" fg:w="1"/><text x="9.2260%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="8.9760%" y="501" width="0.1264%" height="15" fill="rgb(226,81,46)" fg:x="71" fg:w="1"/><text x="9.2260%" y="511.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.13%)</title><rect x="8.9760%" y="485" width="0.1264%" height="15" fill="rgb(247,70,30)" fg:x="71" fg:w="1"/><text x="9.2260%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.13%)</title><rect x="8.9760%" y="469" width="0.1264%" height="15" fill="rgb(212,68,19)" fg:x="71" fg:w="1"/><text x="9.2260%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.13%)</title><rect x="8.9760%" y="453" width="0.1264%" height="15" fill="rgb(240,187,13)" fg:x="71" fg:w="1"/><text x="9.2260%" y="463.50"></text></g><g><title>__GI___libc_write (1 samples, 0.13%)</title><rect x="8.9760%" y="437" width="0.1264%" height="15" fill="rgb(223,113,26)" fg:x="71" fg:w="1"/><text x="9.2260%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="421" width="0.1264%" height="15" fill="rgb(206,192,2)" fg:x="71" fg:w="1"/><text x="9.2260%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="405" width="0.1264%" height="15" fill="rgb(241,108,4)" fg:x="71" fg:w="1"/><text x="9.2260%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="389" width="0.1264%" height="15" fill="rgb(247,173,49)" fg:x="71" fg:w="1"/><text x="9.2260%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="373" width="0.1264%" height="15" fill="rgb(224,114,35)" fg:x="71" fg:w="1"/><text x="9.2260%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="357" width="0.1264%" height="15" fill="rgb(245,159,27)" fg:x="71" fg:w="1"/><text x="9.2260%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="341" width="0.1264%" height="15" fill="rgb(245,172,44)" fg:x="71" fg:w="1"/><text x="9.2260%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="325" width="0.1264%" height="15" fill="rgb(236,23,11)" fg:x="71" fg:w="1"/><text x="9.2260%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="309" width="0.1264%" height="15" fill="rgb(205,117,38)" fg:x="71" fg:w="1"/><text x="9.2260%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="293" width="0.1264%" height="15" fill="rgb(237,72,25)" fg:x="71" fg:w="1"/><text x="9.2260%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="277" width="0.1264%" height="15" fill="rgb(244,70,9)" fg:x="71" fg:w="1"/><text x="9.2260%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="261" width="0.1264%" height="15" fill="rgb(217,125,39)" fg:x="71" fg:w="1"/><text x="9.2260%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="245" width="0.1264%" height="15" fill="rgb(235,36,10)" fg:x="71" fg:w="1"/><text x="9.2260%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="229" width="0.1264%" height="15" fill="rgb(251,123,47)" fg:x="71" fg:w="1"/><text x="9.2260%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="213" width="0.1264%" height="15" fill="rgb(221,13,13)" fg:x="71" fg:w="1"/><text x="9.2260%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="197" width="0.1264%" height="15" fill="rgb(238,131,9)" fg:x="71" fg:w="1"/><text x="9.2260%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="181" width="0.1264%" height="15" fill="rgb(211,50,8)" fg:x="71" fg:w="1"/><text x="9.2260%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="165" width="0.1264%" height="15" fill="rgb(245,182,24)" fg:x="71" fg:w="1"/><text x="9.2260%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="149" width="0.1264%" height="15" fill="rgb(242,14,37)" fg:x="71" fg:w="1"/><text x="9.2260%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="133" width="0.1264%" height="15" fill="rgb(246,228,12)" fg:x="71" fg:w="1"/><text x="9.2260%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="117" width="0.1264%" height="15" fill="rgb(213,55,15)" fg:x="71" fg:w="1"/><text x="9.2260%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="101" width="0.1264%" height="15" fill="rgb(209,9,3)" fg:x="71" fg:w="1"/><text x="9.2260%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="85" width="0.1264%" height="15" fill="rgb(230,59,30)" fg:x="71" fg:w="1"/><text x="9.2260%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="8.9760%" y="69" width="0.1264%" height="15" fill="rgb(209,121,21)" fg:x="71" fg:w="1"/><text x="9.2260%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.38%)</title><rect x="10.3666%" y="581" width="0.3793%" height="15" fill="rgb(220,109,13)" fg:x="82" fg:w="3"/><text x="10.6166%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (3 samples, 0.38%)</title><rect x="10.3666%" y="565" width="0.3793%" height="15" fill="rgb(232,18,1)" fg:x="82" fg:w="3"/><text x="10.6166%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (3 samples, 0.38%)</title><rect x="10.3666%" y="549" width="0.3793%" height="15" fill="rgb(215,41,42)" fg:x="82" fg:w="3"/><text x="10.6166%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.13%)</title><rect x="10.6195%" y="533" width="0.1264%" height="15" fill="rgb(224,123,36)" fg:x="84" fg:w="1"/><text x="10.8695%" y="543.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (2 samples, 0.25%)</title><rect x="10.7459%" y="581" width="0.2528%" height="15" fill="rgb(240,125,3)" fg:x="85" fg:w="2"/><text x="10.9959%" y="591.50"></text></g><g><title>png::filter::filter_internal (20 samples, 2.53%)</title><rect x="9.1024%" y="597" width="2.5284%" height="15" fill="rgb(205,98,50)" fg:x="72" fg:w="20"/><text x="9.3524%" y="607.50">pn..</text></g><g><title>png::filter::filter_paeth (5 samples, 0.63%)</title><rect x="10.9987%" y="581" width="0.6321%" height="15" fill="rgb(205,185,37)" fg:x="87" fg:w="5"/><text x="11.2487%" y="591.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (3 samples, 0.38%)</title><rect x="11.2516%" y="565" width="0.3793%" height="15" fill="rgb(238,207,15)" fg:x="89" fg:w="3"/><text x="11.5016%" y="575.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (9 samples, 1.14%)</title><rect x="11.8837%" y="549" width="1.1378%" height="15" fill="rgb(213,199,42)" fg:x="94" fg:w="9"/><text x="12.1337%" y="559.50"></text></g><g><title>png::filter::filter (33 samples, 4.17%)</title><rect x="9.1024%" y="613" width="4.1719%" height="15" fill="rgb(235,201,11)" fg:x="72" fg:w="33"/><text x="9.3524%" y="623.50">png::..</text></g><g><title>png::filter::sum_buffer (13 samples, 1.64%)</title><rect x="11.6308%" y="597" width="1.6435%" height="15" fill="rgb(207,46,11)" fg:x="92" fg:w="13"/><text x="11.8808%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 1.64%)</title><rect x="11.6308%" y="581" width="1.6435%" height="15" fill="rgb(241,35,35)" fg:x="92" fg:w="13"/><text x="11.8808%" y="591.50"></text></g><g><title>png::filter::sum_buffer::{{closure}} (11 samples, 1.39%)</title><rect x="11.8837%" y="565" width="1.3906%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="11"/><text x="12.1337%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (2 samples, 0.25%)</title><rect x="13.0215%" y="549" width="0.2528%" height="15" fill="rgb(247,202,23)" fg:x="103" fg:w="2"/><text x="13.2715%" y="559.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::save (37 samples, 4.68%)</title><rect x="8.9760%" y="741" width="4.6776%" height="15" fill="rgb(219,102,11)" fg:x="71" fg:w="37"/><text x="9.2260%" y="751.50">image..</text></g><g><title>image::dynimage::save_buffer (37 samples, 4.68%)</title><rect x="8.9760%" y="725" width="4.6776%" height="15" fill="rgb(243,110,44)" fg:x="71" fg:w="37"/><text x="9.2260%" y="735.50">image..</text></g><g><title>image::io::free_functions::save_buffer_impl (37 samples, 4.68%)</title><rect x="8.9760%" y="709" width="4.6776%" height="15" fill="rgb(222,74,54)" fg:x="71" fg:w="37"/><text x="9.2260%" y="719.50">image..</text></g><g><title>image::io::free_functions::save_buffer_with_format_impl (37 samples, 4.68%)</title><rect x="8.9760%" y="693" width="4.6776%" height="15" fill="rgb(216,99,12)" fg:x="71" fg:w="37"/><text x="9.2260%" y="703.50">image..</text></g><g><title>image::io::free_functions::write_buffer_impl (37 samples, 4.68%)</title><rect x="8.9760%" y="677" width="4.6776%" height="15" fill="rgb(226,22,26)" fg:x="71" fg:w="37"/><text x="9.2260%" y="687.50">image..</text></g><g><title>&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (37 samples, 4.68%)</title><rect x="8.9760%" y="661" width="4.6776%" height="15" fill="rgb(217,163,10)" fg:x="71" fg:w="37"/><text x="9.2260%" y="671.50">&lt;imag..</text></g><g><title>image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (37 samples, 4.68%)</title><rect x="8.9760%" y="645" width="4.6776%" height="15" fill="rgb(213,25,53)" fg:x="71" fg:w="37"/><text x="9.2260%" y="655.50">image..</text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (37 samples, 4.68%)</title><rect x="8.9760%" y="629" width="4.6776%" height="15" fill="rgb(252,105,26)" fg:x="71" fg:w="37"/><text x="9.2260%" y="639.50">png::..</text></g><g><title>std::io::Write::write_all (3 samples, 0.38%)</title><rect x="13.2743%" y="613" width="0.3793%" height="15" fill="rgb(220,39,43)" fg:x="105" fg:w="3"/><text x="13.5243%" y="623.50"></text></g><g><title>&lt;flate2::zlib::write::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.38%)</title><rect x="13.2743%" y="597" width="0.3793%" height="15" fill="rgb(229,68,48)" fg:x="105" fg:w="3"/><text x="13.5243%" y="607.50"></text></g><g><title>&lt;flate2::zio::Writer&lt;W,D&gt; as std::io::Write&gt;::write (3 samples, 0.38%)</title><rect x="13.2743%" y="581" width="0.3793%" height="15" fill="rgb(252,8,32)" fg:x="105" fg:w="3"/><text x="13.5243%" y="591.50"></text></g><g><title>flate2::zio::Writer&lt;W,D&gt;::write_with_status (3 samples, 0.38%)</title><rect x="13.2743%" y="565" width="0.3793%" height="15" fill="rgb(223,20,43)" fg:x="105" fg:w="3"/><text x="13.5243%" y="575.50"></text></g><g><title>&lt;flate2::mem::Compress as flate2::zio::Ops&gt;::run_vec (3 samples, 0.38%)</title><rect x="13.2743%" y="549" width="0.3793%" height="15" fill="rgb(229,81,49)" fg:x="105" fg:w="3"/><text x="13.5243%" y="559.50"></text></g><g><title>flate2::mem::Compress::compress_vec (3 samples, 0.38%)</title><rect x="13.2743%" y="533" width="0.3793%" height="15" fill="rgb(236,28,36)" fg:x="105" fg:w="3"/><text x="13.5243%" y="543.50"></text></g><g><title>flate2::mem::Compress::compress (3 samples, 0.38%)</title><rect x="13.2743%" y="517" width="0.3793%" height="15" fill="rgb(249,185,26)" fg:x="105" fg:w="3"/><text x="13.5243%" y="527.50"></text></g><g><title>&lt;flate2::ffi::rust::Deflate as flate2::ffi::DeflateBackend&gt;::compress (3 samples, 0.38%)</title><rect x="13.2743%" y="501" width="0.3793%" height="15" fill="rgb(249,174,33)" fg:x="105" fg:w="3"/><text x="13.5243%" y="511.50"></text></g><g><title>miniz_oxide::deflate::stream::deflate (3 samples, 0.38%)</title><rect x="13.2743%" y="485" width="0.3793%" height="15" fill="rgb(233,201,37)" fg:x="105" fg:w="3"/><text x="13.5243%" y="495.50"></text></g><g><title>miniz_oxide::deflate::core::compress (3 samples, 0.38%)</title><rect x="13.2743%" y="469" width="0.3793%" height="15" fill="rgb(221,78,26)" fg:x="105" fg:w="3"/><text x="13.5243%" y="479.50"></text></g><g><title>miniz_oxide::deflate::core::compress_inner (3 samples, 0.38%)</title><rect x="13.2743%" y="453" width="0.3793%" height="15" fill="rgb(250,127,30)" fg:x="105" fg:w="3"/><text x="13.5243%" y="463.50"></text></g><g><title>miniz_oxide::deflate::core::compress_fast (3 samples, 0.38%)</title><rect x="13.2743%" y="437" width="0.3793%" height="15" fill="rgb(230,49,44)" fg:x="105" fg:w="3"/><text x="13.5243%" y="447.50"></text></g><g><title>miniz_oxide::deflate::core::flush_block (1 samples, 0.13%)</title><rect x="13.5272%" y="421" width="0.1264%" height="15" fill="rgb(229,67,23)" fg:x="107" fg:w="1"/><text x="13.7772%" y="431.50"></text></g><g><title>miniz_oxide::deflate::core::compress_block (1 samples, 0.13%)</title><rect x="13.5272%" y="405" width="0.1264%" height="15" fill="rgb(249,83,47)" fg:x="107" fg:w="1"/><text x="13.7772%" y="415.50"></text></g><g><title>miniz_oxide::deflate::core::compress_lz_codes (1 samples, 0.13%)</title><rect x="13.5272%" y="389" width="0.1264%" height="15" fill="rgb(215,43,3)" fg:x="107" fg:w="1"/><text x="13.7772%" y="399.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (6 samples, 0.76%)</title><rect x="15.2971%" y="597" width="0.7585%" height="15" fill="rgb(238,154,13)" fg:x="121" fg:w="6"/><text x="15.5471%" y="607.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (6 samples, 0.76%)</title><rect x="15.2971%" y="581" width="0.7585%" height="15" fill="rgb(219,56,2)" fg:x="121" fg:w="6"/><text x="15.5471%" y="591.50"></text></g><g><title>glm::builtin::exp::inversesqrt (7 samples, 0.88%)</title><rect x="15.2971%" y="645" width="0.8850%" height="15" fill="rgb(233,0,4)" fg:x="121" fg:w="7"/><text x="15.5471%" y="655.50"></text></g><g><title>&lt;f32 as glm::traits::GenNum&lt;f32&gt;&gt;::map (7 samples, 0.88%)</title><rect x="15.2971%" y="629" width="0.8850%" height="15" fill="rgb(235,30,7)" fg:x="121" fg:w="7"/><text x="15.5471%" y="639.50"></text></g><g><title>glm::builtin::exp::inversesqrt::{{closure}} (7 samples, 0.88%)</title><rect x="15.2971%" y="613" width="0.8850%" height="15" fill="rgb(250,79,13)" fg:x="121" fg:w="7"/><text x="15.5471%" y="623.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (1 samples, 0.13%)</title><rect x="16.0556%" y="597" width="0.1264%" height="15" fill="rgb(211,146,34)" fg:x="127" fg:w="1"/><text x="16.3056%" y="607.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (1 samples, 0.13%)</title><rect x="16.0556%" y="581" width="0.1264%" height="15" fill="rgb(228,22,38)" fg:x="127" fg:w="1"/><text x="16.3056%" y="591.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="16.1820%" y="629" width="0.1264%" height="15" fill="rgb(235,168,5)" fg:x="128" fg:w="1"/><text x="16.4320%" y="639.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="16.1820%" y="613" width="0.1264%" height="15" fill="rgb(221,155,16)" fg:x="128" fg:w="1"/><text x="16.4320%" y="623.50"></text></g><g><title>glm::builtin::geom::normalize (10 samples, 1.26%)</title><rect x="15.2971%" y="661" width="1.2642%" height="15" fill="rgb(215,215,53)" fg:x="121" fg:w="10"/><text x="15.5471%" y="671.50"></text></g><g><title>glm::builtin::geom::dot (3 samples, 0.38%)</title><rect x="16.1820%" y="645" width="0.3793%" height="15" fill="rgb(223,4,10)" fg:x="128" fg:w="3"/><text x="16.4320%" y="655.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as glm::vec::traits::GenNumVec&lt;T&gt;&gt;::sum (2 samples, 0.25%)</title><rect x="16.3085%" y="629" width="0.2528%" height="15" fill="rgb(234,103,6)" fg:x="129" fg:w="2"/><text x="16.5585%" y="639.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (2 samples, 0.25%)</title><rect x="16.3085%" y="613" width="0.2528%" height="15" fill="rgb(227,97,0)" fg:x="129" fg:w="2"/><text x="16.5585%" y="623.50"></text></g><g><title>indicatif::state::AtomicPosition::allow (3 samples, 0.38%)</title><rect x="16.5613%" y="645" width="0.3793%" height="15" fill="rgb(234,150,53)" fg:x="131" fg:w="3"/><text x="16.8113%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.38%)</title><rect x="16.5613%" y="629" width="0.3793%" height="15" fill="rgb(228,201,54)" fg:x="131" fg:w="3"/><text x="16.8113%" y="639.50"></text></g><g><title>std::time::Instant::duration_since (2 samples, 0.25%)</title><rect x="16.6877%" y="613" width="0.2528%" height="15" fill="rgb(222,22,37)" fg:x="132" fg:w="2"/><text x="16.9377%" y="623.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.25%)</title><rect x="16.6877%" y="597" width="0.2528%" height="15" fill="rgb(237,53,32)" fg:x="132" fg:w="2"/><text x="16.9377%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (2 samples, 0.25%)</title><rect x="16.6877%" y="581" width="0.2528%" height="15" fill="rgb(233,25,53)" fg:x="132" fg:w="2"/><text x="16.9377%" y="591.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (2 samples, 0.25%)</title><rect x="16.6877%" y="565" width="0.2528%" height="15" fill="rgb(210,40,34)" fg:x="132" fg:w="2"/><text x="16.9377%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.25%)</title><rect x="16.6877%" y="549" width="0.2528%" height="15" fill="rgb(241,220,44)" fg:x="132" fg:w="2"/><text x="16.9377%" y="559.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.25%)</title><rect x="16.6877%" y="533" width="0.2528%" height="15" fill="rgb(235,28,35)" fg:x="132" fg:w="2"/><text x="16.9377%" y="543.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.13%)</title><rect x="16.8142%" y="517" width="0.1264%" height="15" fill="rgb(210,56,17)" fg:x="133" fg:w="1"/><text x="17.0642%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.13%)</title><rect x="16.8142%" y="501" width="0.1264%" height="15" fill="rgb(224,130,29)" fg:x="133" fg:w="1"/><text x="17.0642%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.13%)</title><rect x="16.8142%" y="485" width="0.1264%" height="15" fill="rgb(235,212,8)" fg:x="133" fg:w="1"/><text x="17.0642%" y="495.50"></text></g><g><title>indicatif::state::AtomicPosition::inc (2 samples, 0.25%)</title><rect x="16.9406%" y="645" width="0.2528%" height="15" fill="rgb(223,33,50)" fg:x="134" fg:w="2"/><text x="17.1906%" y="655.50"></text></g><g><title>portable_atomic::AtomicU64::fetch_add (2 samples, 0.25%)</title><rect x="16.9406%" y="629" width="0.2528%" height="15" fill="rgb(219,149,13)" fg:x="134" fg:w="2"/><text x="17.1906%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (2 samples, 0.25%)</title><rect x="16.9406%" y="613" width="0.2528%" height="15" fill="rgb(250,156,29)" fg:x="134" fg:w="2"/><text x="17.1906%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.25%)</title><rect x="16.9406%" y="597" width="0.2528%" height="15" fill="rgb(216,193,19)" fg:x="134" fg:w="2"/><text x="17.1906%" y="607.50"></text></g><g><title>[[vdso]] (16 samples, 2.02%)</title><rect x="17.1934%" y="613" width="2.0228%" height="15" fill="rgb(216,135,14)" fg:x="136" fg:w="16"/><text x="17.4434%" y="623.50">[..</text></g><g><title>[[vdso]] (11 samples, 1.39%)</title><rect x="17.8255%" y="597" width="1.3906%" height="15" fill="rgb(241,47,5)" fg:x="141" fg:w="11"/><text x="18.0755%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (17 samples, 2.15%)</title><rect x="17.1934%" y="645" width="2.1492%" height="15" fill="rgb(233,42,35)" fg:x="136" fg:w="17"/><text x="17.4434%" y="655.50">s..</text></g><g><title>__GI___clock_gettime (17 samples, 2.15%)</title><rect x="17.1934%" y="629" width="2.1492%" height="15" fill="rgb(231,13,6)" fg:x="136" fg:w="17"/><text x="17.4434%" y="639.50">_..</text></g><g><title>__vdso_clock_gettime (1 samples, 0.13%)</title><rect x="19.2162%" y="613" width="0.1264%" height="15" fill="rgb(207,181,40)" fg:x="152" fg:w="1"/><text x="19.4662%" y="623.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::inc (23 samples, 2.91%)</title><rect x="16.5613%" y="661" width="2.9077%" height="15" fill="rgb(254,173,49)" fg:x="131" fg:w="23"/><text x="16.8113%" y="671.50">in..</text></g><g><title>std::time::Instant::now (1 samples, 0.13%)</title><rect x="19.3426%" y="645" width="0.1264%" height="15" fill="rgb(221,1,38)" fg:x="153" fg:w="1"/><text x="19.5926%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.13%)</title><rect x="19.3426%" y="629" width="0.1264%" height="15" fill="rgb(206,124,46)" fg:x="153" fg:w="1"/><text x="19.5926%" y="639.50"></text></g><g><title>indicatif::draw_target::ProgressDrawTarget::width (1 samples, 0.13%)</title><rect x="19.4690%" y="597" width="0.1264%" height="15" fill="rgb(249,21,11)" fg:x="154" fg:w="1"/><text x="19.7190%" y="607.50"></text></g><g><title>console::term::Term::size (1 samples, 0.13%)</title><rect x="19.4690%" y="581" width="0.1264%" height="15" fill="rgb(222,201,40)" fg:x="154" fg:w="1"/><text x="19.7190%" y="591.50"></text></g><g><title>console::term::Term::size_checked (1 samples, 0.13%)</title><rect x="19.4690%" y="565" width="0.1264%" height="15" fill="rgb(235,61,29)" fg:x="154" fg:w="1"/><text x="19.7190%" y="575.50"></text></g><g><title>console::unix_term::terminal_size (1 samples, 0.13%)</title><rect x="19.4690%" y="549" width="0.1264%" height="15" fill="rgb(219,207,3)" fg:x="154" fg:w="1"/><text x="19.7190%" y="559.50"></text></g><g><title>__isatty (1 samples, 0.13%)</title><rect x="19.4690%" y="533" width="0.1264%" height="15" fill="rgb(222,56,46)" fg:x="154" fg:w="1"/><text x="19.7190%" y="543.50"></text></g><g><title>__GI___tcgetattr (1 samples, 0.13%)</title><rect x="19.4690%" y="517" width="0.1264%" height="15" fill="rgb(239,76,54)" fg:x="154" fg:w="1"/><text x="19.7190%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="19.4690%" y="501" width="0.1264%" height="15" fill="rgb(231,124,27)" fg:x="154" fg:w="1"/><text x="19.7190%" y="511.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::tick_inner (2 samples, 0.25%)</title><rect x="19.4690%" y="661" width="0.2528%" height="15" fill="rgb(249,195,6)" fg:x="154" fg:w="2"/><text x="19.7190%" y="671.50"></text></g><g><title>indicatif::state::BarState::tick (2 samples, 0.25%)</title><rect x="19.4690%" y="645" width="0.2528%" height="15" fill="rgb(237,174,47)" fg:x="154" fg:w="2"/><text x="19.7190%" y="655.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (2 samples, 0.25%)</title><rect x="19.4690%" y="629" width="0.2528%" height="15" fill="rgb(206,201,31)" fg:x="154" fg:w="2"/><text x="19.7190%" y="639.50"></text></g><g><title>indicatif::state::BarState::draw (2 samples, 0.25%)</title><rect x="19.4690%" y="613" width="0.2528%" height="15" fill="rgb(231,57,52)" fg:x="154" fg:w="2"/><text x="19.7190%" y="623.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (1 samples, 0.13%)</title><rect x="19.5954%" y="597" width="0.1264%" height="15" fill="rgb(248,177,22)" fg:x="155" fg:w="1"/><text x="19.8454%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.13%)</title><rect x="19.5954%" y="581" width="0.1264%" height="15" fill="rgb(215,211,37)" fg:x="155" fg:w="1"/><text x="19.8454%" y="591.50"></text></g><g><title>rustracer::lights::to_rgb (2 samples, 0.25%)</title><rect x="19.7219%" y="661" width="0.2528%" height="15" fill="rgb(241,128,51)" fg:x="156" fg:w="2"/><text x="19.9719%" y="671.50"></text></g><g><title>rustracer::lights::clamp_intensity (1 samples, 0.13%)</title><rect x="19.8483%" y="645" width="0.1264%" height="15" fill="rgb(227,165,31)" fg:x="157" fg:w="1"/><text x="20.0983%" y="655.50"></text></g><g><title>rustracer::raytracer::Ray::transform (8 samples, 1.01%)</title><rect x="19.9747%" y="661" width="1.0114%" height="15" fill="rgb(228,167,24)" fg:x="158" fg:w="8"/><text x="20.2247%" y="671.50"></text></g><g><title>glm::mat::mat::Matrix4&lt;T&gt;::mul_v (8 samples, 1.01%)</title><rect x="19.9747%" y="645" width="1.0114%" height="15" fill="rgb(228,143,12)" fg:x="158" fg:w="8"/><text x="20.2247%" y="655.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (7 samples, 0.88%)</title><rect x="20.1011%" y="629" width="0.8850%" height="15" fill="rgb(249,149,8)" fg:x="159" fg:w="7"/><text x="20.3511%" y="639.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="21.2389%" y="645" width="0.1264%" height="15" fill="rgb(243,35,44)" fg:x="168" fg:w="1"/><text x="21.4889%" y="655.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="21.2389%" y="629" width="0.1264%" height="15" fill="rgb(246,89,9)" fg:x="168" fg:w="1"/><text x="21.4889%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="21.3654%" y="453" width="0.1264%" height="15" fill="rgb(233,213,13)" fg:x="169" fg:w="1"/><text x="21.6154%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.25%)</title><rect x="21.4918%" y="453" width="0.2528%" height="15" fill="rgb(233,141,41)" fg:x="170" fg:w="2"/><text x="21.7418%" y="463.50"></text></g><g><title>glm::builtin::exp::inversesqrt (1 samples, 0.13%)</title><rect x="21.7446%" y="437" width="0.1264%" height="15" fill="rgb(239,167,4)" fg:x="172" fg:w="1"/><text x="21.9946%" y="447.50"></text></g><g><title>&lt;f32 as glm::traits::GenNum&lt;f32&gt;&gt;::map (1 samples, 0.13%)</title><rect x="21.7446%" y="421" width="0.1264%" height="15" fill="rgb(209,217,16)" fg:x="172" fg:w="1"/><text x="21.9946%" y="431.50"></text></g><g><title>glm::builtin::exp::inversesqrt::{{closure}} (1 samples, 0.13%)</title><rect x="21.7446%" y="405" width="0.1264%" height="15" fill="rgb(219,88,35)" fg:x="172" fg:w="1"/><text x="21.9946%" y="415.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (1 samples, 0.13%)</title><rect x="21.7446%" y="389" width="0.1264%" height="15" fill="rgb(220,193,23)" fg:x="172" fg:w="1"/><text x="21.9946%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (1 samples, 0.13%)</title><rect x="21.7446%" y="373" width="0.1264%" height="15" fill="rgb(230,90,52)" fg:x="172" fg:w="1"/><text x="21.9946%" y="383.50"></text></g><g><title>glm::builtin::geom::normalize (2 samples, 0.25%)</title><rect x="21.7446%" y="453" width="0.2528%" height="15" fill="rgb(252,106,19)" fg:x="172" fg:w="2"/><text x="21.9946%" y="463.50"></text></g><g><title>glm::builtin::geom::dot (1 samples, 0.13%)</title><rect x="21.8710%" y="437" width="0.1264%" height="15" fill="rgb(206,74,20)" fg:x="173" fg:w="1"/><text x="22.1210%" y="447.50"></text></g><g><title>&lt;glm::vec::vec::Vector3&lt;T&gt; as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="21.8710%" y="421" width="0.1264%" height="15" fill="rgb(230,138,44)" fg:x="173" fg:w="1"/><text x="22.1210%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="21.8710%" y="405" width="0.1264%" height="15" fill="rgb(235,182,43)" fg:x="173" fg:w="1"/><text x="22.1210%" y="415.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (2 samples, 0.25%)</title><rect x="22.1239%" y="421" width="0.2528%" height="15" fill="rgb(242,16,51)" fg:x="175" fg:w="2"/><text x="22.3739%" y="431.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (2 samples, 0.25%)</title><rect x="22.1239%" y="405" width="0.2528%" height="15" fill="rgb(248,9,4)" fg:x="175" fg:w="2"/><text x="22.3739%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (2 samples, 0.25%)</title><rect x="22.3767%" y="405" width="0.2528%" height="15" fill="rgb(210,31,22)" fg:x="177" fg:w="2"/><text x="22.6267%" y="415.50"></text></g><g><title>glm::builtin::matrix::inverse (9 samples, 1.14%)</title><rect x="21.9975%" y="453" width="1.1378%" height="15" fill="rgb(239,54,39)" fg:x="174" fg:w="9"/><text x="22.2475%" y="463.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (9 samples, 1.14%)</title><rect x="21.9975%" y="437" width="1.1378%" height="15" fill="rgb(230,99,41)" fg:x="174" fg:w="9"/><text x="22.2475%" y="447.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (6 samples, 0.76%)</title><rect x="22.3767%" y="421" width="0.7585%" height="15" fill="rgb(253,106,12)" fg:x="177" fg:w="6"/><text x="22.6267%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (4 samples, 0.51%)</title><rect x="22.6296%" y="405" width="0.5057%" height="15" fill="rgb(213,46,41)" fg:x="179" fg:w="4"/><text x="22.8796%" y="415.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (2 samples, 0.25%)</title><rect x="23.2617%" y="421" width="0.2528%" height="15" fill="rgb(215,133,35)" fg:x="184" fg:w="2"/><text x="23.5117%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.13%)</title><rect x="23.3881%" y="405" width="0.1264%" height="15" fill="rgb(213,28,5)" fg:x="185" fg:w="1"/><text x="23.6381%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.25%)</title><rect x="23.5145%" y="421" width="0.2528%" height="15" fill="rgb(215,77,49)" fg:x="186" fg:w="2"/><text x="23.7645%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="23.6410%" y="405" width="0.1264%" height="15" fill="rgb(248,100,22)" fg:x="187" fg:w="1"/><text x="23.8910%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="23.6410%" y="389" width="0.1264%" height="15" fill="rgb(208,67,9)" fg:x="187" fg:w="1"/><text x="23.8910%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="23.6410%" y="373" width="0.1264%" height="15" fill="rgb(219,133,21)" fg:x="187" fg:w="1"/><text x="23.8910%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="23.6410%" y="357" width="0.1264%" height="15" fill="rgb(246,46,29)" fg:x="187" fg:w="1"/><text x="23.8910%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="23.6410%" y="341" width="0.1264%" height="15" fill="rgb(246,185,52)" fg:x="187" fg:w="1"/><text x="23.8910%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="23.6410%" y="325" width="0.1264%" height="15" fill="rgb(252,136,11)" fg:x="187" fg:w="1"/><text x="23.8910%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="23.6410%" y="309" width="0.1264%" height="15" fill="rgb(219,138,53)" fg:x="187" fg:w="1"/><text x="23.8910%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="23.6410%" y="293" width="0.1264%" height="15" fill="rgb(211,51,23)" fg:x="187" fg:w="1"/><text x="23.8910%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="23.6410%" y="277" width="0.1264%" height="15" fill="rgb(247,221,28)" fg:x="187" fg:w="1"/><text x="23.8910%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="23.6410%" y="261" width="0.1264%" height="15" fill="rgb(251,222,45)" fg:x="187" fg:w="1"/><text x="23.8910%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="23.6410%" y="245" width="0.1264%" height="15" fill="rgb(217,162,53)" fg:x="187" fg:w="1"/><text x="23.8910%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="23.6410%" y="229" width="0.1264%" height="15" fill="rgb(229,93,14)" fg:x="187" fg:w="1"/><text x="23.8910%" y="239.50"></text></g><g><title>tcache_put (1 samples, 0.13%)</title><rect x="23.6410%" y="213" width="0.1264%" height="15" fill="rgb(209,67,49)" fg:x="187" fg:w="1"/><text x="23.8910%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="24.1466%" y="405" width="0.1264%" height="15" fill="rgb(213,87,29)" fg:x="191" fg:w="1"/><text x="24.3966%" y="415.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (9 samples, 1.14%)</title><rect x="23.2617%" y="437" width="1.1378%" height="15" fill="rgb(205,151,52)" fg:x="184" fg:w="9"/><text x="23.5117%" y="447.50"></text></g><g><title>rustracer::primitive::solve_quadratic (5 samples, 0.63%)</title><rect x="23.7674%" y="421" width="0.6321%" height="15" fill="rgb(253,215,39)" fg:x="188" fg:w="5"/><text x="24.0174%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.13%)</title><rect x="24.2731%" y="405" width="0.1264%" height="15" fill="rgb(221,220,41)" fg:x="192" fg:w="1"/><text x="24.5231%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 3.29%)</title><rect x="21.3654%" y="597" width="3.2870%" height="15" fill="rgb(218,133,21)" fg:x="169" fg:w="26"/><text x="21.6154%" y="607.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 3.29%)</title><rect x="21.3654%" y="581" width="3.2870%" height="15" fill="rgb(221,193,43)" fg:x="169" fg:w="26"/><text x="21.6154%" y="591.50">&lt;co..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (26 samples, 3.29%)</title><rect x="21.3654%" y="565" width="3.2870%" height="15" fill="rgb(240,128,52)" fg:x="169" fg:w="26"/><text x="21.6154%" y="575.50">cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 3.29%)</title><rect x="21.3654%" y="549" width="3.2870%" height="15" fill="rgb(253,114,12)" fg:x="169" fg:w="26"/><text x="21.6154%" y="559.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 3.29%)</title><rect x="21.3654%" y="533" width="3.2870%" height="15" fill="rgb(215,223,47)" fg:x="169" fg:w="26"/><text x="21.6154%" y="543.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 3.29%)</title><rect x="21.3654%" y="517" width="3.2870%" height="15" fill="rgb(248,225,23)" fg:x="169" fg:w="26"/><text x="21.6154%" y="527.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 3.29%)</title><rect x="21.3654%" y="501" width="3.2870%" height="15" fill="rgb(250,108,0)" fg:x="169" fg:w="26"/><text x="21.6154%" y="511.50">cor..</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (26 samples, 3.29%)</title><rect x="21.3654%" y="485" width="3.2870%" height="15" fill="rgb(228,208,7)" fg:x="169" fg:w="26"/><text x="21.6154%" y="495.50">rus..</text></g><g><title>rustracer::shape::Shape::intersect (26 samples, 3.29%)</title><rect x="21.3654%" y="469" width="3.2870%" height="15" fill="rgb(244,45,10)" fg:x="169" fg:w="26"/><text x="21.6154%" y="479.50">rus..</text></g><g><title>rustracer::primitive::Primitive::intersect (12 samples, 1.52%)</title><rect x="23.1353%" y="453" width="1.5171%" height="15" fill="rgb(207,125,25)" fg:x="183" fg:w="12"/><text x="23.3853%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2 samples, 0.25%)</title><rect x="24.3995%" y="437" width="0.2528%" height="15" fill="rgb(210,195,18)" fg:x="193" fg:w="2"/><text x="24.6495%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2 samples, 0.25%)</title><rect x="24.3995%" y="421" width="0.2528%" height="15" fill="rgb(249,80,12)" fg:x="193" fg:w="2"/><text x="24.6495%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.25%)</title><rect x="24.3995%" y="405" width="0.2528%" height="15" fill="rgb(221,65,9)" fg:x="193" fg:w="2"/><text x="24.6495%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="24.3995%" y="389" width="0.2528%" height="15" fill="rgb(235,49,36)" fg:x="193" fg:w="2"/><text x="24.6495%" y="399.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="24.5259%" y="373" width="0.1264%" height="15" fill="rgb(225,32,20)" fg:x="194" fg:w="1"/><text x="24.7759%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.51%)</title><rect x="25.6637%" y="453" width="0.5057%" height="15" fill="rgb(215,141,46)" fg:x="203" fg:w="4"/><text x="25.9137%" y="463.50"></text></g><g><title>&lt;glm::mat::mat::Matrix3&lt;T&gt; as core::ops::arith::Mul&lt;glm::vec::vec::Vector3&lt;T&gt;&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="26.1694%" y="453" width="0.1264%" height="15" fill="rgb(250,160,47)" fg:x="207" fg:w="1"/><text x="26.4194%" y="463.50"></text></g><g><title>glm::mat::mat::Matrix3&lt;T&gt;::mul_v (1 samples, 0.13%)</title><rect x="26.1694%" y="437" width="0.1264%" height="15" fill="rgb(216,222,40)" fg:x="207" fg:w="1"/><text x="26.4194%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="26.1694%" y="421" width="0.1264%" height="15" fill="rgb(234,217,39)" fg:x="207" fg:w="1"/><text x="26.4194%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (2 samples, 0.25%)</title><rect x="26.5487%" y="421" width="0.2528%" height="15" fill="rgb(207,178,40)" fg:x="210" fg:w="2"/><text x="26.7987%" y="431.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (1 samples, 0.13%)</title><rect x="26.8015%" y="421" width="0.1264%" height="15" fill="rgb(221,136,13)" fg:x="212" fg:w="1"/><text x="27.0515%" y="431.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (1 samples, 0.13%)</title><rect x="26.8015%" y="405" width="0.1264%" height="15" fill="rgb(249,199,10)" fg:x="212" fg:w="1"/><text x="27.0515%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::inverse (5 samples, 0.63%)</title><rect x="26.4223%" y="437" width="0.6321%" height="15" fill="rgb(249,222,13)" fg:x="209" fg:w="5"/><text x="26.6723%" y="447.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="26.9279%" y="421" width="0.1264%" height="15" fill="rgb(244,185,38)" fg:x="213" fg:w="1"/><text x="27.1779%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1 samples, 0.13%)</title><rect x="26.9279%" y="405" width="0.1264%" height="15" fill="rgb(236,202,9)" fg:x="213" fg:w="1"/><text x="27.1779%" y="415.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (8 samples, 1.01%)</title><rect x="27.1808%" y="421" width="1.0114%" height="15" fill="rgb(250,229,37)" fg:x="215" fg:w="8"/><text x="27.4308%" y="431.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (8 samples, 1.01%)</title><rect x="27.1808%" y="405" width="1.0114%" height="15" fill="rgb(206,174,23)" fg:x="215" fg:w="8"/><text x="27.4308%" y="415.50"></text></g><g><title>glm::basenum::ApproxEq::is_approx_eq (2 samples, 0.25%)</title><rect x="28.1922%" y="421" width="0.2528%" height="15" fill="rgb(211,33,43)" fg:x="223" fg:w="2"/><text x="28.4422%" y="431.50"></text></g><g><title>&lt;f32 as glm::basenum::ApproxEq&gt;::is_close_to (2 samples, 0.25%)</title><rect x="28.1922%" y="405" width="0.2528%" height="15" fill="rgb(245,58,50)" fg:x="223" fg:w="2"/><text x="28.4422%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (2 samples, 0.25%)</title><rect x="28.1922%" y="389" width="0.2528%" height="15" fill="rgb(244,68,36)" fg:x="223" fg:w="2"/><text x="28.4422%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (7 samples, 0.88%)</title><rect x="29.3300%" y="405" width="0.8850%" height="15" fill="rgb(232,229,15)" fg:x="232" fg:w="7"/><text x="29.5800%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (27 samples, 3.41%)</title><rect x="30.2149%" y="405" width="3.4134%" height="15" fill="rgb(254,30,23)" fg:x="239" fg:w="27"/><text x="30.4649%" y="415.50">&lt;f3..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (54 samples, 6.83%)</title><rect x="28.4450%" y="421" width="6.8268%" height="15" fill="rgb(235,160,14)" fg:x="225" fg:w="54"/><text x="28.6950%" y="431.50">glm::mat:..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (13 samples, 1.64%)</title><rect x="33.6283%" y="405" width="1.6435%" height="15" fill="rgb(212,155,44)" fg:x="266" fg:w="13"/><text x="33.8783%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (9 samples, 1.14%)</title><rect x="35.2718%" y="405" width="1.1378%" height="15" fill="rgb(226,2,50)" fg:x="279" fg:w="9"/><text x="35.5218%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="36.4096%" y="389" width="0.1264%" height="15" fill="rgb(234,177,6)" fg:x="288" fg:w="1"/><text x="36.6596%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (26 samples, 3.29%)</title><rect x="36.5360%" y="389" width="3.2870%" height="15" fill="rgb(217,24,9)" fg:x="289" fg:w="26"/><text x="36.7860%" y="399.50">&lt;f3..</text></g><g><title>glm::builtin::matrix::inverse (116 samples, 14.66%)</title><rect x="26.2958%" y="453" width="14.6650%" height="15" fill="rgb(220,13,46)" fg:x="208" fg:w="116"/><text x="26.5458%" y="463.50">glm::builtin::matrix::..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (110 samples, 13.91%)</title><rect x="27.0544%" y="437" width="13.9064%" height="15" fill="rgb(239,221,27)" fg:x="214" fg:w="110"/><text x="27.3044%" y="447.50">glm::mat::sqmat::&lt;imp..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (45 samples, 5.69%)</title><rect x="35.2718%" y="421" width="5.6890%" height="15" fill="rgb(222,198,25)" fg:x="279" fg:w="45"/><text x="35.5218%" y="431.50">glm::ma..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (36 samples, 4.55%)</title><rect x="36.4096%" y="405" width="4.5512%" height="15" fill="rgb(211,99,13)" fg:x="288" fg:w="36"/><text x="36.6596%" y="415.50">glm::..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (9 samples, 1.14%)</title><rect x="39.8230%" y="389" width="1.1378%" height="15" fill="rgb(232,111,31)" fg:x="315" fg:w="9"/><text x="40.0730%" y="399.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (23 samples, 2.91%)</title><rect x="41.4665%" y="421" width="2.9077%" height="15" fill="rgb(245,82,37)" fg:x="328" fg:w="23"/><text x="41.7165%" y="431.50">&lt;r..</text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="405" width="0.7585%" height="15" fill="rgb(227,149,46)" fg:x="345" fg:w="6"/><text x="43.8657%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="389" width="0.7585%" height="15" fill="rgb(218,36,50)" fg:x="345" fg:w="6"/><text x="43.8657%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="373" width="0.7585%" height="15" fill="rgb(226,80,48)" fg:x="345" fg:w="6"/><text x="43.8657%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="357" width="0.7585%" height="15" fill="rgb(238,224,15)" fg:x="345" fg:w="6"/><text x="43.8657%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="341" width="0.7585%" height="15" fill="rgb(241,136,10)" fg:x="345" fg:w="6"/><text x="43.8657%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="325" width="0.7585%" height="15" fill="rgb(208,32,45)" fg:x="345" fg:w="6"/><text x="43.8657%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="309" width="0.7585%" height="15" fill="rgb(207,135,9)" fg:x="345" fg:w="6"/><text x="43.8657%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="293" width="0.7585%" height="15" fill="rgb(206,86,44)" fg:x="345" fg:w="6"/><text x="43.8657%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="277" width="0.7585%" height="15" fill="rgb(245,177,15)" fg:x="345" fg:w="6"/><text x="43.8657%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="261" width="0.7585%" height="15" fill="rgb(206,64,50)" fg:x="345" fg:w="6"/><text x="43.8657%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.76%)</title><rect x="43.6157%" y="245" width="0.7585%" height="15" fill="rgb(234,36,40)" fg:x="345" fg:w="6"/><text x="43.8657%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="43.7421%" y="229" width="0.6321%" height="15" fill="rgb(213,64,8)" fg:x="346" fg:w="5"/><text x="43.9921%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.63%)</title><rect x="43.7421%" y="213" width="0.6321%" height="15" fill="rgb(210,75,36)" fg:x="346" fg:w="5"/><text x="43.9921%" y="223.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::asin (6 samples, 0.76%)</title><rect x="44.8799%" y="405" width="0.7585%" height="15" fill="rgb(229,88,21)" fg:x="355" fg:w="6"/><text x="45.1299%" y="415.50"></text></g><g><title>__ieee754_asinf (6 samples, 0.76%)</title><rect x="44.8799%" y="389" width="0.7585%" height="15" fill="rgb(252,204,47)" fg:x="355" fg:w="6"/><text x="45.1299%" y="399.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::uv_at_intersection (13 samples, 1.64%)</title><rect x="44.3742%" y="421" width="1.6435%" height="15" fill="rgb(208,77,27)" fg:x="351" fg:w="13"/><text x="44.6242%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::atan2 (3 samples, 0.38%)</title><rect x="45.6384%" y="405" width="0.3793%" height="15" fill="rgb(221,76,26)" fg:x="361" fg:w="3"/><text x="45.8884%" y="415.50"></text></g><g><title>__atan2f (3 samples, 0.38%)</title><rect x="45.6384%" y="389" width="0.3793%" height="15" fill="rgb(225,139,18)" fg:x="361" fg:w="3"/><text x="45.8884%" y="399.50"></text></g><g><title>__ieee754_atan2f (3 samples, 0.38%)</title><rect x="45.6384%" y="373" width="0.3793%" height="15" fill="rgb(230,137,11)" fg:x="361" fg:w="3"/><text x="45.8884%" y="383.50"></text></g><g><title>__atanf (3 samples, 0.38%)</title><rect x="45.6384%" y="357" width="0.3793%" height="15" fill="rgb(212,28,1)" fg:x="361" fg:w="3"/><text x="45.8884%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="46.2705%" y="405" width="0.1264%" height="15" fill="rgb(248,164,17)" fg:x="366" fg:w="1"/><text x="46.5205%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="46.2705%" y="389" width="0.1264%" height="15" fill="rgb(222,171,42)" fg:x="366" fg:w="1"/><text x="46.5205%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="46.2705%" y="373" width="0.1264%" height="15" fill="rgb(243,84,45)" fg:x="366" fg:w="1"/><text x="46.5205%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="46.2705%" y="357" width="0.1264%" height="15" fill="rgb(252,49,23)" fg:x="366" fg:w="1"/><text x="46.5205%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="46.2705%" y="341" width="0.1264%" height="15" fill="rgb(215,19,7)" fg:x="366" fg:w="1"/><text x="46.5205%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="46.2705%" y="325" width="0.1264%" height="15" fill="rgb(238,81,41)" fg:x="366" fg:w="1"/><text x="46.5205%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="46.2705%" y="309" width="0.1264%" height="15" fill="rgb(210,199,37)" fg:x="366" fg:w="1"/><text x="46.5205%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="46.2705%" y="293" width="0.1264%" height="15" fill="rgb(244,192,49)" fg:x="366" fg:w="1"/><text x="46.5205%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="46.2705%" y="277" width="0.1264%" height="15" fill="rgb(226,211,11)" fg:x="366" fg:w="1"/><text x="46.5205%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="46.2705%" y="261" width="0.1264%" height="15" fill="rgb(236,162,54)" fg:x="366" fg:w="1"/><text x="46.5205%" y="271.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.13%)</title><rect x="46.2705%" y="245" width="0.1264%" height="15" fill="rgb(220,229,9)" fg:x="366" fg:w="1"/><text x="46.5205%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.13%)</title><rect x="46.2705%" y="229" width="0.1264%" height="15" fill="rgb(250,87,22)" fg:x="366" fg:w="1"/><text x="46.5205%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4 samples, 0.51%)</title><rect x="46.0177%" y="421" width="0.5057%" height="15" fill="rgb(239,43,17)" fg:x="364" fg:w="4"/><text x="46.2677%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="46.3970%" y="405" width="0.1264%" height="15" fill="rgb(231,177,25)" fg:x="367" fg:w="1"/><text x="46.6470%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="46.3970%" y="389" width="0.1264%" height="15" fill="rgb(219,179,1)" fg:x="367" fg:w="1"/><text x="46.6470%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="46.3970%" y="373" width="0.1264%" height="15" fill="rgb(238,219,53)" fg:x="367" fg:w="1"/><text x="46.6470%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.13%)</title><rect x="46.3970%" y="357" width="0.1264%" height="15" fill="rgb(232,167,36)" fg:x="367" fg:w="1"/><text x="46.6470%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.13%)</title><rect x="46.3970%" y="341" width="0.1264%" height="15" fill="rgb(244,19,51)" fg:x="367" fg:w="1"/><text x="46.6470%" y="351.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}} (1 samples, 0.13%)</title><rect x="46.3970%" y="325" width="0.1264%" height="15" fill="rgb(224,6,22)" fg:x="367" fg:w="1"/><text x="46.6470%" y="335.50"></text></g><g><title>rustracer::raytracer::Ray::at (1 samples, 0.13%)</title><rect x="46.3970%" y="309" width="0.1264%" height="15" fill="rgb(224,145,5)" fg:x="367" fg:w="1"/><text x="46.6470%" y="319.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="46.3970%" y="293" width="0.1264%" height="15" fill="rgb(234,130,49)" fg:x="367" fg:w="1"/><text x="46.6470%" y="303.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="46.3970%" y="277" width="0.1264%" height="15" fill="rgb(254,6,2)" fg:x="367" fg:w="1"/><text x="46.6470%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.25%)</title><rect x="48.1669%" y="405" width="0.2528%" height="15" fill="rgb(208,96,46)" fg:x="381" fg:w="2"/><text x="48.4169%" y="415.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (64 samples, 8.09%)</title><rect x="41.4665%" y="437" width="8.0910%" height="15" fill="rgb(239,3,39)" fg:x="328" fg:w="64"/><text x="41.7165%" y="447.50">&lt;T as rustr..</text></g><g><title>rustracer::primitive::solve_quadratic (24 samples, 3.03%)</title><rect x="46.5234%" y="421" width="3.0341%" height="15" fill="rgb(233,210,1)" fg:x="368" fg:w="24"/><text x="46.7734%" y="431.50">rus..</text></g><g><title>std::f32::&lt;impl f32&gt;::powi (9 samples, 1.14%)</title><rect x="48.4197%" y="405" width="1.1378%" height="15" fill="rgb(244,137,37)" fg:x="383" fg:w="9"/><text x="48.6697%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="49.5575%" y="437" width="0.1264%" height="15" fill="rgb(240,136,2)" fg:x="392" fg:w="1"/><text x="49.8075%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.13%)</title><rect x="49.6839%" y="437" width="0.1264%" height="15" fill="rgb(239,18,37)" fg:x="393" fg:w="1"/><text x="49.9339%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.13%)</title><rect x="49.6839%" y="421" width="0.1264%" height="15" fill="rgb(218,185,22)" fg:x="393" fg:w="1"/><text x="49.9339%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="49.6839%" y="405" width="0.1264%" height="15" fill="rgb(225,218,4)" fg:x="393" fg:w="1"/><text x="49.9339%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.13%)</title><rect x="49.6839%" y="389" width="0.1264%" height="15" fill="rgb(230,182,32)" fg:x="393" fg:w="1"/><text x="49.9339%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.25%)</title><rect x="49.8104%" y="437" width="0.2528%" height="15" fill="rgb(242,56,43)" fg:x="394" fg:w="2"/><text x="50.0604%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="50.0632%" y="389" width="0.2528%" height="15" fill="rgb(233,99,24)" fg:x="396" fg:w="2"/><text x="50.3132%" y="399.50"></text></g><g><title>core::ptr::read (2 samples, 0.25%)</title><rect x="50.0632%" y="373" width="0.2528%" height="15" fill="rgb(234,209,42)" fg:x="396" fg:w="2"/><text x="50.3132%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="50.3161%" y="389" width="0.1264%" height="15" fill="rgb(227,7,12)" fg:x="398" fg:w="1"/><text x="50.5661%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (1 samples, 0.13%)</title><rect x="50.3161%" y="373" width="0.1264%" height="15" fill="rgb(245,203,43)" fg:x="398" fg:w="1"/><text x="50.5661%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="50.3161%" y="357" width="0.1264%" height="15" fill="rgb(238,205,33)" fg:x="398" fg:w="1"/><text x="50.5661%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rustracer::intersection::ComponentIntersection,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="50.3161%" y="341" width="0.1264%" height="15" fill="rgb(231,56,7)" fg:x="398" fg:w="1"/><text x="50.5661%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="50.3161%" y="325" width="0.1264%" height="15" fill="rgb(244,186,29)" fg:x="398" fg:w="1"/><text x="50.5661%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (1 samples, 0.13%)</title><rect x="50.3161%" y="309" width="0.1264%" height="15" fill="rgb(234,111,31)" fg:x="398" fg:w="1"/><text x="50.5661%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="50.3161%" y="293" width="0.1264%" height="15" fill="rgb(241,149,10)" fg:x="398" fg:w="1"/><text x="50.5661%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="50.3161%" y="277" width="0.1264%" height="15" fill="rgb(249,206,44)" fg:x="398" fg:w="1"/><text x="50.5661%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="50.3161%" y="261" width="0.1264%" height="15" fill="rgb(251,153,30)" fg:x="398" fg:w="1"/><text x="50.5661%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="50.3161%" y="245" width="0.1264%" height="15" fill="rgb(239,152,38)" fg:x="398" fg:w="1"/><text x="50.5661%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="50.3161%" y="229" width="0.1264%" height="15" fill="rgb(249,139,47)" fg:x="398" fg:w="1"/><text x="50.5661%" y="239.50"></text></g><g><title>tcache_put (1 samples, 0.13%)</title><rect x="50.3161%" y="213" width="0.1264%" height="15" fill="rgb(244,64,35)" fg:x="398" fg:w="1"/><text x="50.5661%" y="223.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (78 samples, 9.86%)</title><rect x="40.9608%" y="453" width="9.8609%" height="15" fill="rgb(216,46,15)" fg:x="324" fg:w="78"/><text x="41.2108%" y="463.50">rustracer::pri..</text></g><g><title>core::iter::traits::iterator::Iterator::min (6 samples, 0.76%)</title><rect x="50.0632%" y="437" width="0.7585%" height="15" fill="rgb(250,74,19)" fg:x="396" fg:w="6"/><text x="50.3132%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6 samples, 0.76%)</title><rect x="50.0632%" y="421" width="0.7585%" height="15" fill="rgb(249,42,33)" fg:x="396" fg:w="6"/><text x="50.3132%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.76%)</title><rect x="50.0632%" y="405" width="0.7585%" height="15" fill="rgb(242,149,17)" fg:x="396" fg:w="6"/><text x="50.3132%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (3 samples, 0.38%)</title><rect x="50.4425%" y="389" width="0.3793%" height="15" fill="rgb(244,29,21)" fg:x="399" fg:w="3"/><text x="50.6925%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="50.4425%" y="373" width="0.3793%" height="15" fill="rgb(220,130,37)" fg:x="399" fg:w="3"/><text x="50.6925%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rustracer::intersection::ComponentIntersection,alloc::alloc::Global&gt;&gt; (3 samples, 0.38%)</title><rect x="50.4425%" y="357" width="0.3793%" height="15" fill="rgb(211,67,2)" fg:x="399" fg:w="3"/><text x="50.6925%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="50.4425%" y="341" width="0.3793%" height="15" fill="rgb(235,68,52)" fg:x="399" fg:w="3"/><text x="50.6925%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (3 samples, 0.38%)</title><rect x="50.4425%" y="325" width="0.3793%" height="15" fill="rgb(246,142,3)" fg:x="399" fg:w="3"/><text x="50.6925%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="50.4425%" y="309" width="0.3793%" height="15" fill="rgb(241,25,7)" fg:x="399" fg:w="3"/><text x="50.6925%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.38%)</title><rect x="50.4425%" y="293" width="0.3793%" height="15" fill="rgb(242,119,39)" fg:x="399" fg:w="3"/><text x="50.6925%" y="303.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (4 samples, 0.51%)</title><rect x="51.8331%" y="405" width="0.5057%" height="15" fill="rgb(241,98,45)" fg:x="410" fg:w="4"/><text x="52.0831%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 27.05%)</title><rect x="25.5373%" y="565" width="27.0544%" height="15" fill="rgb(254,28,30)" fg:x="202" fg:w="214"/><text x="25.7873%" y="575.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (214 samples, 27.05%)</title><rect x="25.5373%" y="549" width="27.0544%" height="15" fill="rgb(241,142,54)" fg:x="202" fg:w="214"/><text x="25.7873%" y="559.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 27.05%)</title><rect x="25.5373%" y="533" width="27.0544%" height="15" fill="rgb(222,85,15)" fg:x="202" fg:w="214"/><text x="25.7873%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (214 samples, 27.05%)</title><rect x="25.5373%" y="517" width="27.0544%" height="15" fill="rgb(210,85,47)" fg:x="202" fg:w="214"/><text x="25.7873%" y="527.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (214 samples, 27.05%)</title><rect x="25.5373%" y="501" width="27.0544%" height="15" fill="rgb(224,206,25)" fg:x="202" fg:w="214"/><text x="25.7873%" y="511.50">core::ops::function::impls::&lt;impl core::ops..</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (214 samples, 27.05%)</title><rect x="25.5373%" y="485" width="27.0544%" height="15" fill="rgb(243,201,19)" fg:x="202" fg:w="214"/><text x="25.7873%" y="495.50">rustracer::raytracer::RayTracer::trace_ray:..</text></g><g><title>rustracer::shape::Shape::intersect (214 samples, 27.05%)</title><rect x="25.5373%" y="469" width="27.0544%" height="15" fill="rgb(236,59,4)" fg:x="202" fg:w="214"/><text x="25.7873%" y="479.50">rustracer::shape::Shape::intersect</text></g><g><title>rustracer::raytracer::Ray::to_object_space (14 samples, 1.77%)</title><rect x="50.8217%" y="453" width="1.7699%" height="15" fill="rgb(254,179,45)" fg:x="402" fg:w="14"/><text x="51.0717%" y="463.50"></text></g><g><title>rustracer::raytracer::Ray::transform (12 samples, 1.52%)</title><rect x="51.0746%" y="437" width="1.5171%" height="15" fill="rgb(226,14,10)" fg:x="404" fg:w="12"/><text x="51.3246%" y="447.50"></text></g><g><title>glm::mat::mat::Matrix4&lt;T&gt;::mul_v (9 samples, 1.14%)</title><rect x="51.4539%" y="421" width="1.1378%" height="15" fill="rgb(244,27,41)" fg:x="407" fg:w="9"/><text x="51.7039%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="52.3388%" y="405" width="0.2528%" height="15" fill="rgb(235,35,32)" fg:x="414" fg:w="2"/><text x="52.5888%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (250 samples, 31.61%)</title><rect x="21.3654%" y="645" width="31.6056%" height="15" fill="rgb(218,68,31)" fg:x="169" fg:w="250"/><text x="21.6154%" y="655.50">core::iter::traits::iterator::Iterator::min</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (250 samples, 31.61%)</title><rect x="21.3654%" y="629" width="31.6056%" height="15" fill="rgb(207,120,37)" fg:x="169" fg:w="250"/><text x="21.6154%" y="639.50">core::iter::traits::iterator::Iterator::min_by</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (250 samples, 31.61%)</title><rect x="21.3654%" y="613" width="31.6056%" height="15" fill="rgb(227,98,0)" fg:x="169" fg:w="250"/><text x="21.6154%" y="623.50">core::iter::traits::iterator::Iterator::reduce</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 28.32%)</title><rect x="24.6523%" y="597" width="28.3186%" height="15" fill="rgb(207,7,3)" fg:x="195" fg:w="224"/><text x="24.9023%" y="607.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 28.32%)</title><rect x="24.6523%" y="581" width="28.3186%" height="15" fill="rgb(206,98,19)" fg:x="195" fg:w="224"/><text x="24.9023%" y="591.50">&lt;core::iter::adapters::flatten::FlattenCompat..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (3 samples, 0.38%)</title><rect x="52.5917%" y="565" width="0.3793%" height="15" fill="rgb(217,5,26)" fg:x="416" fg:w="3"/><text x="52.8417%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="53.3502%" y="533" width="0.1264%" height="15" fill="rgb(235,190,38)" fg:x="422" fg:w="1"/><text x="53.6002%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="53.7295%" y="501" width="0.1264%" height="15" fill="rgb(247,86,24)" fg:x="425" fg:w="1"/><text x="53.9795%" y="511.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="53.8559%" y="501" width="0.1264%" height="15" fill="rgb(205,101,16)" fg:x="426" fg:w="1"/><text x="54.1059%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="53.8559%" y="485" width="0.1264%" height="15" fill="rgb(246,168,33)" fg:x="426" fg:w="1"/><text x="54.1059%" y="495.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="53.9823%" y="501" width="0.1264%" height="15" fill="rgb(231,114,1)" fg:x="427" fg:w="1"/><text x="54.2323%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="53.9823%" y="485" width="0.1264%" height="15" fill="rgb(207,184,53)" fg:x="427" fg:w="1"/><text x="54.2323%" y="495.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="54.1087%" y="501" width="0.1264%" height="15" fill="rgb(224,95,51)" fg:x="428" fg:w="1"/><text x="54.3587%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="54.1087%" y="485" width="0.1264%" height="15" fill="rgb(212,188,45)" fg:x="428" fg:w="1"/><text x="54.3587%" y="495.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="54.2351%" y="453" width="0.2528%" height="15" fill="rgb(223,154,38)" fg:x="429" fg:w="2"/><text x="54.4851%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="54.2351%" y="437" width="0.2528%" height="15" fill="rgb(251,22,52)" fg:x="429" fg:w="2"/><text x="54.4851%" y="447.50"></text></g><g><title>rustracer::lights::Light::direction_to_point (3 samples, 0.38%)</title><rect x="54.2351%" y="501" width="0.3793%" height="15" fill="rgb(229,209,22)" fg:x="429" fg:w="3"/><text x="54.4851%" y="511.50"></text></g><g><title>glm::builtin::geom::normalize (3 samples, 0.38%)</title><rect x="54.2351%" y="485" width="0.3793%" height="15" fill="rgb(234,138,34)" fg:x="429" fg:w="3"/><text x="54.4851%" y="495.50"></text></g><g><title>glm::builtin::geom::dot (3 samples, 0.38%)</title><rect x="54.2351%" y="469" width="0.3793%" height="15" fill="rgb(212,95,11)" fg:x="429" fg:w="3"/><text x="54.4851%" y="479.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as glm::vec::traits::GenNumVec&lt;T&gt;&gt;::sum (1 samples, 0.13%)</title><rect x="54.4880%" y="453" width="0.1264%" height="15" fill="rgb(240,179,47)" fg:x="431" fg:w="1"/><text x="54.7380%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="54.4880%" y="437" width="0.1264%" height="15" fill="rgb(240,163,11)" fg:x="431" fg:w="1"/><text x="54.7380%" y="447.50"></text></g><g><title>rustracer::lights::Light::intensity_at (2 samples, 0.25%)</title><rect x="54.6144%" y="501" width="0.2528%" height="15" fill="rgb(236,37,12)" fg:x="432" fg:w="2"/><text x="54.8644%" y="511.50"></text></g><g><title>rustracer::lights::attenuation_over_distance (2 samples, 0.25%)</title><rect x="54.6144%" y="485" width="0.2528%" height="15" fill="rgb(232,164,16)" fg:x="432" fg:w="2"/><text x="54.8644%" y="495.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::min (1 samples, 0.13%)</title><rect x="54.7408%" y="469" width="0.1264%" height="15" fill="rgb(244,205,15)" fg:x="433" fg:w="1"/><text x="54.9908%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.13%)</title><rect x="54.8673%" y="469" width="0.1264%" height="15" fill="rgb(223,117,47)" fg:x="434" fg:w="1"/><text x="55.1173%" y="479.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.13%)</title><rect x="54.8673%" y="453" width="0.1264%" height="15" fill="rgb(244,107,35)" fg:x="434" fg:w="1"/><text x="55.1173%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="54.9937%" y="325" width="0.1264%" height="15" fill="rgb(205,140,8)" fg:x="435" fg:w="1"/><text x="55.2437%" y="335.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (3 samples, 0.38%)</title><rect x="55.1201%" y="309" width="0.3793%" height="15" fill="rgb(228,84,46)" fg:x="436" fg:w="3"/><text x="55.3701%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.38%)</title><rect x="55.1201%" y="293" width="0.3793%" height="15" fill="rgb(254,188,9)" fg:x="436" fg:w="3"/><text x="55.3701%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.38%)</title><rect x="55.1201%" y="277" width="0.3793%" height="15" fill="rgb(206,112,54)" fg:x="436" fg:w="3"/><text x="55.3701%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.38%)</title><rect x="55.4994%" y="277" width="0.3793%" height="15" fill="rgb(216,84,49)" fg:x="439" fg:w="3"/><text x="55.7494%" y="287.50"></text></g><g><title>glm::builtin::geom::normalize (1 samples, 0.13%)</title><rect x="55.8786%" y="277" width="0.1264%" height="15" fill="rgb(214,194,35)" fg:x="442" fg:w="1"/><text x="56.1286%" y="287.50"></text></g><g><title>glm::builtin::geom::dot (1 samples, 0.13%)</title><rect x="55.8786%" y="261" width="0.1264%" height="15" fill="rgb(249,28,3)" fg:x="442" fg:w="1"/><text x="56.1286%" y="271.50"></text></g><g><title>&lt;glm::vec::vec::Vector3&lt;T&gt; as glm::vec::traits::GenNumVec&lt;T&gt;&gt;::sum (1 samples, 0.13%)</title><rect x="55.8786%" y="245" width="0.1264%" height="15" fill="rgb(222,56,52)" fg:x="442" fg:w="1"/><text x="56.1286%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="55.8786%" y="229" width="0.1264%" height="15" fill="rgb(245,217,50)" fg:x="442" fg:w="1"/><text x="56.1286%" y="239.50"></text></g><g><title>glm::basenum::ApproxEq::is_approx_eq (2 samples, 0.25%)</title><rect x="56.2579%" y="245" width="0.2528%" height="15" fill="rgb(213,201,24)" fg:x="445" fg:w="2"/><text x="56.5079%" y="255.50"></text></g><g><title>&lt;f32 as glm::basenum::ApproxEq&gt;::is_close_to (2 samples, 0.25%)</title><rect x="56.2579%" y="229" width="0.2528%" height="15" fill="rgb(248,116,28)" fg:x="445" fg:w="2"/><text x="56.5079%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (2 samples, 0.25%)</title><rect x="56.2579%" y="213" width="0.2528%" height="15" fill="rgb(219,72,43)" fg:x="445" fg:w="2"/><text x="56.5079%" y="223.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="56.5107%" y="229" width="0.1264%" height="15" fill="rgb(209,138,14)" fg:x="447" fg:w="1"/><text x="56.7607%" y="239.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::inverse (5 samples, 0.63%)</title><rect x="56.2579%" y="261" width="0.6321%" height="15" fill="rgb(222,18,33)" fg:x="445" fg:w="5"/><text x="56.5079%" y="271.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (3 samples, 0.38%)</title><rect x="56.5107%" y="245" width="0.3793%" height="15" fill="rgb(213,199,7)" fg:x="447" fg:w="3"/><text x="56.7607%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="56.6372%" y="229" width="0.2528%" height="15" fill="rgb(250,110,10)" fg:x="448" fg:w="2"/><text x="56.8872%" y="239.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (5 samples, 0.63%)</title><rect x="57.2693%" y="245" width="0.6321%" height="15" fill="rgb(248,123,6)" fg:x="453" fg:w="5"/><text x="57.5193%" y="255.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (5 samples, 0.63%)</title><rect x="57.2693%" y="229" width="0.6321%" height="15" fill="rgb(206,91,31)" fg:x="453" fg:w="5"/><text x="57.5193%" y="239.50"></text></g><g><title>glm::basenum::ApproxEq::is_approx_eq (4 samples, 0.51%)</title><rect x="57.9014%" y="245" width="0.5057%" height="15" fill="rgb(211,154,13)" fg:x="458" fg:w="4"/><text x="58.1514%" y="255.50"></text></g><g><title>&lt;f32 as glm::basenum::ApproxEq&gt;::is_close_to (4 samples, 0.51%)</title><rect x="57.9014%" y="229" width="0.5057%" height="15" fill="rgb(225,148,7)" fg:x="458" fg:w="4"/><text x="58.1514%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (4 samples, 0.51%)</title><rect x="57.9014%" y="213" width="0.5057%" height="15" fill="rgb(220,160,43)" fg:x="458" fg:w="4"/><text x="58.1514%" y="223.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (3 samples, 0.38%)</title><rect x="59.7977%" y="229" width="0.3793%" height="15" fill="rgb(213,52,39)" fg:x="473" fg:w="3"/><text x="60.0477%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (23 samples, 2.91%)</title><rect x="60.1770%" y="229" width="2.9077%" height="15" fill="rgb(243,137,7)" fg:x="476" fg:w="23"/><text x="60.4270%" y="239.50">&lt;f..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (45 samples, 5.69%)</title><rect x="58.4071%" y="245" width="5.6890%" height="15" fill="rgb(230,79,13)" fg:x="462" fg:w="45"/><text x="58.6571%" y="255.50">glm::ma..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (8 samples, 1.01%)</title><rect x="63.0847%" y="229" width="1.0114%" height="15" fill="rgb(247,105,23)" fg:x="499" fg:w="8"/><text x="63.3347%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (3 samples, 0.38%)</title><rect x="64.0961%" y="229" width="0.3793%" height="15" fill="rgb(223,179,41)" fg:x="507" fg:w="3"/><text x="64.3461%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (3 samples, 0.38%)</title><rect x="64.4753%" y="213" width="0.3793%" height="15" fill="rgb(218,9,34)" fg:x="510" fg:w="3"/><text x="64.7253%" y="223.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (16 samples, 2.02%)</title><rect x="64.8546%" y="213" width="2.0228%" height="15" fill="rgb(222,106,8)" fg:x="513" fg:w="16"/><text x="65.1046%" y="223.50">&lt;..</text></g><g><title>glm::builtin::matrix::inverse (88 samples, 11.13%)</title><rect x="56.0051%" y="277" width="11.1252%" height="15" fill="rgb(211,220,0)" fg:x="443" fg:w="88"/><text x="56.2551%" y="287.50">glm::builtin::ma..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (81 samples, 10.24%)</title><rect x="56.8900%" y="261" width="10.2402%" height="15" fill="rgb(229,52,16)" fg:x="450" fg:w="81"/><text x="57.1400%" y="271.50">glm::mat::sqmat..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (24 samples, 3.03%)</title><rect x="64.0961%" y="245" width="3.0341%" height="15" fill="rgb(212,155,18)" fg:x="507" fg:w="24"/><text x="64.3461%" y="255.50">glm..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (21 samples, 2.65%)</title><rect x="64.4753%" y="229" width="2.6549%" height="15" fill="rgb(242,21,14)" fg:x="510" fg:w="21"/><text x="64.7253%" y="239.50">gl..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (2 samples, 0.25%)</title><rect x="66.8774%" y="213" width="0.2528%" height="15" fill="rgb(222,19,48)" fg:x="529" fg:w="2"/><text x="67.1274%" y="223.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (18 samples, 2.28%)</title><rect x="68.7737%" y="245" width="2.2756%" height="15" fill="rgb(232,45,27)" fg:x="544" fg:w="18"/><text x="69.0237%" y="255.50">&lt;..</text></g><g><title>std::f32::&lt;impl f32&gt;::powi (6 samples, 0.76%)</title><rect x="70.2908%" y="229" width="0.7585%" height="15" fill="rgb(249,103,42)" fg:x="556" fg:w="6"/><text x="70.5408%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::asin (4 samples, 0.51%)</title><rect x="71.1757%" y="229" width="0.5057%" height="15" fill="rgb(246,81,33)" fg:x="563" fg:w="4"/><text x="71.4257%" y="239.50"></text></g><g><title>__ieee754_asinf (4 samples, 0.51%)</title><rect x="71.1757%" y="213" width="0.5057%" height="15" fill="rgb(252,33,42)" fg:x="563" fg:w="4"/><text x="71.4257%" y="223.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::uv_at_intersection (7 samples, 0.88%)</title><rect x="71.0493%" y="245" width="0.8850%" height="15" fill="rgb(209,212,41)" fg:x="562" fg:w="7"/><text x="71.2993%" y="255.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::atan2 (2 samples, 0.25%)</title><rect x="71.6814%" y="229" width="0.2528%" height="15" fill="rgb(207,154,6)" fg:x="567" fg:w="2"/><text x="71.9314%" y="239.50"></text></g><g><title>__atan2f (2 samples, 0.25%)</title><rect x="71.6814%" y="213" width="0.2528%" height="15" fill="rgb(223,64,47)" fg:x="567" fg:w="2"/><text x="71.9314%" y="223.50"></text></g><g><title>__ieee754_atan2f (2 samples, 0.25%)</title><rect x="71.6814%" y="197" width="0.2528%" height="15" fill="rgb(211,161,38)" fg:x="567" fg:w="2"/><text x="71.9314%" y="207.50"></text></g><g><title>__atanf (2 samples, 0.25%)</title><rect x="71.6814%" y="181" width="0.2528%" height="15" fill="rgb(219,138,40)" fg:x="567" fg:w="2"/><text x="71.9314%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="72.0607%" y="229" width="0.1264%" height="15" fill="rgb(241,228,46)" fg:x="570" fg:w="1"/><text x="72.3107%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="72.0607%" y="213" width="0.1264%" height="15" fill="rgb(223,209,38)" fg:x="570" fg:w="1"/><text x="72.3107%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="72.0607%" y="197" width="0.1264%" height="15" fill="rgb(236,164,45)" fg:x="570" fg:w="1"/><text x="72.3107%" y="207.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="72.0607%" y="181" width="0.1264%" height="15" fill="rgb(231,15,5)" fg:x="570" fg:w="1"/><text x="72.3107%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="72.0607%" y="165" width="0.1264%" height="15" fill="rgb(252,35,15)" fg:x="570" fg:w="1"/><text x="72.3107%" y="175.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="72.0607%" y="149" width="0.1264%" height="15" fill="rgb(248,181,18)" fg:x="570" fg:w="1"/><text x="72.3107%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="72.0607%" y="133" width="0.1264%" height="15" fill="rgb(233,39,42)" fg:x="570" fg:w="1"/><text x="72.3107%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="72.0607%" y="117" width="0.1264%" height="15" fill="rgb(238,110,33)" fg:x="570" fg:w="1"/><text x="72.3107%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="72.0607%" y="101" width="0.1264%" height="15" fill="rgb(233,195,10)" fg:x="570" fg:w="1"/><text x="72.3107%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="72.0607%" y="85" width="0.1264%" height="15" fill="rgb(254,105,3)" fg:x="570" fg:w="1"/><text x="72.3107%" y="95.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="72.0607%" y="69" width="0.1264%" height="15" fill="rgb(221,225,9)" fg:x="570" fg:w="1"/><text x="72.3107%" y="79.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="72.0607%" y="53" width="0.1264%" height="15" fill="rgb(224,227,45)" fg:x="570" fg:w="1"/><text x="72.3107%" y="63.50"></text></g><g><title>tcache_put (1 samples, 0.13%)</title><rect x="72.0607%" y="37" width="0.1264%" height="15" fill="rgb(229,198,43)" fg:x="570" fg:w="1"/><text x="72.3107%" y="47.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="72.1871%" y="229" width="0.1264%" height="15" fill="rgb(206,209,35)" fg:x="571" fg:w="1"/><text x="72.4371%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="72.1871%" y="213" width="0.1264%" height="15" fill="rgb(245,195,53)" fg:x="571" fg:w="1"/><text x="72.4371%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="72.1871%" y="197" width="0.1264%" height="15" fill="rgb(240,92,26)" fg:x="571" fg:w="1"/><text x="72.4371%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.13%)</title><rect x="72.1871%" y="181" width="0.1264%" height="15" fill="rgb(207,40,23)" fg:x="571" fg:w="1"/><text x="72.4371%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.13%)</title><rect x="72.1871%" y="165" width="0.1264%" height="15" fill="rgb(223,111,35)" fg:x="571" fg:w="1"/><text x="72.4371%" y="175.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}} (1 samples, 0.13%)</title><rect x="72.1871%" y="149" width="0.1264%" height="15" fill="rgb(229,147,28)" fg:x="571" fg:w="1"/><text x="72.4371%" y="159.50"></text></g><g><title>rustracer::raytracer::Ray::at (1 samples, 0.13%)</title><rect x="72.1871%" y="133" width="0.1264%" height="15" fill="rgb(211,29,28)" fg:x="571" fg:w="1"/><text x="72.4371%" y="143.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="72.1871%" y="117" width="0.1264%" height="15" fill="rgb(228,72,33)" fg:x="571" fg:w="1"/><text x="72.4371%" y="127.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="72.1871%" y="101" width="0.1264%" height="15" fill="rgb(205,214,31)" fg:x="571" fg:w="1"/><text x="72.4371%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.76%)</title><rect x="71.9343%" y="245" width="0.7585%" height="15" fill="rgb(224,111,15)" fg:x="569" fg:w="6"/><text x="72.1843%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;,&lt;rustracer::primitive::Sphere as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}}&gt;&gt; (3 samples, 0.38%)</title><rect x="72.3135%" y="229" width="0.3793%" height="15" fill="rgb(253,21,26)" fg:x="572" fg:w="3"/><text x="72.5635%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (3 samples, 0.38%)</title><rect x="72.3135%" y="213" width="0.3793%" height="15" fill="rgb(245,139,43)" fg:x="572" fg:w="3"/><text x="72.5635%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="72.3135%" y="197" width="0.3793%" height="15" fill="rgb(252,170,7)" fg:x="572" fg:w="3"/><text x="72.5635%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (3 samples, 0.38%)</title><rect x="72.3135%" y="181" width="0.3793%" height="15" fill="rgb(231,118,14)" fg:x="572" fg:w="3"/><text x="72.5635%" y="191.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="72.3135%" y="165" width="0.3793%" height="15" fill="rgb(238,83,0)" fg:x="572" fg:w="3"/><text x="72.5635%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (3 samples, 0.38%)</title><rect x="72.3135%" y="149" width="0.3793%" height="15" fill="rgb(221,39,39)" fg:x="572" fg:w="3"/><text x="72.5635%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="72.3135%" y="133" width="0.3793%" height="15" fill="rgb(222,119,46)" fg:x="572" fg:w="3"/><text x="72.5635%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.38%)</title><rect x="72.3135%" y="117" width="0.3793%" height="15" fill="rgb(222,165,49)" fg:x="572" fg:w="3"/><text x="72.5635%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.38%)</title><rect x="72.3135%" y="101" width="0.3793%" height="15" fill="rgb(219,113,52)" fg:x="572" fg:w="3"/><text x="72.5635%" y="111.50"></text></g><g><title>__GI___libc_free (3 samples, 0.38%)</title><rect x="72.3135%" y="85" width="0.3793%" height="15" fill="rgb(214,7,15)" fg:x="572" fg:w="3"/><text x="72.5635%" y="95.50"></text></g><g><title>_int_free (2 samples, 0.25%)</title><rect x="72.4399%" y="69" width="0.2528%" height="15" fill="rgb(235,32,4)" fg:x="573" fg:w="2"/><text x="72.6899%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.13%)</title><rect x="74.2099%" y="181" width="0.1264%" height="15" fill="rgb(238,90,54)" fg:x="587" fg:w="1"/><text x="74.4599%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.51%)</title><rect x="74.0834%" y="229" width="0.5057%" height="15" fill="rgb(213,208,19)" fg:x="586" fg:w="4"/><text x="74.3334%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.51%)</title><rect x="74.0834%" y="213" width="0.5057%" height="15" fill="rgb(233,156,4)" fg:x="586" fg:w="4"/><text x="74.3334%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.51%)</title><rect x="74.0834%" y="197" width="0.5057%" height="15" fill="rgb(207,194,5)" fg:x="586" fg:w="4"/><text x="74.3334%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.25%)</title><rect x="74.3363%" y="181" width="0.2528%" height="15" fill="rgb(206,111,30)" fg:x="588" fg:w="2"/><text x="74.5863%" y="191.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="74.3363%" y="165" width="0.2528%" height="15" fill="rgb(243,70,54)" fg:x="588" fg:w="2"/><text x="74.5863%" y="175.50"></text></g><g><title>checked_request2size (1 samples, 0.13%)</title><rect x="74.4627%" y="149" width="0.1264%" height="15" fill="rgb(242,28,8)" fg:x="589" fg:w="1"/><text x="74.7127%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.38%)</title><rect x="74.5891%" y="229" width="0.3793%" height="15" fill="rgb(219,106,18)" fg:x="590" fg:w="3"/><text x="74.8391%" y="239.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (57 samples, 7.21%)</title><rect x="68.3944%" y="261" width="7.2061%" height="15" fill="rgb(244,222,10)" fg:x="541" fg:w="57"/><text x="68.6444%" y="271.50">&lt;T as rust..</text></g><g><title>rustracer::primitive::solve_quadratic (23 samples, 2.91%)</title><rect x="72.6928%" y="245" width="2.9077%" height="15" fill="rgb(236,179,52)" fg:x="575" fg:w="23"/><text x="72.9428%" y="255.50">ru..</text></g><g><title>std::f32::&lt;impl f32&gt;::powi (5 samples, 0.63%)</title><rect x="74.9684%" y="229" width="0.6321%" height="15" fill="rgb(213,23,39)" fg:x="593" fg:w="5"/><text x="75.2184%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="75.6005%" y="261" width="0.2528%" height="15" fill="rgb(238,48,10)" fg:x="598" fg:w="2"/><text x="75.8505%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="75.8534%" y="261" width="0.1264%" height="15" fill="rgb(251,196,23)" fg:x="600" fg:w="1"/><text x="76.1034%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.38%)</title><rect x="75.9798%" y="213" width="0.3793%" height="15" fill="rgb(250,152,24)" fg:x="601" fg:w="3"/><text x="76.2298%" y="223.50"></text></g><g><title>core::ptr::read (1 samples, 0.13%)</title><rect x="76.2326%" y="197" width="0.1264%" height="15" fill="rgb(209,150,17)" fg:x="603" fg:w="1"/><text x="76.4826%" y="207.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (75 samples, 9.48%)</title><rect x="67.1302%" y="277" width="9.4817%" height="15" fill="rgb(234,202,34)" fg:x="531" fg:w="75"/><text x="67.3802%" y="287.50">rustracer::pri..</text></g><g><title>core::iter::traits::iterator::Iterator::min (5 samples, 0.63%)</title><rect x="75.9798%" y="261" width="0.6321%" height="15" fill="rgb(253,148,53)" fg:x="601" fg:w="5"/><text x="76.2298%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (5 samples, 0.63%)</title><rect x="75.9798%" y="245" width="0.6321%" height="15" fill="rgb(218,129,16)" fg:x="601" fg:w="5"/><text x="76.2298%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5 samples, 0.63%)</title><rect x="75.9798%" y="229" width="0.6321%" height="15" fill="rgb(216,85,19)" fg:x="601" fg:w="5"/><text x="76.2298%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (2 samples, 0.25%)</title><rect x="76.3590%" y="213" width="0.2528%" height="15" fill="rgb(235,228,7)" fg:x="604" fg:w="2"/><text x="76.6090%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="76.3590%" y="197" width="0.2528%" height="15" fill="rgb(245,175,0)" fg:x="604" fg:w="2"/><text x="76.6090%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rustracer::intersection::ComponentIntersection,alloc::alloc::Global&gt;&gt; (2 samples, 0.25%)</title><rect x="76.3590%" y="181" width="0.2528%" height="15" fill="rgb(208,168,36)" fg:x="604" fg:w="2"/><text x="76.6090%" y="191.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="76.3590%" y="165" width="0.2528%" height="15" fill="rgb(246,171,24)" fg:x="604" fg:w="2"/><text x="76.6090%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rustracer::intersection::ComponentIntersection&gt;&gt; (2 samples, 0.25%)</title><rect x="76.3590%" y="149" width="0.2528%" height="15" fill="rgb(215,142,24)" fg:x="604" fg:w="2"/><text x="76.6090%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="76.3590%" y="133" width="0.2528%" height="15" fill="rgb(250,187,7)" fg:x="604" fg:w="2"/><text x="76.6090%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.25%)</title><rect x="76.3590%" y="117" width="0.2528%" height="15" fill="rgb(228,66,33)" fg:x="604" fg:w="2"/><text x="76.6090%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (181 samples, 22.88%)</title><rect x="54.8673%" y="485" width="22.8824%" height="15" fill="rgb(234,215,21)" fg:x="434" fg:w="181"/><text x="55.1173%" y="495.50">&lt;core::iter::adapters::filter::Filte..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (180 samples, 22.76%)</title><rect x="54.9937%" y="469" width="22.7560%" height="15" fill="rgb(222,191,20)" fg:x="435" fg:w="180"/><text x="55.2437%" y="479.50">core::iter::traits::iterator::Iterat..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (180 samples, 22.76%)</title><rect x="54.9937%" y="453" width="22.7560%" height="15" fill="rgb(245,79,54)" fg:x="435" fg:w="180"/><text x="55.2437%" y="463.50">&lt;usize as core::iter::traits::accum:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="437" width="22.7560%" height="15" fill="rgb(240,10,37)" fg:x="435" fg:w="180"/><text x="55.2437%" y="447.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="421" width="22.7560%" height="15" fill="rgb(214,192,32)" fg:x="435" fg:w="180"/><text x="55.2437%" y="431.50">&lt;core::iter::adapters::flatten::Flat..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="405" width="22.7560%" height="15" fill="rgb(209,36,54)" fg:x="435" fg:w="180"/><text x="55.2437%" y="415.50">&lt;core::iter::adapters::flatten::Flat..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (180 samples, 22.76%)</title><rect x="54.9937%" y="389" width="22.7560%" height="15" fill="rgb(220,10,11)" fg:x="435" fg:w="180"/><text x="55.2437%" y="399.50">core::iter::adapters::flatten::Flatt..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="373" width="22.7560%" height="15" fill="rgb(221,106,17)" fg:x="435" fg:w="180"/><text x="55.2437%" y="383.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="357" width="22.7560%" height="15" fill="rgb(251,142,44)" fg:x="435" fg:w="180"/><text x="55.2437%" y="367.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (180 samples, 22.76%)</title><rect x="54.9937%" y="341" width="22.7560%" height="15" fill="rgb(238,13,15)" fg:x="435" fg:w="180"/><text x="55.2437%" y="351.50">core::iter::traits::iterator::Iterat..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (179 samples, 22.63%)</title><rect x="55.1201%" y="325" width="22.6296%" height="15" fill="rgb(208,107,27)" fg:x="436" fg:w="179"/><text x="55.3701%" y="335.50">core::iter::adapters::map::map_fold:..</text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (176 samples, 22.25%)</title><rect x="55.4994%" y="309" width="22.2503%" height="15" fill="rgb(205,136,37)" fg:x="439" fg:w="176"/><text x="55.7494%" y="319.50">rustracer::lights::Light::is_visibl..</text></g><g><title>rustracer::shape::Shape::intersect (176 samples, 22.25%)</title><rect x="55.4994%" y="293" width="22.2503%" height="15" fill="rgb(250,205,27)" fg:x="439" fg:w="176"/><text x="55.7494%" y="303.50">rustracer::shape::Shape::intersect</text></g><g><title>rustracer::raytracer::Ray::to_object_space (9 samples, 1.14%)</title><rect x="76.6119%" y="277" width="1.1378%" height="15" fill="rgb(210,80,43)" fg:x="606" fg:w="9"/><text x="76.8619%" y="287.50"></text></g><g><title>rustracer::raytracer::Ray::transform (8 samples, 1.01%)</title><rect x="76.7383%" y="261" width="1.0114%" height="15" fill="rgb(247,160,36)" fg:x="607" fg:w="8"/><text x="76.9883%" y="271.50"></text></g><g><title>glm::mat::mat::Matrix4&lt;T&gt;::mul_v (3 samples, 0.38%)</title><rect x="77.3704%" y="245" width="0.3793%" height="15" fill="rgb(234,13,49)" fg:x="612" fg:w="3"/><text x="77.6204%" y="255.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="77.4968%" y="229" width="0.2528%" height="15" fill="rgb(234,122,0)" fg:x="613" fg:w="2"/><text x="77.7468%" y="239.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="77.7497%" y="485" width="0.1264%" height="15" fill="rgb(207,146,38)" fg:x="615" fg:w="1"/><text x="77.9997%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="77.7497%" y="469" width="0.1264%" height="15" fill="rgb(207,177,25)" fg:x="615" fg:w="1"/><text x="77.9997%" y="479.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="77.8761%" y="485" width="0.1264%" height="15" fill="rgb(211,178,42)" fg:x="616" fg:w="1"/><text x="78.1261%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="77.8761%" y="469" width="0.1264%" height="15" fill="rgb(230,69,54)" fg:x="616" fg:w="1"/><text x="78.1261%" y="479.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Neg&gt;::neg (1 samples, 0.13%)</title><rect x="78.0025%" y="485" width="0.1264%" height="15" fill="rgb(214,135,41)" fg:x="617" fg:w="1"/><text x="78.2525%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Neg&gt;::neg (1 samples, 0.13%)</title><rect x="78.0025%" y="469" width="0.1264%" height="15" fill="rgb(237,67,25)" fg:x="617" fg:w="1"/><text x="78.2525%" y="479.50"></text></g><g><title>glm::builtin::exp::inversesqrt (1 samples, 0.13%)</title><rect x="78.1290%" y="453" width="0.1264%" height="15" fill="rgb(222,189,50)" fg:x="618" fg:w="1"/><text x="78.3790%" y="463.50"></text></g><g><title>&lt;f32 as glm::traits::GenNum&lt;f32&gt;&gt;::map (1 samples, 0.13%)</title><rect x="78.1290%" y="437" width="0.1264%" height="15" fill="rgb(245,148,34)" fg:x="618" fg:w="1"/><text x="78.3790%" y="447.50"></text></g><g><title>glm::builtin::exp::inversesqrt::{{closure}} (1 samples, 0.13%)</title><rect x="78.1290%" y="421" width="0.1264%" height="15" fill="rgb(222,29,6)" fg:x="618" fg:w="1"/><text x="78.3790%" y="431.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (1 samples, 0.13%)</title><rect x="78.1290%" y="405" width="0.1264%" height="15" fill="rgb(221,189,43)" fg:x="618" fg:w="1"/><text x="78.3790%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (1 samples, 0.13%)</title><rect x="78.1290%" y="389" width="0.1264%" height="15" fill="rgb(207,36,27)" fg:x="618" fg:w="1"/><text x="78.3790%" y="399.50"></text></g><g><title>rustracer::lights::Light::is_visible (186 samples, 23.51%)</title><rect x="54.8673%" y="501" width="23.5145%" height="15" fill="rgb(217,90,24)" fg:x="434" fg:w="186"/><text x="55.1173%" y="511.50">rustracer::lights::Light::is_visible</text></g><g><title>rustracer::lights::Light::direction_to_point (2 samples, 0.25%)</title><rect x="78.1290%" y="485" width="0.2528%" height="15" fill="rgb(224,66,35)" fg:x="618" fg:w="2"/><text x="78.3790%" y="495.50"></text></g><g><title>glm::builtin::geom::normalize (2 samples, 0.25%)</title><rect x="78.1290%" y="469" width="0.2528%" height="15" fill="rgb(221,13,50)" fg:x="618" fg:w="2"/><text x="78.3790%" y="479.50"></text></g><g><title>glm::builtin::geom::dot (1 samples, 0.13%)</title><rect x="78.2554%" y="453" width="0.1264%" height="15" fill="rgb(236,68,49)" fg:x="619" fg:w="1"/><text x="78.5054%" y="463.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as glm::vec::traits::GenNumVec&lt;T&gt;&gt;::sum (1 samples, 0.13%)</title><rect x="78.2554%" y="437" width="0.1264%" height="15" fill="rgb(229,146,28)" fg:x="619" fg:w="1"/><text x="78.5054%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="78.2554%" y="421" width="0.1264%" height="15" fill="rgb(225,31,38)" fg:x="619" fg:w="1"/><text x="78.5054%" y="431.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::get_pixel (1 samples, 0.13%)</title><rect x="79.0139%" y="485" width="0.1264%" height="15" fill="rgb(250,208,3)" fg:x="625" fg:w="1"/><text x="79.2639%" y="495.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::pixel_indices (1 samples, 0.13%)</title><rect x="79.0139%" y="469" width="0.1264%" height="15" fill="rgb(246,54,23)" fg:x="625" fg:w="1"/><text x="79.2639%" y="479.50"></text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::pixel_indices_unchecked (1 samples, 0.13%)</title><rect x="79.0139%" y="453" width="0.1264%" height="15" fill="rgb(243,76,11)" fg:x="625" fg:w="1"/><text x="79.2639%" y="463.50"></text></g><g><title>rustracer::lights::to_intensity (3 samples, 0.38%)</title><rect x="79.1403%" y="485" width="0.3793%" height="15" fill="rgb(245,21,50)" fg:x="626" fg:w="3"/><text x="79.3903%" y="495.50"></text></g><g><title>rustracer::lights::int_to_intensity (2 samples, 0.25%)</title><rect x="79.2668%" y="469" width="0.2528%" height="15" fill="rgb(228,9,43)" fg:x="627" fg:w="2"/><text x="79.5168%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.38%)</title><rect x="79.5196%" y="405" width="0.3793%" height="15" fill="rgb(208,100,47)" fg:x="629" fg:w="3"/><text x="79.7696%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.38%)</title><rect x="79.5196%" y="389" width="0.3793%" height="15" fill="rgb(232,26,8)" fg:x="629" fg:w="3"/><text x="79.7696%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.38%)</title><rect x="79.5196%" y="373" width="0.3793%" height="15" fill="rgb(216,166,38)" fg:x="629" fg:w="3"/><text x="79.7696%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.38%)</title><rect x="79.5196%" y="357" width="0.3793%" height="15" fill="rgb(251,202,51)" fg:x="629" fg:w="3"/><text x="79.7696%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.38%)</title><rect x="79.5196%" y="341" width="0.3793%" height="15" fill="rgb(254,216,34)" fg:x="629" fg:w="3"/><text x="79.7696%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.25%)</title><rect x="79.8989%" y="405" width="0.2528%" height="15" fill="rgb(251,32,27)" fg:x="632" fg:w="2"/><text x="80.1489%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.13%)</title><rect x="82.0480%" y="293" width="0.1264%" height="15" fill="rgb(208,127,28)" fg:x="649" fg:w="1"/><text x="82.2980%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.63%)</title><rect x="81.6688%" y="309" width="0.6321%" height="15" fill="rgb(224,137,22)" fg:x="646" fg:w="5"/><text x="81.9188%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.13%)</title><rect x="82.1745%" y="293" width="0.1264%" height="15" fill="rgb(254,70,32)" fg:x="650" fg:w="1"/><text x="82.4245%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 2.15%)</title><rect x="80.6574%" y="357" width="2.1492%" height="15" fill="rgb(229,75,37)" fg:x="638" fg:w="17"/><text x="80.9074%" y="367.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 2.15%)</title><rect x="80.6574%" y="341" width="2.1492%" height="15" fill="rgb(252,64,23)" fg:x="638" fg:w="17"/><text x="80.9074%" y="351.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 2.15%)</title><rect x="80.6574%" y="325" width="2.1492%" height="15" fill="rgb(232,162,48)" fg:x="638" fg:w="17"/><text x="80.9074%" y="335.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.51%)</title><rect x="82.3009%" y="309" width="0.5057%" height="15" fill="rgb(246,160,12)" fg:x="651" fg:w="4"/><text x="82.5509%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.13%)</title><rect x="82.8066%" y="357" width="0.1264%" height="15" fill="rgb(247,166,0)" fg:x="655" fg:w="1"/><text x="83.0566%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="82.8066%" y="341" width="0.1264%" height="15" fill="rgb(249,219,21)" fg:x="655" fg:w="1"/><text x="83.0566%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="82.8066%" y="325" width="0.1264%" height="15" fill="rgb(205,209,3)" fg:x="655" fg:w="1"/><text x="83.0566%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="82.8066%" y="309" width="0.1264%" height="15" fill="rgb(243,44,1)" fg:x="655" fg:w="1"/><text x="83.0566%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="82.9330%" y="357" width="0.1264%" height="15" fill="rgb(206,159,16)" fg:x="656" fg:w="1"/><text x="83.1830%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.13%)</title><rect x="82.9330%" y="341" width="0.1264%" height="15" fill="rgb(244,77,30)" fg:x="656" fg:w="1"/><text x="83.1830%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.13%)</title><rect x="83.0594%" y="357" width="0.1264%" height="15" fill="rgb(218,69,12)" fg:x="657" fg:w="1"/><text x="83.3094%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.13%)</title><rect x="83.0594%" y="341" width="0.1264%" height="15" fill="rgb(212,87,7)" fg:x="657" fg:w="1"/><text x="83.3094%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.13%)</title><rect x="83.0594%" y="325" width="0.1264%" height="15" fill="rgb(245,114,25)" fg:x="657" fg:w="1"/><text x="83.3094%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.13%)</title><rect x="83.0594%" y="309" width="0.1264%" height="15" fill="rgb(210,61,42)" fg:x="657" fg:w="1"/><text x="83.3094%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.13%)</title><rect x="83.0594%" y="293" width="0.1264%" height="15" fill="rgb(211,52,33)" fg:x="657" fg:w="1"/><text x="83.3094%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 3.79%)</title><rect x="79.5196%" y="437" width="3.7927%" height="15" fill="rgb(234,58,33)" fg:x="629" fg:w="30"/><text x="79.7696%" y="447.50">hash..</text></g><g><title>core::hash::BuildHasher::hash_one (30 samples, 3.79%)</title><rect x="79.5196%" y="421" width="3.7927%" height="15" fill="rgb(220,115,36)" fg:x="629" fg:w="30"/><text x="79.7696%" y="431.50">core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 3.16%)</title><rect x="80.1517%" y="405" width="3.1606%" height="15" fill="rgb(243,153,54)" fg:x="634" fg:w="25"/><text x="80.4017%" y="415.50">cor..</text></g><g><title>&lt;std::path::PathBuf as core::hash::Hash&gt;::hash (25 samples, 3.16%)</title><rect x="80.1517%" y="389" width="3.1606%" height="15" fill="rgb(251,47,18)" fg:x="634" fg:w="25"/><text x="80.4017%" y="399.50">&lt;st..</text></g><g><title>&lt;std::path::Path as core::hash::Hash&gt;::hash (25 samples, 3.16%)</title><rect x="80.1517%" y="373" width="3.1606%" height="15" fill="rgb(242,102,42)" fg:x="634" fg:w="25"/><text x="80.4017%" y="383.50">&lt;st..</text></g><g><title>std::sys::unix::path::is_sep_byte (1 samples, 0.13%)</title><rect x="83.1858%" y="357" width="0.1264%" height="15" fill="rgb(234,31,38)" fg:x="658" fg:w="1"/><text x="83.4358%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="83.3123%" y="389" width="0.1264%" height="15" fill="rgb(221,117,51)" fg:x="659" fg:w="1"/><text x="83.5623%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.13%)</title><rect x="83.3123%" y="373" width="0.1264%" height="15" fill="rgb(212,20,18)" fg:x="659" fg:w="1"/><text x="83.5623%" y="383.50"></text></g><g><title>&lt;std::path::Components as core::cmp::PartialEq&gt;::eq (3 samples, 0.38%)</title><rect x="83.5651%" y="341" width="0.3793%" height="15" fill="rgb(245,133,36)" fg:x="661" fg:w="3"/><text x="83.8151%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.38%)</title><rect x="83.5651%" y="325" width="0.3793%" height="15" fill="rgb(212,6,19)" fg:x="661" fg:w="3"/><text x="83.8151%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.38%)</title><rect x="83.5651%" y="309" width="0.3793%" height="15" fill="rgb(218,1,36)" fg:x="661" fg:w="3"/><text x="83.8151%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.38%)</title><rect x="83.5651%" y="293" width="0.3793%" height="15" fill="rgb(246,84,54)" fg:x="661" fg:w="3"/><text x="83.8151%" y="303.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.38%)</title><rect x="83.5651%" y="277" width="0.3793%" height="15" fill="rgb(242,110,6)" fg:x="661" fg:w="3"/><text x="83.8151%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.76%)</title><rect x="83.4387%" y="373" width="0.7585%" height="15" fill="rgb(214,47,5)" fg:x="660" fg:w="6"/><text x="83.6887%" y="383.50"></text></g><g><title>&lt;std::path::PathBuf as core::cmp::PartialEq&gt;::eq (6 samples, 0.76%)</title><rect x="83.4387%" y="357" width="0.7585%" height="15" fill="rgb(218,159,25)" fg:x="660" fg:w="6"/><text x="83.6887%" y="367.50"></text></g><g><title>std::path::Path::components (2 samples, 0.25%)</title><rect x="83.9444%" y="341" width="0.2528%" height="15" fill="rgb(215,211,28)" fg:x="664" fg:w="2"/><text x="84.1944%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.88%)</title><rect x="83.4387%" y="389" width="0.8850%" height="15" fill="rgb(238,59,32)" fg:x="660" fg:w="7"/><text x="83.6887%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="84.1972%" y="373" width="0.1264%" height="15" fill="rgb(226,82,3)" fg:x="666" fg:w="1"/><text x="84.4472%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.13%)</title><rect x="84.1972%" y="357" width="0.1264%" height="15" fill="rgb(240,164,32)" fg:x="666" fg:w="1"/><text x="84.4472%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.13%)</title><rect x="84.1972%" y="341" width="0.1264%" height="15" fill="rgb(232,46,7)" fg:x="666" fg:w="1"/><text x="84.4472%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="84.1972%" y="325" width="0.1264%" height="15" fill="rgb(229,129,53)" fg:x="666" fg:w="1"/><text x="84.4472%" y="335.50"></text></g><g><title>rustracer::lights::uv_lookup (48 samples, 6.07%)</title><rect x="78.3818%" y="501" width="6.0683%" height="15" fill="rgb(234,188,29)" fg:x="620" fg:w="48"/><text x="78.6318%" y="511.50">rustrace..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (39 samples, 4.93%)</title><rect x="79.5196%" y="485" width="4.9305%" height="15" fill="rgb(246,141,4)" fg:x="629" fg:w="39"/><text x="79.7696%" y="495.50">std::c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 4.93%)</title><rect x="79.5196%" y="469" width="4.9305%" height="15" fill="rgb(229,23,39)" fg:x="629" fg:w="39"/><text x="79.7696%" y="479.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 4.93%)</title><rect x="79.5196%" y="453" width="4.9305%" height="15" fill="rgb(206,12,3)" fg:x="629" fg:w="39"/><text x="79.7696%" y="463.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 1.14%)</title><rect x="83.3123%" y="437" width="1.1378%" height="15" fill="rgb(252,226,20)" fg:x="659" fg:w="9"/><text x="83.5623%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 1.14%)</title><rect x="83.3123%" y="421" width="1.1378%" height="15" fill="rgb(216,123,35)" fg:x="659" fg:w="9"/><text x="83.5623%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 1.14%)</title><rect x="83.3123%" y="405" width="1.1378%" height="15" fill="rgb(212,68,40)" fg:x="659" fg:w="9"/><text x="83.5623%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.13%)</title><rect x="84.3236%" y="389" width="0.1264%" height="15" fill="rgb(254,125,32)" fg:x="667" fg:w="1"/><text x="84.5736%" y="399.50"></text></g><g><title>exp2_inline (3 samples, 0.38%)</title><rect x="84.5765%" y="469" width="0.3793%" height="15" fill="rgb(253,97,22)" fg:x="669" fg:w="3"/><text x="84.8265%" y="479.50"></text></g><g><title>rustracer::lights::phong (254 samples, 32.11%)</title><rect x="52.9709%" y="645" width="32.1113%" height="15" fill="rgb(241,101,14)" fg:x="419" fg:w="254"/><text x="53.2209%" y="655.50">rustracer::lights::phong</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254 samples, 32.11%)</title><rect x="52.9709%" y="629" width="32.1113%" height="15" fill="rgb(238,103,29)" fg:x="419" fg:w="254"/><text x="53.2209%" y="639.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254 samples, 32.11%)</title><rect x="52.9709%" y="613" width="32.1113%" height="15" fill="rgb(233,195,47)" fg:x="419" fg:w="254"/><text x="53.2209%" y="623.50">&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; a..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (254 samples, 32.11%)</title><rect x="52.9709%" y="597" width="32.1113%" height="15" fill="rgb(246,218,30)" fg:x="419" fg:w="254"/><text x="53.2209%" y="607.50">core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::i..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254 samples, 32.11%)</title><rect x="52.9709%" y="581" width="32.1113%" height="15" fill="rgb(219,145,47)" fg:x="419" fg:w="254"/><text x="53.2209%" y="591.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254 samples, 32.11%)</title><rect x="52.9709%" y="565" width="32.1113%" height="15" fill="rgb(243,12,26)" fg:x="419" fg:w="254"/><text x="53.2209%" y="575.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (252 samples, 31.86%)</title><rect x="53.2238%" y="549" width="31.8584%" height="15" fill="rgb(214,87,16)" fg:x="421" fg:w="252"/><text x="53.4738%" y="559.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (250 samples, 31.61%)</title><rect x="53.4766%" y="533" width="31.6056%" height="15" fill="rgb(208,99,42)" fg:x="423" fg:w="250"/><text x="53.7266%" y="543.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>rustracer::lights::phong::{{closure}} (250 samples, 31.61%)</title><rect x="53.4766%" y="517" width="31.6056%" height="15" fill="rgb(253,99,2)" fg:x="423" fg:w="250"/><text x="53.7266%" y="527.50">rustracer::lights::phong::{{closure}}</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (5 samples, 0.63%)</title><rect x="84.4501%" y="501" width="0.6321%" height="15" fill="rgb(220,168,23)" fg:x="668" fg:w="5"/><text x="84.7001%" y="511.50"></text></g><g><title>__powf_fma (5 samples, 0.63%)</title><rect x="84.4501%" y="485" width="0.6321%" height="15" fill="rgb(242,38,24)" fg:x="668" fg:w="5"/><text x="84.7001%" y="495.50"></text></g><g><title>log2_inline (1 samples, 0.13%)</title><rect x="84.9558%" y="469" width="0.1264%" height="15" fill="rgb(225,182,9)" fg:x="672" fg:w="1"/><text x="85.2058%" y="479.50"></text></g><g><title>rustracer::lights::reflect_around (1 samples, 0.13%)</title><rect x="85.0822%" y="645" width="0.1264%" height="15" fill="rgb(243,178,37)" fg:x="673" fg:w="1"/><text x="85.3322%" y="655.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="85.0822%" y="629" width="0.1264%" height="15" fill="rgb(232,139,19)" fg:x="673" fg:w="1"/><text x="85.3322%" y="639.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="85.0822%" y="613" width="0.1264%" height="15" fill="rgb(225,201,24)" fg:x="673" fg:w="1"/><text x="85.3322%" y="623.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="85.2086%" y="437" width="0.1264%" height="15" fill="rgb(221,47,46)" fg:x="674" fg:w="1"/><text x="85.4586%" y="447.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="85.2086%" y="421" width="0.1264%" height="15" fill="rgb(249,23,13)" fg:x="674" fg:w="1"/><text x="85.4586%" y="431.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (1 samples, 0.13%)</title><rect x="85.2086%" y="405" width="0.1264%" height="15" fill="rgb(219,9,5)" fg:x="674" fg:w="1"/><text x="85.4586%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="85.2086%" y="389" width="0.1264%" height="15" fill="rgb(254,171,16)" fg:x="674" fg:w="1"/><text x="85.4586%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="85.2086%" y="373" width="0.1264%" height="15" fill="rgb(230,171,20)" fg:x="674" fg:w="1"/><text x="85.4586%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="85.2086%" y="581" width="0.2528%" height="15" fill="rgb(210,71,41)" fg:x="674" fg:w="2"/><text x="85.4586%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="85.2086%" y="565" width="0.2528%" height="15" fill="rgb(206,173,20)" fg:x="674" fg:w="2"/><text x="85.4586%" y="575.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 0.25%)</title><rect x="85.2086%" y="549" width="0.2528%" height="15" fill="rgb(233,88,34)" fg:x="674" fg:w="2"/><text x="85.4586%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="85.2086%" y="533" width="0.2528%" height="15" fill="rgb(223,209,46)" fg:x="674" fg:w="2"/><text x="85.4586%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="85.2086%" y="517" width="0.2528%" height="15" fill="rgb(250,43,18)" fg:x="674" fg:w="2"/><text x="85.4586%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="85.2086%" y="501" width="0.2528%" height="15" fill="rgb(208,13,10)" fg:x="674" fg:w="2"/><text x="85.4586%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="85.2086%" y="485" width="0.2528%" height="15" fill="rgb(212,200,36)" fg:x="674" fg:w="2"/><text x="85.4586%" y="495.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (2 samples, 0.25%)</title><rect x="85.2086%" y="469" width="0.2528%" height="15" fill="rgb(225,90,30)" fg:x="674" fg:w="2"/><text x="85.4586%" y="479.50"></text></g><g><title>rustracer::shape::Shape::intersect (2 samples, 0.25%)</title><rect x="85.2086%" y="453" width="0.2528%" height="15" fill="rgb(236,182,39)" fg:x="674" fg:w="2"/><text x="85.4586%" y="463.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (1 samples, 0.13%)</title><rect x="85.3350%" y="437" width="0.1264%" height="15" fill="rgb(212,144,35)" fg:x="675" fg:w="1"/><text x="85.5850%" y="447.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (1 samples, 0.13%)</title><rect x="85.3350%" y="421" width="0.1264%" height="15" fill="rgb(228,63,44)" fg:x="675" fg:w="1"/><text x="85.5850%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.13%)</title><rect x="85.3350%" y="405" width="0.1264%" height="15" fill="rgb(228,109,6)" fg:x="675" fg:w="1"/><text x="85.5850%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;,&lt;rustracer::primitive::Sphere as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}}&gt;&gt; (1 samples, 0.13%)</title><rect x="85.3350%" y="389" width="0.1264%" height="15" fill="rgb(238,117,24)" fg:x="675" fg:w="1"/><text x="85.5850%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="85.3350%" y="373" width="0.1264%" height="15" fill="rgb(242,26,26)" fg:x="675" fg:w="1"/><text x="85.5850%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="85.3350%" y="357" width="0.1264%" height="15" fill="rgb(221,92,48)" fg:x="675" fg:w="1"/><text x="85.5850%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="85.3350%" y="341" width="0.1264%" height="15" fill="rgb(209,209,32)" fg:x="675" fg:w="1"/><text x="85.5850%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="85.3350%" y="325" width="0.1264%" height="15" fill="rgb(221,70,22)" fg:x="675" fg:w="1"/><text x="85.5850%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="85.3350%" y="309" width="0.1264%" height="15" fill="rgb(248,145,5)" fg:x="675" fg:w="1"/><text x="85.5850%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="85.3350%" y="293" width="0.1264%" height="15" fill="rgb(226,116,26)" fg:x="675" fg:w="1"/><text x="85.5850%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="85.3350%" y="277" width="0.1264%" height="15" fill="rgb(244,5,17)" fg:x="675" fg:w="1"/><text x="85.5850%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="85.3350%" y="261" width="0.1264%" height="15" fill="rgb(252,159,33)" fg:x="675" fg:w="1"/><text x="85.5850%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="85.3350%" y="245" width="0.1264%" height="15" fill="rgb(206,71,0)" fg:x="675" fg:w="1"/><text x="85.5850%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="85.3350%" y="229" width="0.1264%" height="15" fill="rgb(233,118,54)" fg:x="675" fg:w="1"/><text x="85.5850%" y="239.50"></text></g><g><title>tcache_put (1 samples, 0.13%)</title><rect x="85.3350%" y="213" width="0.1264%" height="15" fill="rgb(234,83,48)" fg:x="675" fg:w="1"/><text x="85.5850%" y="223.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.25%)</title><rect x="85.9671%" y="437" width="0.2528%" height="15" fill="rgb(228,3,54)" fg:x="680" fg:w="2"/><text x="86.2171%" y="447.50"></text></g><g><title>glm::builtin::geom::normalize (1 samples, 0.13%)</title><rect x="86.2200%" y="437" width="0.1264%" height="15" fill="rgb(226,155,13)" fg:x="682" fg:w="1"/><text x="86.4700%" y="447.50"></text></g><g><title>glm::builtin::exp::inversesqrt (1 samples, 0.13%)</title><rect x="86.2200%" y="421" width="0.1264%" height="15" fill="rgb(241,28,37)" fg:x="682" fg:w="1"/><text x="86.4700%" y="431.50"></text></g><g><title>&lt;f32 as glm::traits::GenNum&lt;f32&gt;&gt;::map (1 samples, 0.13%)</title><rect x="86.2200%" y="405" width="0.1264%" height="15" fill="rgb(233,93,10)" fg:x="682" fg:w="1"/><text x="86.4700%" y="415.50"></text></g><g><title>glm::builtin::exp::inversesqrt::{{closure}} (1 samples, 0.13%)</title><rect x="86.2200%" y="389" width="0.1264%" height="15" fill="rgb(225,113,19)" fg:x="682" fg:w="1"/><text x="86.4700%" y="399.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::sqrt (1 samples, 0.13%)</title><rect x="86.2200%" y="373" width="0.1264%" height="15" fill="rgb(241,2,18)" fg:x="682" fg:w="1"/><text x="86.4700%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (1 samples, 0.13%)</title><rect x="86.2200%" y="357" width="0.1264%" height="15" fill="rgb(228,207,21)" fg:x="682" fg:w="1"/><text x="86.4700%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="86.7257%" y="389" width="0.1264%" height="15" fill="rgb(213,211,35)" fg:x="686" fg:w="1"/><text x="86.9757%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (7 samples, 0.88%)</title><rect x="86.8521%" y="389" width="0.8850%" height="15" fill="rgb(209,83,10)" fg:x="687" fg:w="7"/><text x="87.1021%" y="399.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (12 samples, 1.52%)</title><rect x="86.5992%" y="405" width="1.5171%" height="15" fill="rgb(209,164,1)" fg:x="685" fg:w="12"/><text x="86.8492%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (3 samples, 0.38%)</title><rect x="87.7370%" y="389" width="0.3793%" height="15" fill="rgb(213,184,43)" fg:x="694" fg:w="3"/><text x="87.9870%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="88.2427%" y="389" width="0.1264%" height="15" fill="rgb(231,61,34)" fg:x="698" fg:w="1"/><text x="88.4927%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (7 samples, 0.88%)</title><rect x="88.3692%" y="373" width="0.8850%" height="15" fill="rgb(235,75,3)" fg:x="699" fg:w="7"/><text x="88.6192%" y="383.50"></text></g><g><title>glm::builtin::matrix::inverse (25 samples, 3.16%)</title><rect x="86.3464%" y="437" width="3.1606%" height="15" fill="rgb(220,106,47)" fg:x="683" fg:w="25"/><text x="86.5964%" y="447.50">glm..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (25 samples, 3.16%)</title><rect x="86.3464%" y="421" width="3.1606%" height="15" fill="rgb(210,196,33)" fg:x="683" fg:w="25"/><text x="86.5964%" y="431.50">glm..</text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (11 samples, 1.39%)</title><rect x="88.1163%" y="405" width="1.3906%" height="15" fill="rgb(229,154,42)" fg:x="697" fg:w="11"/><text x="88.3663%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (9 samples, 1.14%)</title><rect x="88.3692%" y="389" width="1.1378%" height="15" fill="rgb(228,114,26)" fg:x="699" fg:w="9"/><text x="88.6192%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (2 samples, 0.25%)</title><rect x="89.2541%" y="373" width="0.2528%" height="15" fill="rgb(208,144,1)" fg:x="706" fg:w="2"/><text x="89.5041%" y="383.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (5 samples, 0.63%)</title><rect x="89.8862%" y="405" width="0.6321%" height="15" fill="rgb(239,112,37)" fg:x="711" fg:w="5"/><text x="90.1362%" y="415.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::uv_at_intersection (1 samples, 0.13%)</title><rect x="90.5183%" y="405" width="0.1264%" height="15" fill="rgb(210,96,50)" fg:x="716" fg:w="1"/><text x="90.7683%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::atan2 (1 samples, 0.13%)</title><rect x="90.5183%" y="389" width="0.1264%" height="15" fill="rgb(222,178,2)" fg:x="716" fg:w="1"/><text x="90.7683%" y="399.50"></text></g><g><title>__atan2f (1 samples, 0.13%)</title><rect x="90.5183%" y="373" width="0.1264%" height="15" fill="rgb(226,74,18)" fg:x="716" fg:w="1"/><text x="90.7683%" y="383.50"></text></g><g><title>__ieee754_atan2f (1 samples, 0.13%)</title><rect x="90.5183%" y="357" width="0.1264%" height="15" fill="rgb(225,67,54)" fg:x="716" fg:w="1"/><text x="90.7683%" y="367.50"></text></g><g><title>__atanf (1 samples, 0.13%)</title><rect x="90.5183%" y="341" width="0.1264%" height="15" fill="rgb(251,92,32)" fg:x="716" fg:w="1"/><text x="90.7683%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="90.6448%" y="389" width="0.1264%" height="15" fill="rgb(228,149,22)" fg:x="717" fg:w="1"/><text x="90.8948%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="90.6448%" y="373" width="0.1264%" height="15" fill="rgb(243,54,13)" fg:x="717" fg:w="1"/><text x="90.8948%" y="383.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.13%)</title><rect x="90.6448%" y="357" width="0.1264%" height="15" fill="rgb(243,180,28)" fg:x="717" fg:w="1"/><text x="90.8948%" y="367.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}} (1 samples, 0.13%)</title><rect x="90.6448%" y="341" width="0.1264%" height="15" fill="rgb(208,167,24)" fg:x="717" fg:w="1"/><text x="90.8948%" y="351.50"></text></g><g><title>rustracer::raytracer::Ray::at (1 samples, 0.13%)</title><rect x="90.6448%" y="325" width="0.1264%" height="15" fill="rgb(245,73,45)" fg:x="717" fg:w="1"/><text x="90.8948%" y="335.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="90.6448%" y="309" width="0.1264%" height="15" fill="rgb(237,203,48)" fg:x="717" fg:w="1"/><text x="90.8948%" y="319.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="90.6448%" y="293" width="0.1264%" height="15" fill="rgb(211,197,16)" fg:x="717" fg:w="1"/><text x="90.8948%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="90.7712%" y="389" width="0.1264%" height="15" fill="rgb(243,99,51)" fg:x="718" fg:w="1"/><text x="91.0212%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="90.7712%" y="373" width="0.1264%" height="15" fill="rgb(215,123,29)" fg:x="718" fg:w="1"/><text x="91.0212%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="90.7712%" y="357" width="0.1264%" height="15" fill="rgb(239,186,37)" fg:x="718" fg:w="1"/><text x="91.0212%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4 samples, 0.51%)</title><rect x="90.6448%" y="405" width="0.5057%" height="15" fill="rgb(252,136,39)" fg:x="717" fg:w="4"/><text x="90.8948%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;,&lt;rustracer::primitive::Sphere as rustracer::primitive::PrimitiveComponent&gt;::intersect::{{closure}}&gt;&gt; (2 samples, 0.25%)</title><rect x="90.8976%" y="389" width="0.2528%" height="15" fill="rgb(223,213,32)" fg:x="719" fg:w="2"/><text x="91.1476%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (2 samples, 0.25%)</title><rect x="90.8976%" y="373" width="0.2528%" height="15" fill="rgb(233,115,5)" fg:x="719" fg:w="2"/><text x="91.1476%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="90.8976%" y="357" width="0.2528%" height="15" fill="rgb(207,226,44)" fg:x="719" fg:w="2"/><text x="91.1476%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (2 samples, 0.25%)</title><rect x="90.8976%" y="341" width="0.2528%" height="15" fill="rgb(208,126,0)" fg:x="719" fg:w="2"/><text x="91.1476%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="90.8976%" y="325" width="0.2528%" height="15" fill="rgb(244,66,21)" fg:x="719" fg:w="2"/><text x="91.1476%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (2 samples, 0.25%)</title><rect x="90.8976%" y="309" width="0.2528%" height="15" fill="rgb(222,97,12)" fg:x="719" fg:w="2"/><text x="91.1476%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="90.8976%" y="293" width="0.2528%" height="15" fill="rgb(219,213,19)" fg:x="719" fg:w="2"/><text x="91.1476%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.25%)</title><rect x="90.8976%" y="277" width="0.2528%" height="15" fill="rgb(252,169,30)" fg:x="719" fg:w="2"/><text x="91.1476%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.25%)</title><rect x="90.8976%" y="261" width="0.2528%" height="15" fill="rgb(206,32,51)" fg:x="719" fg:w="2"/><text x="91.1476%" y="271.50"></text></g><g><title>__GI___libc_free (2 samples, 0.25%)</title><rect x="90.8976%" y="245" width="0.2528%" height="15" fill="rgb(250,172,42)" fg:x="719" fg:w="2"/><text x="91.1476%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="91.0240%" y="229" width="0.1264%" height="15" fill="rgb(209,34,43)" fg:x="720" fg:w="1"/><text x="91.2740%" y="239.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (19 samples, 2.40%)</title><rect x="89.5070%" y="437" width="2.4020%" height="15" fill="rgb(223,11,35)" fg:x="708" fg:w="19"/><text x="89.7570%" y="447.50">ru..</text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (16 samples, 2.02%)</title><rect x="89.8862%" y="421" width="2.0228%" height="15" fill="rgb(251,219,26)" fg:x="711" fg:w="16"/><text x="90.1362%" y="431.50">&lt;..</text></g><g><title>rustracer::primitive::solve_quadratic (6 samples, 0.76%)</title><rect x="91.1504%" y="405" width="0.7585%" height="15" fill="rgb(231,119,3)" fg:x="721" fg:w="6"/><text x="91.4004%" y="415.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.13%)</title><rect x="91.7826%" y="389" width="0.1264%" height="15" fill="rgb(216,97,11)" fg:x="726" fg:w="1"/><text x="92.0326%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="91.9090%" y="389" width="0.1264%" height="15" fill="rgb(223,59,9)" fg:x="727" fg:w="1"/><text x="92.1590%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 6.32%)</title><rect x="85.8407%" y="549" width="6.3211%" height="15" fill="rgb(233,93,31)" fg:x="679" fg:w="50"/><text x="86.0907%" y="559.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (50 samples, 6.32%)</title><rect x="85.8407%" y="533" width="6.3211%" height="15" fill="rgb(239,81,33)" fg:x="679" fg:w="50"/><text x="86.0907%" y="543.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 6.32%)</title><rect x="85.8407%" y="517" width="6.3211%" height="15" fill="rgb(213,120,34)" fg:x="679" fg:w="50"/><text x="86.0907%" y="527.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 6.32%)</title><rect x="85.8407%" y="501" width="6.3211%" height="15" fill="rgb(243,49,53)" fg:x="679" fg:w="50"/><text x="86.0907%" y="511.50">core::op..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (50 samples, 6.32%)</title><rect x="85.8407%" y="485" width="6.3211%" height="15" fill="rgb(247,216,33)" fg:x="679" fg:w="50"/><text x="86.0907%" y="495.50">core::op..</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (50 samples, 6.32%)</title><rect x="85.8407%" y="469" width="6.3211%" height="15" fill="rgb(226,26,14)" fg:x="679" fg:w="50"/><text x="86.0907%" y="479.50">rustrace..</text></g><g><title>rustracer::shape::Shape::intersect (50 samples, 6.32%)</title><rect x="85.8407%" y="453" width="6.3211%" height="15" fill="rgb(215,49,53)" fg:x="679" fg:w="50"/><text x="86.0907%" y="463.50">rustrace..</text></g><g><title>rustracer::raytracer::Ray::to_object_space (2 samples, 0.25%)</title><rect x="91.9090%" y="437" width="0.2528%" height="15" fill="rgb(245,162,40)" fg:x="727" fg:w="2"/><text x="92.1590%" y="447.50"></text></g><g><title>rustracer::raytracer::Ray::transform (2 samples, 0.25%)</title><rect x="91.9090%" y="421" width="0.2528%" height="15" fill="rgb(229,68,17)" fg:x="727" fg:w="2"/><text x="92.1590%" y="431.50"></text></g><g><title>glm::mat::mat::Matrix4&lt;T&gt;::mul_v (2 samples, 0.25%)</title><rect x="91.9090%" y="405" width="0.2528%" height="15" fill="rgb(213,182,10)" fg:x="727" fg:w="2"/><text x="92.1590%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="92.0354%" y="389" width="0.1264%" height="15" fill="rgb(245,125,30)" fg:x="728" fg:w="1"/><text x="92.2854%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (56 samples, 7.08%)</title><rect x="85.2086%" y="629" width="7.0796%" height="15" fill="rgb(232,202,2)" fg:x="674" fg:w="56"/><text x="85.4586%" y="639.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (56 samples, 7.08%)</title><rect x="85.2086%" y="613" width="7.0796%" height="15" fill="rgb(237,140,51)" fg:x="674" fg:w="56"/><text x="85.4586%" y="623.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (56 samples, 7.08%)</title><rect x="85.2086%" y="597" width="7.0796%" height="15" fill="rgb(236,157,25)" fg:x="674" fg:w="56"/><text x="85.4586%" y="607.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 6.83%)</title><rect x="85.4614%" y="581" width="6.8268%" height="15" fill="rgb(219,209,0)" fg:x="676" fg:w="54"/><text x="85.7114%" y="591.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 6.83%)</title><rect x="85.4614%" y="565" width="6.8268%" height="15" fill="rgb(240,116,54)" fg:x="676" fg:w="54"/><text x="85.7114%" y="575.50">&lt;core::it..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.13%)</title><rect x="92.1618%" y="549" width="0.1264%" height="15" fill="rgb(216,10,36)" fg:x="729" fg:w="1"/><text x="92.4118%" y="559.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="92.2882%" y="485" width="0.1264%" height="15" fill="rgb(222,72,44)" fg:x="730" fg:w="1"/><text x="92.5382%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="92.2882%" y="469" width="0.1264%" height="15" fill="rgb(232,159,9)" fg:x="730" fg:w="1"/><text x="92.5382%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.13%)</title><rect x="92.5411%" y="261" width="0.1264%" height="15" fill="rgb(210,39,32)" fg:x="732" fg:w="1"/><text x="92.7911%" y="271.50"></text></g><g><title>glm::basenum::ApproxEq::is_approx_eq (1 samples, 0.13%)</title><rect x="92.7939%" y="229" width="0.1264%" height="15" fill="rgb(216,194,45)" fg:x="734" fg:w="1"/><text x="93.0439%" y="239.50"></text></g><g><title>&lt;f32 as glm::basenum::ApproxEq&gt;::is_close_to (1 samples, 0.13%)</title><rect x="92.7939%" y="213" width="0.1264%" height="15" fill="rgb(218,18,35)" fg:x="734" fg:w="1"/><text x="93.0439%" y="223.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (1 samples, 0.13%)</title><rect x="92.7939%" y="197" width="0.1264%" height="15" fill="rgb(207,83,51)" fg:x="734" fg:w="1"/><text x="93.0439%" y="207.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (3 samples, 0.38%)</title><rect x="92.9204%" y="229" width="0.3793%" height="15" fill="rgb(225,63,43)" fg:x="735" fg:w="3"/><text x="93.1704%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (3 samples, 0.38%)</title><rect x="92.9204%" y="213" width="0.3793%" height="15" fill="rgb(207,57,36)" fg:x="735" fg:w="3"/><text x="93.1704%" y="223.50"></text></g><g><title>glm::builtin::matrix::inverse (8 samples, 1.01%)</title><rect x="92.6675%" y="261" width="1.0114%" height="15" fill="rgb(216,99,33)" fg:x="733" fg:w="8"/><text x="92.9175%" y="271.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (7 samples, 0.88%)</title><rect x="92.7939%" y="245" width="0.8850%" height="15" fill="rgb(225,42,16)" fg:x="734" fg:w="7"/><text x="93.0439%" y="255.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (3 samples, 0.38%)</title><rect x="93.2996%" y="229" width="0.3793%" height="15" fill="rgb(220,201,45)" fg:x="738" fg:w="3"/><text x="93.5496%" y="239.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (3 samples, 0.38%)</title><rect x="93.2996%" y="213" width="0.3793%" height="15" fill="rgb(225,33,4)" fg:x="738" fg:w="3"/><text x="93.5496%" y="223.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (3 samples, 0.38%)</title><rect x="93.2996%" y="197" width="0.3793%" height="15" fill="rgb(224,33,50)" fg:x="738" fg:w="3"/><text x="93.5496%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.13%)</title><rect x="93.6789%" y="229" width="0.1264%" height="15" fill="rgb(246,198,51)" fg:x="741" fg:w="1"/><text x="93.9289%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.13%)</title><rect x="93.6789%" y="213" width="0.1264%" height="15" fill="rgb(205,22,4)" fg:x="741" fg:w="1"/><text x="93.9289%" y="223.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (3 samples, 0.38%)</title><rect x="93.8053%" y="229" width="0.3793%" height="15" fill="rgb(206,3,8)" fg:x="742" fg:w="3"/><text x="94.0553%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.13%)</title><rect x="94.0582%" y="213" width="0.1264%" height="15" fill="rgb(251,23,15)" fg:x="744" fg:w="1"/><text x="94.3082%" y="223.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::uv_at_intersection (1 samples, 0.13%)</title><rect x="94.1846%" y="229" width="0.1264%" height="15" fill="rgb(252,88,28)" fg:x="745" fg:w="1"/><text x="94.4346%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::atan2 (1 samples, 0.13%)</title><rect x="94.1846%" y="213" width="0.1264%" height="15" fill="rgb(212,127,14)" fg:x="745" fg:w="1"/><text x="94.4346%" y="223.50"></text></g><g><title>__atan2f (1 samples, 0.13%)</title><rect x="94.1846%" y="197" width="0.1264%" height="15" fill="rgb(247,145,37)" fg:x="745" fg:w="1"/><text x="94.4346%" y="207.50"></text></g><g><title>__ieee754_atan2f (1 samples, 0.13%)</title><rect x="94.1846%" y="181" width="0.1264%" height="15" fill="rgb(209,117,53)" fg:x="745" fg:w="1"/><text x="94.4346%" y="191.50"></text></g><g><title>__atanf (1 samples, 0.13%)</title><rect x="94.1846%" y="165" width="0.1264%" height="15" fill="rgb(212,90,42)" fg:x="745" fg:w="1"/><text x="94.4346%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.13%)</title><rect x="94.3110%" y="229" width="0.1264%" height="15" fill="rgb(218,164,37)" fg:x="746" fg:w="1"/><text x="94.5610%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="94.3110%" y="213" width="0.1264%" height="15" fill="rgb(246,65,34)" fg:x="746" fg:w="1"/><text x="94.5610%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="94.3110%" y="197" width="0.1264%" height="15" fill="rgb(231,100,33)" fg:x="746" fg:w="1"/><text x="94.5610%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="94.3110%" y="181" width="0.1264%" height="15" fill="rgb(228,126,14)" fg:x="746" fg:w="1"/><text x="94.5610%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="94.3110%" y="165" width="0.1264%" height="15" fill="rgb(215,173,21)" fg:x="746" fg:w="1"/><text x="94.5610%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;f32,alloc::alloc::Global&gt;&gt; (1 samples, 0.13%)</title><rect x="94.3110%" y="149" width="0.1264%" height="15" fill="rgb(210,6,40)" fg:x="746" fg:w="1"/><text x="94.5610%" y="159.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="94.3110%" y="133" width="0.1264%" height="15" fill="rgb(212,48,18)" fg:x="746" fg:w="1"/><text x="94.5610%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.13%)</title><rect x="94.3110%" y="117" width="0.1264%" height="15" fill="rgb(230,214,11)" fg:x="746" fg:w="1"/><text x="94.5610%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="94.3110%" y="101" width="0.1264%" height="15" fill="rgb(254,105,39)" fg:x="746" fg:w="1"/><text x="94.5610%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.13%)</title><rect x="94.3110%" y="85" width="0.1264%" height="15" fill="rgb(245,158,5)" fg:x="746" fg:w="1"/><text x="94.5610%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.13%)</title><rect x="94.3110%" y="69" width="0.1264%" height="15" fill="rgb(249,208,11)" fg:x="746" fg:w="1"/><text x="94.5610%" y="79.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="94.3110%" y="53" width="0.1264%" height="15" fill="rgb(210,39,28)" fg:x="746" fg:w="1"/><text x="94.5610%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="94.5638%" y="213" width="0.1264%" height="15" fill="rgb(211,56,53)" fg:x="748" fg:w="1"/><text x="94.8138%" y="223.50"></text></g><g><title>rustracer::primitive::solve_quadratic (4 samples, 0.51%)</title><rect x="94.4374%" y="229" width="0.5057%" height="15" fill="rgb(226,201,30)" fg:x="747" fg:w="4"/><text x="94.6874%" y="239.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (2 samples, 0.25%)</title><rect x="94.6903%" y="213" width="0.2528%" height="15" fill="rgb(239,101,34)" fg:x="749" fg:w="2"/><text x="94.9403%" y="223.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (11 samples, 1.39%)</title><rect x="93.6789%" y="245" width="1.3906%" height="15" fill="rgb(226,209,5)" fg:x="741" fg:w="11"/><text x="93.9289%" y="255.50"></text></g><g><title>rustracer::raytracer::Ray::at (1 samples, 0.13%)</title><rect x="94.9431%" y="229" width="0.1264%" height="15" fill="rgb(250,105,47)" fg:x="751" fg:w="1"/><text x="95.1931%" y="239.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&lt;T&gt;&gt;::mul (1 samples, 0.13%)</title><rect x="94.9431%" y="213" width="0.1264%" height="15" fill="rgb(230,72,3)" fg:x="751" fg:w="1"/><text x="95.1931%" y="223.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="94.9431%" y="197" width="0.1264%" height="15" fill="rgb(232,218,39)" fg:x="751" fg:w="1"/><text x="95.1931%" y="207.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (12 samples, 1.52%)</title><rect x="93.6789%" y="261" width="1.5171%" height="15" fill="rgb(248,166,6)" fg:x="741" fg:w="12"/><text x="93.9289%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.13%)</title><rect x="95.0695%" y="245" width="0.1264%" height="15" fill="rgb(247,89,20)" fg:x="752" fg:w="1"/><text x="95.3195%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.13%)</title><rect x="95.0695%" y="229" width="0.1264%" height="15" fill="rgb(248,130,54)" fg:x="752" fg:w="1"/><text x="95.3195%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="95.0695%" y="213" width="0.1264%" height="15" fill="rgb(234,196,4)" fg:x="752" fg:w="1"/><text x="95.3195%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="95.0695%" y="197" width="0.1264%" height="15" fill="rgb(250,143,31)" fg:x="752" fg:w="1"/><text x="95.3195%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="95.0695%" y="181" width="0.1264%" height="15" fill="rgb(211,110,34)" fg:x="752" fg:w="1"/><text x="95.3195%" y="191.50"></text></g><g><title>rustracer::lights::Light::is_visible (25 samples, 3.16%)</title><rect x="92.4147%" y="485" width="3.1606%" height="15" fill="rgb(215,124,48)" fg:x="731" fg:w="25"/><text x="92.6647%" y="495.50">rus..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (25 samples, 3.16%)</title><rect x="92.4147%" y="469" width="3.1606%" height="15" fill="rgb(216,46,13)" fg:x="731" fg:w="25"/><text x="92.6647%" y="479.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (25 samples, 3.16%)</title><rect x="92.4147%" y="453" width="3.1606%" height="15" fill="rgb(205,184,25)" fg:x="731" fg:w="25"/><text x="92.6647%" y="463.50">cor..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (25 samples, 3.16%)</title><rect x="92.4147%" y="437" width="3.1606%" height="15" fill="rgb(228,1,10)" fg:x="731" fg:w="25"/><text x="92.6647%" y="447.50">&lt;us..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="421" width="3.1606%" height="15" fill="rgb(213,116,27)" fg:x="731" fg:w="25"/><text x="92.6647%" y="431.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="405" width="3.1606%" height="15" fill="rgb(241,95,50)" fg:x="731" fg:w="25"/><text x="92.6647%" y="415.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="389" width="3.1606%" height="15" fill="rgb(238,48,32)" fg:x="731" fg:w="25"/><text x="92.6647%" y="399.50">&lt;co..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (25 samples, 3.16%)</title><rect x="92.4147%" y="373" width="3.1606%" height="15" fill="rgb(235,113,49)" fg:x="731" fg:w="25"/><text x="92.6647%" y="383.50">cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="357" width="3.1606%" height="15" fill="rgb(205,127,43)" fg:x="731" fg:w="25"/><text x="92.6647%" y="367.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="341" width="3.1606%" height="15" fill="rgb(250,162,2)" fg:x="731" fg:w="25"/><text x="92.6647%" y="351.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 3.16%)</title><rect x="92.4147%" y="325" width="3.1606%" height="15" fill="rgb(220,13,41)" fg:x="731" fg:w="25"/><text x="92.6647%" y="335.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (25 samples, 3.16%)</title><rect x="92.4147%" y="309" width="3.1606%" height="15" fill="rgb(249,221,25)" fg:x="731" fg:w="25"/><text x="92.6647%" y="319.50">cor..</text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (25 samples, 3.16%)</title><rect x="92.4147%" y="293" width="3.1606%" height="15" fill="rgb(215,208,19)" fg:x="731" fg:w="25"/><text x="92.6647%" y="303.50">rus..</text></g><g><title>rustracer::shape::Shape::intersect (25 samples, 3.16%)</title><rect x="92.4147%" y="277" width="3.1606%" height="15" fill="rgb(236,175,2)" fg:x="731" fg:w="25"/><text x="92.6647%" y="287.50">rus..</text></g><g><title>rustracer::raytracer::Ray::to_object_space (3 samples, 0.38%)</title><rect x="95.1960%" y="261" width="0.3793%" height="15" fill="rgb(241,52,2)" fg:x="753" fg:w="3"/><text x="95.4460%" y="271.50"></text></g><g><title>rustracer::raytracer::Ray::transform (3 samples, 0.38%)</title><rect x="95.1960%" y="245" width="0.3793%" height="15" fill="rgb(248,140,14)" fg:x="753" fg:w="3"/><text x="95.4460%" y="255.50"></text></g><g><title>glm::mat::mat::Matrix4&lt;T&gt;::mul_v (2 samples, 0.25%)</title><rect x="95.3224%" y="229" width="0.2528%" height="15" fill="rgb(253,22,42)" fg:x="754" fg:w="2"/><text x="95.5724%" y="239.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.25%)</title><rect x="95.3224%" y="213" width="0.2528%" height="15" fill="rgb(234,61,47)" fg:x="754" fg:w="2"/><text x="95.5724%" y="223.50"></text></g><g><title>rustracer::lights::reflect_around (1 samples, 0.13%)</title><rect x="95.5752%" y="485" width="0.1264%" height="15" fill="rgb(208,226,15)" fg:x="756" fg:w="1"/><text x="95.8252%" y="495.50"></text></g><g><title>glm::builtin::geom::dot (1 samples, 0.13%)</title><rect x="95.5752%" y="469" width="0.1264%" height="15" fill="rgb(217,221,4)" fg:x="756" fg:w="1"/><text x="95.8252%" y="479.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as glm::vec::traits::GenNumVec&lt;T&gt;&gt;::sum (1 samples, 0.13%)</title><rect x="95.5752%" y="453" width="0.1264%" height="15" fill="rgb(212,174,34)" fg:x="756" fg:w="1"/><text x="95.8252%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="95.5752%" y="437" width="0.1264%" height="15" fill="rgb(253,83,4)" fg:x="756" fg:w="1"/><text x="95.8252%" y="447.50"></text></g><g><title>rustracer::lights::to_intensity (2 samples, 0.25%)</title><rect x="95.8281%" y="469" width="0.2528%" height="15" fill="rgb(250,195,49)" fg:x="758" fg:w="2"/><text x="96.0781%" y="479.50"></text></g><g><title>rustracer::lights::uv_lookup (5 samples, 0.63%)</title><rect x="95.7016%" y="485" width="0.6321%" height="15" fill="rgb(241,192,25)" fg:x="757" fg:w="5"/><text x="95.9516%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.25%)</title><rect x="96.0809%" y="469" width="0.2528%" height="15" fill="rgb(208,124,10)" fg:x="760" fg:w="2"/><text x="96.3309%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.25%)</title><rect x="96.0809%" y="453" width="0.2528%" height="15" fill="rgb(222,33,0)" fg:x="760" fg:w="2"/><text x="96.3309%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.25%)</title><rect x="96.0809%" y="437" width="0.2528%" height="15" fill="rgb(234,209,28)" fg:x="760" fg:w="2"/><text x="96.3309%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.25%)</title><rect x="96.0809%" y="421" width="0.2528%" height="15" fill="rgb(224,11,23)" fg:x="760" fg:w="2"/><text x="96.3309%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.25%)</title><rect x="96.0809%" y="405" width="0.2528%" height="15" fill="rgb(232,99,1)" fg:x="760" fg:w="2"/><text x="96.3309%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.25%)</title><rect x="96.0809%" y="389" width="0.2528%" height="15" fill="rgb(237,95,45)" fg:x="760" fg:w="2"/><text x="96.3309%" y="399.50"></text></g><g><title>&lt;std::path::PathBuf as core::hash::Hash&gt;::hash (2 samples, 0.25%)</title><rect x="96.0809%" y="373" width="0.2528%" height="15" fill="rgb(208,109,11)" fg:x="760" fg:w="2"/><text x="96.3309%" y="383.50"></text></g><g><title>&lt;std::path::Path as core::hash::Hash&gt;::hash (2 samples, 0.25%)</title><rect x="96.0809%" y="357" width="0.2528%" height="15" fill="rgb(216,190,48)" fg:x="760" fg:w="2"/><text x="96.3309%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="96.2073%" y="341" width="0.1264%" height="15" fill="rgb(251,171,36)" fg:x="761" fg:w="1"/><text x="96.4573%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.13%)</title><rect x="96.2073%" y="325" width="0.1264%" height="15" fill="rgb(230,62,22)" fg:x="761" fg:w="1"/><text x="96.4573%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 4.17%)</title><rect x="92.2882%" y="613" width="4.1719%" height="15" fill="rgb(225,114,35)" fg:x="730" fg:w="33"/><text x="92.5382%" y="623.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 4.17%)</title><rect x="92.2882%" y="597" width="4.1719%" height="15" fill="rgb(215,118,42)" fg:x="730" fg:w="33"/><text x="92.5382%" y="607.50">&lt;core..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (33 samples, 4.17%)</title><rect x="92.2882%" y="581" width="4.1719%" height="15" fill="rgb(243,119,21)" fg:x="730" fg:w="33"/><text x="92.5382%" y="591.50">core:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 4.17%)</title><rect x="92.2882%" y="565" width="4.1719%" height="15" fill="rgb(252,177,53)" fg:x="730" fg:w="33"/><text x="92.5382%" y="575.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 4.17%)</title><rect x="92.2882%" y="549" width="4.1719%" height="15" fill="rgb(237,209,29)" fg:x="730" fg:w="33"/><text x="92.5382%" y="559.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 4.17%)</title><rect x="92.2882%" y="533" width="4.1719%" height="15" fill="rgb(212,65,23)" fg:x="730" fg:w="33"/><text x="92.5382%" y="543.50">core:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (33 samples, 4.17%)</title><rect x="92.2882%" y="517" width="4.1719%" height="15" fill="rgb(230,222,46)" fg:x="730" fg:w="33"/><text x="92.5382%" y="527.50">core:..</text></g><g><title>rustracer::lights::phong::{{closure}} (33 samples, 4.17%)</title><rect x="92.2882%" y="501" width="4.1719%" height="15" fill="rgb(215,135,32)" fg:x="730" fg:w="33"/><text x="92.5382%" y="511.50">rustr..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (1 samples, 0.13%)</title><rect x="96.3338%" y="485" width="0.1264%" height="15" fill="rgb(246,101,22)" fg:x="762" fg:w="1"/><text x="96.5838%" y="495.50"></text></g><g><title>__powf_fma (1 samples, 0.13%)</title><rect x="96.3338%" y="469" width="0.1264%" height="15" fill="rgb(206,107,13)" fg:x="762" fg:w="1"/><text x="96.5838%" y="479.50"></text></g><g><title>rustracer::lights::phong (34 samples, 4.30%)</title><rect x="92.2882%" y="629" width="4.2984%" height="15" fill="rgb(250,100,44)" fg:x="730" fg:w="34"/><text x="92.5382%" y="639.50">rustr..</text></g><g><title>glm::builtin::geom::normalize (1 samples, 0.13%)</title><rect x="96.4602%" y="613" width="0.1264%" height="15" fill="rgb(231,147,38)" fg:x="763" fg:w="1"/><text x="96.7102%" y="623.50"></text></g><g><title>glm::builtin::geom::dot (1 samples, 0.13%)</title><rect x="96.4602%" y="597" width="0.1264%" height="15" fill="rgb(229,8,40)" fg:x="763" fg:w="1"/><text x="96.7102%" y="607.50"></text></g><g><title>&lt;glm::vec::vec::Vector4&lt;T&gt; as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="96.4602%" y="581" width="0.1264%" height="15" fill="rgb(221,135,30)" fg:x="763" fg:w="1"/><text x="96.7102%" y="591.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="96.4602%" y="565" width="0.1264%" height="15" fill="rgb(249,193,18)" fg:x="763" fg:w="1"/><text x="96.7102%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="96.5866%" y="565" width="0.1264%" height="15" fill="rgb(209,133,39)" fg:x="764" fg:w="1"/><text x="96.8366%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="96.5866%" y="549" width="0.1264%" height="15" fill="rgb(232,100,14)" fg:x="764" fg:w="1"/><text x="96.8366%" y="559.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (1 samples, 0.13%)</title><rect x="96.5866%" y="533" width="0.1264%" height="15" fill="rgb(224,185,1)" fg:x="764" fg:w="1"/><text x="96.8366%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="96.5866%" y="517" width="0.1264%" height="15" fill="rgb(223,139,8)" fg:x="764" fg:w="1"/><text x="96.8366%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="96.5866%" y="501" width="0.1264%" height="15" fill="rgb(232,213,38)" fg:x="764" fg:w="1"/><text x="96.8366%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="96.5866%" y="485" width="0.1264%" height="15" fill="rgb(207,94,22)" fg:x="764" fg:w="1"/><text x="96.8366%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.13%)</title><rect x="96.5866%" y="469" width="0.1264%" height="15" fill="rgb(219,183,54)" fg:x="764" fg:w="1"/><text x="96.8366%" y="479.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (1 samples, 0.13%)</title><rect x="96.5866%" y="453" width="0.1264%" height="15" fill="rgb(216,185,54)" fg:x="764" fg:w="1"/><text x="96.8366%" y="463.50"></text></g><g><title>rustracer::shape::Shape::intersect (1 samples, 0.13%)</title><rect x="96.5866%" y="437" width="0.1264%" height="15" fill="rgb(254,217,39)" fg:x="764" fg:w="1"/><text x="96.8366%" y="447.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="96.5866%" y="421" width="0.1264%" height="15" fill="rgb(240,178,23)" fg:x="764" fg:w="1"/><text x="96.8366%" y="431.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="96.5866%" y="405" width="0.1264%" height="15" fill="rgb(218,11,47)" fg:x="764" fg:w="1"/><text x="96.8366%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (1 samples, 0.13%)</title><rect x="96.5866%" y="389" width="0.1264%" height="15" fill="rgb(218,51,51)" fg:x="764" fg:w="1"/><text x="96.8366%" y="399.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="96.5866%" y="373" width="0.1264%" height="15" fill="rgb(238,126,27)" fg:x="764" fg:w="1"/><text x="96.8366%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="96.5866%" y="357" width="0.1264%" height="15" fill="rgb(249,202,22)" fg:x="764" fg:w="1"/><text x="96.8366%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.13%)</title><rect x="96.7130%" y="421" width="0.1264%" height="15" fill="rgb(254,195,49)" fg:x="765" fg:w="1"/><text x="96.9630%" y="431.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="96.8394%" y="405" width="0.1264%" height="15" fill="rgb(208,123,14)" fg:x="766" fg:w="1"/><text x="97.0894%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="96.8394%" y="389" width="0.1264%" height="15" fill="rgb(224,200,8)" fg:x="766" fg:w="1"/><text x="97.0894%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.13%)</title><rect x="96.8394%" y="373" width="0.1264%" height="15" fill="rgb(217,61,36)" fg:x="766" fg:w="1"/><text x="97.0894%" y="383.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::determinant (5 samples, 0.63%)</title><rect x="96.9659%" y="389" width="0.6321%" height="15" fill="rgb(206,35,45)" fg:x="767" fg:w="5"/><text x="97.2159%" y="399.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (5 samples, 0.63%)</title><rect x="96.9659%" y="373" width="0.6321%" height="15" fill="rgb(217,65,33)" fg:x="767" fg:w="5"/><text x="97.2159%" y="383.50"></text></g><g><title>glm::builtin::matrix::inverse (7 samples, 0.88%)</title><rect x="96.8394%" y="421" width="0.8850%" height="15" fill="rgb(222,158,48)" fg:x="766" fg:w="7"/><text x="97.0894%" y="431.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (6 samples, 0.76%)</title><rect x="96.9659%" y="405" width="0.7585%" height="15" fill="rgb(254,2,54)" fg:x="767" fg:w="6"/><text x="97.2159%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (1 samples, 0.13%)</title><rect x="97.5980%" y="389" width="0.1264%" height="15" fill="rgb(250,143,38)" fg:x="772" fg:w="1"/><text x="97.8480%" y="399.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="97.5980%" y="373" width="0.1264%" height="15" fill="rgb(248,25,0)" fg:x="772" fg:w="1"/><text x="97.8480%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.13%)</title><rect x="97.5980%" y="357" width="0.1264%" height="15" fill="rgb(206,152,27)" fg:x="772" fg:w="1"/><text x="97.8480%" y="367.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (1 samples, 0.13%)</title><rect x="97.7244%" y="389" width="0.1264%" height="15" fill="rgb(240,77,30)" fg:x="773" fg:w="1"/><text x="97.9744%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (13 samples, 1.64%)</title><rect x="96.5866%" y="613" width="1.6435%" height="15" fill="rgb(231,5,3)" fg:x="764" fg:w="13"/><text x="96.8366%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (13 samples, 1.64%)</title><rect x="96.5866%" y="597" width="1.6435%" height="15" fill="rgb(207,226,32)" fg:x="764" fg:w="13"/><text x="96.8366%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (13 samples, 1.64%)</title><rect x="96.5866%" y="581" width="1.6435%" height="15" fill="rgb(222,207,47)" fg:x="764" fg:w="13"/><text x="96.8366%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.52%)</title><rect x="96.7130%" y="565" width="1.5171%" height="15" fill="rgb(229,115,45)" fg:x="765" fg:w="12"/><text x="96.9630%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.52%)</title><rect x="96.7130%" y="549" width="1.5171%" height="15" fill="rgb(224,191,6)" fg:x="765" fg:w="12"/><text x="96.9630%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.52%)</title><rect x="96.7130%" y="533" width="1.5171%" height="15" fill="rgb(230,227,24)" fg:x="765" fg:w="12"/><text x="96.9630%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (12 samples, 1.52%)</title><rect x="96.7130%" y="517" width="1.5171%" height="15" fill="rgb(228,80,19)" fg:x="765" fg:w="12"/><text x="96.9630%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.52%)</title><rect x="96.7130%" y="501" width="1.5171%" height="15" fill="rgb(247,229,0)" fg:x="765" fg:w="12"/><text x="96.9630%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 1.52%)</title><rect x="96.7130%" y="485" width="1.5171%" height="15" fill="rgb(237,194,15)" fg:x="765" fg:w="12"/><text x="96.9630%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 1.52%)</title><rect x="96.7130%" y="469" width="1.5171%" height="15" fill="rgb(219,203,20)" fg:x="765" fg:w="12"/><text x="96.9630%" y="479.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (12 samples, 1.52%)</title><rect x="96.7130%" y="453" width="1.5171%" height="15" fill="rgb(234,128,8)" fg:x="765" fg:w="12"/><text x="96.9630%" y="463.50"></text></g><g><title>rustracer::shape::Shape::intersect (12 samples, 1.52%)</title><rect x="96.7130%" y="437" width="1.5171%" height="15" fill="rgb(248,202,8)" fg:x="765" fg:w="12"/><text x="96.9630%" y="447.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (4 samples, 0.51%)</title><rect x="97.7244%" y="421" width="0.5057%" height="15" fill="rgb(206,104,37)" fg:x="773" fg:w="4"/><text x="97.9744%" y="431.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (4 samples, 0.51%)</title><rect x="97.7244%" y="405" width="0.5057%" height="15" fill="rgb(223,8,27)" fg:x="773" fg:w="4"/><text x="97.9744%" y="415.50"></text></g><g><title>rustracer::primitive::solve_quadratic (3 samples, 0.38%)</title><rect x="97.8508%" y="389" width="0.3793%" height="15" fill="rgb(216,217,28)" fg:x="774" fg:w="3"/><text x="98.1008%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.25%)</title><rect x="97.9772%" y="373" width="0.2528%" height="15" fill="rgb(249,199,1)" fg:x="775" fg:w="2"/><text x="98.2272%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.25%)</title><rect x="97.9772%" y="357" width="0.2528%" height="15" fill="rgb(240,85,17)" fg:x="775" fg:w="2"/><text x="98.2272%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.25%)</title><rect x="97.9772%" y="341" width="0.2528%" height="15" fill="rgb(206,108,45)" fg:x="775" fg:w="2"/><text x="98.2272%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.25%)</title><rect x="97.9772%" y="325" width="0.2528%" height="15" fill="rgb(245,210,41)" fg:x="775" fg:w="2"/><text x="98.2272%" y="335.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.25%)</title><rect x="97.9772%" y="309" width="0.2528%" height="15" fill="rgb(206,13,37)" fg:x="775" fg:w="2"/><text x="98.2272%" y="319.50"></text></g><g><title>tcache_get (1 samples, 0.13%)</title><rect x="98.1037%" y="293" width="0.1264%" height="15" fill="rgb(250,61,18)" fg:x="776" fg:w="1"/><text x="98.3537%" y="303.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="98.2301%" y="245" width="0.1264%" height="15" fill="rgb(235,172,48)" fg:x="777" fg:w="1"/><text x="98.4801%" y="255.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="98.2301%" y="229" width="0.1264%" height="15" fill="rgb(249,201,17)" fg:x="777" fg:w="1"/><text x="98.4801%" y="239.50"></text></g><g><title>glm::basenum::ApproxEq::is_approx_eq (1 samples, 0.13%)</title><rect x="98.2301%" y="213" width="0.1264%" height="15" fill="rgb(219,208,6)" fg:x="777" fg:w="1"/><text x="98.4801%" y="223.50"></text></g><g><title>&lt;f32 as glm::basenum::ApproxEq&gt;::is_close_to (1 samples, 0.13%)</title><rect x="98.2301%" y="197" width="0.1264%" height="15" fill="rgb(248,31,23)" fg:x="777" fg:w="1"/><text x="98.4801%" y="207.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (1 samples, 0.13%)</title><rect x="98.2301%" y="181" width="0.1264%" height="15" fill="rgb(245,15,42)" fg:x="777" fg:w="1"/><text x="98.4801%" y="191.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::calculate_quadratic_coefficients (1 samples, 0.13%)</title><rect x="98.3565%" y="213" width="0.1264%" height="15" fill="rgb(222,217,39)" fg:x="778" fg:w="1"/><text x="98.6065%" y="223.50"></text></g><g><title>rustracer::lights::Light::is_visible (3 samples, 0.38%)</title><rect x="98.2301%" y="469" width="0.3793%" height="15" fill="rgb(210,219,27)" fg:x="777" fg:w="3"/><text x="98.4801%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (3 samples, 0.38%)</title><rect x="98.2301%" y="453" width="0.3793%" height="15" fill="rgb(252,166,36)" fg:x="777" fg:w="3"/><text x="98.4801%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.38%)</title><rect x="98.2301%" y="437" width="0.3793%" height="15" fill="rgb(245,132,34)" fg:x="777" fg:w="3"/><text x="98.4801%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.38%)</title><rect x="98.2301%" y="421" width="0.3793%" height="15" fill="rgb(236,54,3)" fg:x="777" fg:w="3"/><text x="98.4801%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="405" width="0.3793%" height="15" fill="rgb(241,173,43)" fg:x="777" fg:w="3"/><text x="98.4801%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="389" width="0.3793%" height="15" fill="rgb(215,190,9)" fg:x="777" fg:w="3"/><text x="98.4801%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="373" width="0.3793%" height="15" fill="rgb(242,101,16)" fg:x="777" fg:w="3"/><text x="98.4801%" y="383.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (3 samples, 0.38%)</title><rect x="98.2301%" y="357" width="0.3793%" height="15" fill="rgb(223,190,21)" fg:x="777" fg:w="3"/><text x="98.4801%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="341" width="0.3793%" height="15" fill="rgb(215,228,25)" fg:x="777" fg:w="3"/><text x="98.4801%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="325" width="0.3793%" height="15" fill="rgb(225,36,22)" fg:x="777" fg:w="3"/><text x="98.4801%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.38%)</title><rect x="98.2301%" y="309" width="0.3793%" height="15" fill="rgb(251,106,46)" fg:x="777" fg:w="3"/><text x="98.4801%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.38%)</title><rect x="98.2301%" y="293" width="0.3793%" height="15" fill="rgb(208,90,1)" fg:x="777" fg:w="3"/><text x="98.4801%" y="303.50"></text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (3 samples, 0.38%)</title><rect x="98.2301%" y="277" width="0.3793%" height="15" fill="rgb(243,10,4)" fg:x="777" fg:w="3"/><text x="98.4801%" y="287.50"></text></g><g><title>rustracer::shape::Shape::intersect (3 samples, 0.38%)</title><rect x="98.2301%" y="261" width="0.3793%" height="15" fill="rgb(212,137,27)" fg:x="777" fg:w="3"/><text x="98.4801%" y="271.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (2 samples, 0.25%)</title><rect x="98.3565%" y="245" width="0.2528%" height="15" fill="rgb(231,220,49)" fg:x="778" fg:w="2"/><text x="98.6065%" y="255.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (2 samples, 0.25%)</title><rect x="98.3565%" y="229" width="0.2528%" height="15" fill="rgb(237,96,20)" fg:x="778" fg:w="2"/><text x="98.6065%" y="239.50"></text></g><g><title>&lt;rustracer::primitive::Sphere as rustracer::primitive::QuadraticBody&gt;::uv_at_intersection (1 samples, 0.13%)</title><rect x="98.4829%" y="213" width="0.1264%" height="15" fill="rgb(239,229,30)" fg:x="779" fg:w="1"/><text x="98.7329%" y="223.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::atan2 (1 samples, 0.13%)</title><rect x="98.4829%" y="197" width="0.1264%" height="15" fill="rgb(219,65,33)" fg:x="779" fg:w="1"/><text x="98.7329%" y="207.50"></text></g><g><title>__atan2f (1 samples, 0.13%)</title><rect x="98.4829%" y="181" width="0.1264%" height="15" fill="rgb(243,134,7)" fg:x="779" fg:w="1"/><text x="98.7329%" y="191.50"></text></g><g><title>rustracer::lights::phong (4 samples, 0.51%)</title><rect x="98.2301%" y="613" width="0.5057%" height="15" fill="rgb(216,177,54)" fg:x="777" fg:w="4"/><text x="98.4801%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.51%)</title><rect x="98.2301%" y="597" width="0.5057%" height="15" fill="rgb(211,160,20)" fg:x="777" fg:w="4"/><text x="98.4801%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.51%)</title><rect x="98.2301%" y="581" width="0.5057%" height="15" fill="rgb(239,85,39)" fg:x="777" fg:w="4"/><text x="98.4801%" y="591.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (4 samples, 0.51%)</title><rect x="98.2301%" y="565" width="0.5057%" height="15" fill="rgb(232,125,22)" fg:x="777" fg:w="4"/><text x="98.4801%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.51%)</title><rect x="98.2301%" y="549" width="0.5057%" height="15" fill="rgb(244,57,34)" fg:x="777" fg:w="4"/><text x="98.4801%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.51%)</title><rect x="98.2301%" y="533" width="0.5057%" height="15" fill="rgb(214,203,32)" fg:x="777" fg:w="4"/><text x="98.4801%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.51%)</title><rect x="98.2301%" y="517" width="0.5057%" height="15" fill="rgb(207,58,43)" fg:x="777" fg:w="4"/><text x="98.4801%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.51%)</title><rect x="98.2301%" y="501" width="0.5057%" height="15" fill="rgb(215,193,15)" fg:x="777" fg:w="4"/><text x="98.4801%" y="511.50"></text></g><g><title>rustracer::lights::phong::{{closure}} (4 samples, 0.51%)</title><rect x="98.2301%" y="485" width="0.5057%" height="15" fill="rgb(232,15,44)" fg:x="777" fg:w="4"/><text x="98.4801%" y="495.50"></text></g><g><title>rustracer::lights::uv_lookup (1 samples, 0.13%)</title><rect x="98.6094%" y="469" width="0.1264%" height="15" fill="rgb(212,3,48)" fg:x="780" fg:w="1"/><text x="98.8594%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.13%)</title><rect x="98.6094%" y="453" width="0.1264%" height="15" fill="rgb(218,128,7)" fg:x="780" fg:w="1"/><text x="98.8594%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.13%)</title><rect x="98.6094%" y="437" width="0.1264%" height="15" fill="rgb(226,216,39)" fg:x="780" fg:w="1"/><text x="98.8594%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.13%)</title><rect x="98.6094%" y="421" width="0.1264%" height="15" fill="rgb(243,47,51)" fg:x="780" fg:w="1"/><text x="98.8594%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.13%)</title><rect x="98.6094%" y="405" width="0.1264%" height="15" fill="rgb(241,183,40)" fg:x="780" fg:w="1"/><text x="98.8594%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.13%)</title><rect x="98.6094%" y="389" width="0.1264%" height="15" fill="rgb(231,217,32)" fg:x="780" fg:w="1"/><text x="98.8594%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.13%)</title><rect x="98.6094%" y="373" width="0.1264%" height="15" fill="rgb(229,61,38)" fg:x="780" fg:w="1"/><text x="98.8594%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.13%)</title><rect x="98.6094%" y="357" width="0.1264%" height="15" fill="rgb(225,210,5)" fg:x="780" fg:w="1"/><text x="98.8594%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.13%)</title><rect x="98.6094%" y="341" width="0.1264%" height="15" fill="rgb(231,79,45)" fg:x="780" fg:w="1"/><text x="98.8594%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="98.6094%" y="325" width="0.1264%" height="15" fill="rgb(224,100,7)" fg:x="780" fg:w="1"/><text x="98.8594%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.13%)</title><rect x="98.7358%" y="597" width="0.1264%" height="15" fill="rgb(241,198,18)" fg:x="781" fg:w="1"/><text x="98.9858%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.13%)</title><rect x="98.7358%" y="581" width="0.1264%" height="15" fill="rgb(252,97,53)" fg:x="781" fg:w="1"/><text x="98.9858%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.13%)</title><rect x="98.7358%" y="565" width="0.1264%" height="15" fill="rgb(220,88,7)" fg:x="781" fg:w="1"/><text x="98.9858%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.7358%" y="549" width="0.1264%" height="15" fill="rgb(213,176,14)" fg:x="781" fg:w="1"/><text x="98.9858%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.7358%" y="533" width="0.1264%" height="15" fill="rgb(246,73,7)" fg:x="781" fg:w="1"/><text x="98.9858%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.7358%" y="517" width="0.1264%" height="15" fill="rgb(245,64,36)" fg:x="781" fg:w="1"/><text x="98.9858%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.13%)</title><rect x="98.7358%" y="501" width="0.1264%" height="15" fill="rgb(245,80,10)" fg:x="781" fg:w="1"/><text x="98.9858%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="98.7358%" y="485" width="0.1264%" height="15" fill="rgb(232,107,50)" fg:x="781" fg:w="1"/><text x="98.9858%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.13%)</title><rect x="98.7358%" y="469" width="0.1264%" height="15" fill="rgb(253,3,0)" fg:x="781" fg:w="1"/><text x="98.9858%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.13%)</title><rect x="98.7358%" y="453" width="0.1264%" height="15" fill="rgb(212,99,53)" fg:x="781" fg:w="1"/><text x="98.9858%" y="463.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (1 samples, 0.13%)</title><rect x="98.7358%" y="437" width="0.1264%" height="15" fill="rgb(249,111,54)" fg:x="781" fg:w="1"/><text x="98.9858%" y="447.50"></text></g><g><title>rustracer::shape::Shape::intersect (1 samples, 0.13%)</title><rect x="98.7358%" y="421" width="0.1264%" height="15" fill="rgb(249,55,30)" fg:x="781" fg:w="1"/><text x="98.9858%" y="431.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="98.7358%" y="405" width="0.1264%" height="15" fill="rgb(237,47,42)" fg:x="781" fg:w="1"/><text x="98.9858%" y="415.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="98.7358%" y="389" width="0.1264%" height="15" fill="rgb(211,20,18)" fg:x="781" fg:w="1"/><text x="98.9858%" y="399.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (1 samples, 0.13%)</title><rect x="98.7358%" y="373" width="0.1264%" height="15" fill="rgb(231,203,46)" fg:x="781" fg:w="1"/><text x="98.9858%" y="383.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (1 samples, 0.13%)</title><rect x="98.7358%" y="357" width="0.1264%" height="15" fill="rgb(237,142,3)" fg:x="781" fg:w="1"/><text x="98.9858%" y="367.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="98.8622%" y="229" width="0.1264%" height="15" fill="rgb(241,107,1)" fg:x="782" fg:w="1"/><text x="99.1122%" y="239.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="98.8622%" y="213" width="0.1264%" height="15" fill="rgb(229,83,13)" fg:x="782" fg:w="1"/><text x="99.1122%" y="223.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::recip (1 samples, 0.13%)</title><rect x="98.8622%" y="197" width="0.1264%" height="15" fill="rgb(241,91,40)" fg:x="782" fg:w="1"/><text x="99.1122%" y="207.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (1 samples, 0.13%)</title><rect x="98.8622%" y="181" width="0.1264%" height="15" fill="rgb(225,3,45)" fg:x="782" fg:w="1"/><text x="99.1122%" y="191.50"></text></g><g><title>rustracer::lights::phong (2 samples, 0.25%)</title><rect x="98.8622%" y="597" width="0.2528%" height="15" fill="rgb(244,223,14)" fg:x="782" fg:w="2"/><text x="99.1122%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="581" width="0.2528%" height="15" fill="rgb(224,124,37)" fg:x="782" fg:w="2"/><text x="99.1122%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="565" width="0.2528%" height="15" fill="rgb(251,171,30)" fg:x="782" fg:w="2"/><text x="99.1122%" y="575.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 0.25%)</title><rect x="98.8622%" y="549" width="0.2528%" height="15" fill="rgb(236,46,54)" fg:x="782" fg:w="2"/><text x="99.1122%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="533" width="0.2528%" height="15" fill="rgb(245,213,5)" fg:x="782" fg:w="2"/><text x="99.1122%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="517" width="0.2528%" height="15" fill="rgb(230,144,27)" fg:x="782" fg:w="2"/><text x="99.1122%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="501" width="0.2528%" height="15" fill="rgb(220,86,6)" fg:x="782" fg:w="2"/><text x="99.1122%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="98.8622%" y="485" width="0.2528%" height="15" fill="rgb(240,20,13)" fg:x="782" fg:w="2"/><text x="99.1122%" y="495.50"></text></g><g><title>rustracer::lights::phong::{{closure}} (2 samples, 0.25%)</title><rect x="98.8622%" y="469" width="0.2528%" height="15" fill="rgb(217,89,34)" fg:x="782" fg:w="2"/><text x="99.1122%" y="479.50"></text></g><g><title>rustracer::lights::Light::is_visible (2 samples, 0.25%)</title><rect x="98.8622%" y="453" width="0.2528%" height="15" fill="rgb(229,13,5)" fg:x="782" fg:w="2"/><text x="99.1122%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.25%)</title><rect x="98.8622%" y="437" width="0.2528%" height="15" fill="rgb(244,67,35)" fg:x="782" fg:w="2"/><text x="99.1122%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.25%)</title><rect x="98.8622%" y="421" width="0.2528%" height="15" fill="rgb(221,40,2)" fg:x="782" fg:w="2"/><text x="99.1122%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.25%)</title><rect x="98.8622%" y="405" width="0.2528%" height="15" fill="rgb(237,157,21)" fg:x="782" fg:w="2"/><text x="99.1122%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="389" width="0.2528%" height="15" fill="rgb(222,94,11)" fg:x="782" fg:w="2"/><text x="99.1122%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="373" width="0.2528%" height="15" fill="rgb(249,113,6)" fg:x="782" fg:w="2"/><text x="99.1122%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="357" width="0.2528%" height="15" fill="rgb(238,137,36)" fg:x="782" fg:w="2"/><text x="99.1122%" y="367.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 0.25%)</title><rect x="98.8622%" y="341" width="0.2528%" height="15" fill="rgb(210,102,26)" fg:x="782" fg:w="2"/><text x="99.1122%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="325" width="0.2528%" height="15" fill="rgb(218,30,30)" fg:x="782" fg:w="2"/><text x="99.1122%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="309" width="0.2528%" height="15" fill="rgb(214,67,26)" fg:x="782" fg:w="2"/><text x="99.1122%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="98.8622%" y="293" width="0.2528%" height="15" fill="rgb(251,9,53)" fg:x="782" fg:w="2"/><text x="99.1122%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="98.8622%" y="277" width="0.2528%" height="15" fill="rgb(228,204,25)" fg:x="782" fg:w="2"/><text x="99.1122%" y="287.50"></text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (2 samples, 0.25%)</title><rect x="98.8622%" y="261" width="0.2528%" height="15" fill="rgb(207,153,8)" fg:x="782" fg:w="2"/><text x="99.1122%" y="271.50"></text></g><g><title>rustracer::shape::Shape::intersect (2 samples, 0.25%)</title><rect x="98.8622%" y="245" width="0.2528%" height="15" fill="rgb(242,9,16)" fg:x="782" fg:w="2"/><text x="99.1122%" y="255.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (1 samples, 0.13%)</title><rect x="98.9886%" y="229" width="0.1264%" height="15" fill="rgb(217,211,10)" fg:x="783" fg:w="1"/><text x="99.2386%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.13%)</title><rect x="99.1150%" y="581" width="0.1264%" height="15" fill="rgb(219,228,52)" fg:x="784" fg:w="1"/><text x="99.3650%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.13%)</title><rect x="99.1150%" y="565" width="0.1264%" height="15" fill="rgb(231,92,29)" fg:x="784" fg:w="1"/><text x="99.3650%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.13%)</title><rect x="99.1150%" y="549" width="0.1264%" height="15" fill="rgb(232,8,23)" fg:x="784" fg:w="1"/><text x="99.3650%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="99.1150%" y="533" width="0.1264%" height="15" fill="rgb(216,211,34)" fg:x="784" fg:w="1"/><text x="99.3650%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="99.1150%" y="517" width="0.1264%" height="15" fill="rgb(236,151,0)" fg:x="784" fg:w="1"/><text x="99.3650%" y="527.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (1 samples, 0.13%)</title><rect x="99.1150%" y="501" width="0.1264%" height="15" fill="rgb(209,168,3)" fg:x="784" fg:w="1"/><text x="99.3650%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="99.1150%" y="485" width="0.1264%" height="15" fill="rgb(208,129,28)" fg:x="784" fg:w="1"/><text x="99.3650%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="99.1150%" y="469" width="0.1264%" height="15" fill="rgb(229,78,22)" fg:x="784" fg:w="1"/><text x="99.3650%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="99.1150%" y="453" width="0.1264%" height="15" fill="rgb(228,187,13)" fg:x="784" fg:w="1"/><text x="99.3650%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.13%)</title><rect x="99.1150%" y="437" width="0.1264%" height="15" fill="rgb(240,119,24)" fg:x="784" fg:w="1"/><text x="99.3650%" y="447.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray::{{closure}} (1 samples, 0.13%)</title><rect x="99.1150%" y="421" width="0.1264%" height="15" fill="rgb(209,194,42)" fg:x="784" fg:w="1"/><text x="99.3650%" y="431.50"></text></g><g><title>rustracer::shape::Shape::intersect (1 samples, 0.13%)</title><rect x="99.1150%" y="405" width="0.1264%" height="15" fill="rgb(247,200,46)" fg:x="784" fg:w="1"/><text x="99.3650%" y="415.50"></text></g><g><title>glm::builtin::matrix::inverse (1 samples, 0.13%)</title><rect x="99.1150%" y="389" width="0.1264%" height="15" fill="rgb(218,76,16)" fg:x="784" fg:w="1"/><text x="99.3650%" y="399.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse (1 samples, 0.13%)</title><rect x="99.1150%" y="373" width="0.1264%" height="15" fill="rgb(225,21,48)" fg:x="784" fg:w="1"/><text x="99.3650%" y="383.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector4&lt;T&gt;&gt; for glm::mat::mat::Matrix4&lt;T&gt;&gt;::inverse::{{closure}} (1 samples, 0.13%)</title><rect x="99.1150%" y="357" width="0.1264%" height="15" fill="rgb(239,223,50)" fg:x="784" fg:w="1"/><text x="99.3650%" y="367.50"></text></g><g><title>glm::mat::sqmat::&lt;impl glm::mat::traits::GenSquareMat&lt;T,glm::vec::vec::Vector3&lt;T&gt;&gt; for glm::mat::mat::Matrix3&lt;T&gt;&gt;::determinant (1 samples, 0.13%)</title><rect x="99.1150%" y="341" width="0.1264%" height="15" fill="rgb(244,45,21)" fg:x="784" fg:w="1"/><text x="99.3650%" y="351.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1 samples, 0.13%)</title><rect x="99.1150%" y="325" width="0.1264%" height="15" fill="rgb(232,33,43)" fg:x="784" fg:w="1"/><text x="99.3650%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (679 samples, 85.84%)</title><rect x="13.6536%" y="725" width="85.8407%" height="15" fill="rgb(209,8,3)" fg:x="108" fg:w="679"/><text x="13.9036%" y="735.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (679 samples, 85.84%)</title><rect x="13.6536%" y="709" width="85.8407%" height="15" fill="rgb(214,25,53)" fg:x="108" fg:w="679"/><text x="13.9036%" y="719.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (679 samples, 85.84%)</title><rect x="13.6536%" y="693" width="85.8407%" height="15" fill="rgb(254,186,54)" fg:x="108" fg:w="679"/><text x="13.9036%" y="703.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>rustracer::raytracer::RayTracer::render::{{closure}} (679 samples, 85.84%)</title><rect x="13.6536%" y="677" width="85.8407%" height="15" fill="rgb(208,174,49)" fg:x="108" fg:w="679"/><text x="13.9036%" y="687.50">rustracer::raytracer::RayTracer::render::{{closure}}</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (621 samples, 78.51%)</title><rect x="20.9861%" y="661" width="78.5082%" height="15" fill="rgb(233,191,51)" fg:x="166" fg:w="621"/><text x="21.2361%" y="671.50">rustracer::raytracer::RayTracer::trace_ray</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (113 samples, 14.29%)</title><rect x="85.2086%" y="645" width="14.2857%" height="15" fill="rgb(222,134,10)" fg:x="674" fg:w="113"/><text x="85.4586%" y="655.50">rustracer::raytracer::..</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (23 samples, 2.91%)</title><rect x="96.5866%" y="629" width="2.9077%" height="15" fill="rgb(230,226,20)" fg:x="764" fg:w="23"/><text x="96.8366%" y="639.50">ru..</text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (6 samples, 0.76%)</title><rect x="98.7358%" y="613" width="0.7585%" height="15" fill="rgb(251,111,25)" fg:x="781" fg:w="6"/><text x="98.9858%" y="623.50"></text></g><g><title>rustracer::raytracer::RayTracer::trace_ray (3 samples, 0.38%)</title><rect x="99.1150%" y="597" width="0.3793%" height="15" fill="rgb(224,40,46)" fg:x="784" fg:w="3"/><text x="99.3650%" y="607.50"></text></g><g><title>rustracer::lights::phong (2 samples, 0.25%)</title><rect x="99.2415%" y="581" width="0.2528%" height="15" fill="rgb(236,108,47)" fg:x="785" fg:w="2"/><text x="99.4915%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="565" width="0.2528%" height="15" fill="rgb(234,93,0)" fg:x="785" fg:w="2"/><text x="99.4915%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="549" width="0.2528%" height="15" fill="rgb(224,213,32)" fg:x="785" fg:w="2"/><text x="99.4915%" y="559.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 0.25%)</title><rect x="99.2415%" y="533" width="0.2528%" height="15" fill="rgb(251,11,48)" fg:x="785" fg:w="2"/><text x="99.4915%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="517" width="0.2528%" height="15" fill="rgb(236,173,5)" fg:x="785" fg:w="2"/><text x="99.4915%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="501" width="0.2528%" height="15" fill="rgb(230,95,12)" fg:x="785" fg:w="2"/><text x="99.4915%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="485" width="0.2528%" height="15" fill="rgb(232,209,1)" fg:x="785" fg:w="2"/><text x="99.4915%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="99.2415%" y="469" width="0.2528%" height="15" fill="rgb(232,6,1)" fg:x="785" fg:w="2"/><text x="99.4915%" y="479.50"></text></g><g><title>rustracer::lights::phong::{{closure}} (2 samples, 0.25%)</title><rect x="99.2415%" y="453" width="0.2528%" height="15" fill="rgb(210,224,50)" fg:x="785" fg:w="2"/><text x="99.4915%" y="463.50"></text></g><g><title>rustracer::lights::Light::is_visible (2 samples, 0.25%)</title><rect x="99.2415%" y="437" width="0.2528%" height="15" fill="rgb(228,127,35)" fg:x="785" fg:w="2"/><text x="99.4915%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.25%)</title><rect x="99.2415%" y="421" width="0.2528%" height="15" fill="rgb(245,102,45)" fg:x="785" fg:w="2"/><text x="99.4915%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.25%)</title><rect x="99.2415%" y="405" width="0.2528%" height="15" fill="rgb(214,1,49)" fg:x="785" fg:w="2"/><text x="99.4915%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.25%)</title><rect x="99.2415%" y="389" width="0.2528%" height="15" fill="rgb(226,163,40)" fg:x="785" fg:w="2"/><text x="99.4915%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="373" width="0.2528%" height="15" fill="rgb(239,212,28)" fg:x="785" fg:w="2"/><text x="99.4915%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="357" width="0.2528%" height="15" fill="rgb(220,20,13)" fg:x="785" fg:w="2"/><text x="99.4915%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="341" width="0.2528%" height="15" fill="rgb(210,164,35)" fg:x="785" fg:w="2"/><text x="99.4915%" y="351.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (2 samples, 0.25%)</title><rect x="99.2415%" y="325" width="0.2528%" height="15" fill="rgb(248,109,41)" fg:x="785" fg:w="2"/><text x="99.4915%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="309" width="0.2528%" height="15" fill="rgb(238,23,50)" fg:x="785" fg:w="2"/><text x="99.4915%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="293" width="0.2528%" height="15" fill="rgb(211,48,49)" fg:x="785" fg:w="2"/><text x="99.4915%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="99.2415%" y="277" width="0.2528%" height="15" fill="rgb(223,36,21)" fg:x="785" fg:w="2"/><text x="99.4915%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="99.2415%" y="261" width="0.2528%" height="15" fill="rgb(207,123,46)" fg:x="785" fg:w="2"/><text x="99.4915%" y="271.50"></text></g><g><title>rustracer::lights::Light::is_visible::{{closure}} (2 samples, 0.25%)</title><rect x="99.2415%" y="245" width="0.2528%" height="15" fill="rgb(240,218,32)" fg:x="785" fg:w="2"/><text x="99.4915%" y="255.50"></text></g><g><title>rustracer::shape::Shape::intersect (2 samples, 0.25%)</title><rect x="99.2415%" y="229" width="0.2528%" height="15" fill="rgb(252,5,43)" fg:x="785" fg:w="2"/><text x="99.4915%" y="239.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (2 samples, 0.25%)</title><rect x="99.2415%" y="213" width="0.2528%" height="15" fill="rgb(252,84,19)" fg:x="785" fg:w="2"/><text x="99.4915%" y="223.50"></text></g><g><title>&lt;T as rustracer::primitive::PrimitiveComponent&gt;::intersect (2 samples, 0.25%)</title><rect x="99.2415%" y="197" width="0.2528%" height="15" fill="rgb(243,152,39)" fg:x="785" fg:w="2"/><text x="99.4915%" y="207.50"></text></g><g><title>rustracer::primitive::solve_quadratic (1 samples, 0.13%)</title><rect x="99.3679%" y="181" width="0.1264%" height="15" fill="rgb(234,160,15)" fg:x="786" fg:w="1"/><text x="99.6179%" y="191.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (1 samples, 0.13%)</title><rect x="99.3679%" y="165" width="0.1264%" height="15" fill="rgb(237,34,20)" fg:x="786" fg:w="1"/><text x="99.6179%" y="175.50"></text></g><g><title>rustracer::raytracer::RayTracer::render (680 samples, 85.97%)</title><rect x="13.6536%" y="741" width="85.9671%" height="15" fill="rgb(229,97,13)" fg:x="108" fg:w="680"/><text x="13.9036%" y="751.50">rustracer::raytracer::RayTracer::render</text></g><g><title>image::buffer_::ImageBuffer&lt;P,Container&gt;::put_pixel (1 samples, 0.13%)</title><rect x="99.4943%" y="725" width="0.1264%" height="15" fill="rgb(234,71,50)" fg:x="787" fg:w="1"/><text x="99.7443%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.4943%" y="709" width="0.1264%" height="15" fill="rgb(253,155,4)" fg:x="787" fg:w="1"/><text x="99.7443%" y="719.50"></text></g><g><title>__libc_start_main_impl (718 samples, 90.77%)</title><rect x="8.9760%" y="1013" width="90.7712%" height="15" fill="rgb(222,185,37)" fg:x="71" fg:w="718"/><text x="9.2260%" y="1023.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (718 samples, 90.77%)</title><rect x="8.9760%" y="997" width="90.7712%" height="15" fill="rgb(251,177,13)" fg:x="71" fg:w="718"/><text x="9.2260%" y="1007.50">__libc_start_call_main</text></g><g><title>main (718 samples, 90.77%)</title><rect x="8.9760%" y="981" width="90.7712%" height="15" fill="rgb(250,179,40)" fg:x="71" fg:w="718"/><text x="9.2260%" y="991.50">main</text></g><g><title>std::rt::lang_start_internal (718 samples, 90.77%)</title><rect x="8.9760%" y="965" width="90.7712%" height="15" fill="rgb(242,44,2)" fg:x="71" fg:w="718"/><text x="9.2260%" y="975.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (718 samples, 90.77%)</title><rect x="8.9760%" y="949" width="90.7712%" height="15" fill="rgb(216,177,13)" fg:x="71" fg:w="718"/><text x="9.2260%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (718 samples, 90.77%)</title><rect x="8.9760%" y="933" width="90.7712%" height="15" fill="rgb(216,106,43)" fg:x="71" fg:w="718"/><text x="9.2260%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (718 samples, 90.77%)</title><rect x="8.9760%" y="917" width="90.7712%" height="15" fill="rgb(216,183,2)" fg:x="71" fg:w="718"/><text x="9.2260%" y="927.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (718 samples, 90.77%)</title><rect x="8.9760%" y="901" width="90.7712%" height="15" fill="rgb(249,75,3)" fg:x="71" fg:w="718"/><text x="9.2260%" y="911.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (718 samples, 90.77%)</title><rect x="8.9760%" y="885" width="90.7712%" height="15" fill="rgb(219,67,39)" fg:x="71" fg:w="718"/><text x="9.2260%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (718 samples, 90.77%)</title><rect x="8.9760%" y="869" width="90.7712%" height="15" fill="rgb(253,228,2)" fg:x="71" fg:w="718"/><text x="9.2260%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (718 samples, 90.77%)</title><rect x="8.9760%" y="853" width="90.7712%" height="15" fill="rgb(235,138,27)" fg:x="71" fg:w="718"/><text x="9.2260%" y="863.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (718 samples, 90.77%)</title><rect x="8.9760%" y="837" width="90.7712%" height="15" fill="rgb(236,97,51)" fg:x="71" fg:w="718"/><text x="9.2260%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (718 samples, 90.77%)</title><rect x="8.9760%" y="821" width="90.7712%" height="15" fill="rgb(240,80,30)" fg:x="71" fg:w="718"/><text x="9.2260%" y="831.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (718 samples, 90.77%)</title><rect x="8.9760%" y="805" width="90.7712%" height="15" fill="rgb(230,178,19)" fg:x="71" fg:w="718"/><text x="9.2260%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (718 samples, 90.77%)</title><rect x="8.9760%" y="789" width="90.7712%" height="15" fill="rgb(210,190,27)" fg:x="71" fg:w="718"/><text x="9.2260%" y="799.50">core::ops::function::FnOnce::call_once</text></g><g><title>rustracer::main (718 samples, 90.77%)</title><rect x="8.9760%" y="773" width="90.7712%" height="15" fill="rgb(222,107,31)" fg:x="71" fg:w="718"/><text x="9.2260%" y="783.50">rustracer::main</text></g><g><title>rustracer::run (718 samples, 90.77%)</title><rect x="8.9760%" y="757" width="90.7712%" height="15" fill="rgb(216,127,34)" fg:x="71" fg:w="718"/><text x="9.2260%" y="767.50">rustracer::run</text></g><g><title>rustracer::scene::parser::&lt;impl rustracer::scene::TreeScene&gt;::parse (1 samples, 0.13%)</title><rect x="99.6207%" y="741" width="0.1264%" height="15" fill="rgb(234,116,52)" fg:x="788" fg:w="1"/><text x="99.8707%" y="751.50"></text></g><g><title>xmltree::Element::parse (1 samples, 0.13%)</title><rect x="99.6207%" y="725" width="0.1264%" height="15" fill="rgb(222,124,15)" fg:x="788" fg:w="1"/><text x="99.8707%" y="735.50"></text></g><g><title>xmltree::Element::parse_all (1 samples, 0.13%)</title><rect x="99.6207%" y="709" width="0.1264%" height="15" fill="rgb(231,179,28)" fg:x="788" fg:w="1"/><text x="99.8707%" y="719.50"></text></g><g><title>xmltree::build (1 samples, 0.13%)</title><rect x="99.6207%" y="693" width="0.1264%" height="15" fill="rgb(226,93,45)" fg:x="788" fg:w="1"/><text x="99.8707%" y="703.50"></text></g><g><title>xmltree::build (1 samples, 0.13%)</title><rect x="99.6207%" y="677" width="0.1264%" height="15" fill="rgb(215,8,51)" fg:x="788" fg:w="1"/><text x="99.8707%" y="687.50"></text></g><g><title>xmltree::build (1 samples, 0.13%)</title><rect x="99.6207%" y="661" width="0.1264%" height="15" fill="rgb(223,106,5)" fg:x="788" fg:w="1"/><text x="99.8707%" y="671.50"></text></g><g><title>xml::reader::EventReader&lt;R&gt;::next (1 samples, 0.13%)</title><rect x="99.6207%" y="645" width="0.1264%" height="15" fill="rgb(250,191,5)" fg:x="788" fg:w="1"/><text x="99.8707%" y="655.50"></text></g><g><title>xml::reader::parser::PullParser::next (1 samples, 0.13%)</title><rect x="99.6207%" y="629" width="0.1264%" height="15" fill="rgb(242,132,44)" fg:x="788" fg:w="1"/><text x="99.8707%" y="639.50"></text></g><g><title>xml::reader::lexer::Lexer::next_token (1 samples, 0.13%)</title><rect x="99.6207%" y="613" width="0.1264%" height="15" fill="rgb(251,152,29)" fg:x="788" fg:w="1"/><text x="99.8707%" y="623.50"></text></g><g><title>xml::util::next_char_from (1 samples, 0.13%)</title><rect x="99.6207%" y="597" width="0.1264%" height="15" fill="rgb(218,179,5)" fg:x="788" fg:w="1"/><text x="99.8707%" y="607.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="99.6207%" y="581" width="0.1264%" height="15" fill="rgb(227,67,19)" fg:x="788" fg:w="1"/><text x="99.8707%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (1 samples, 0.13%)</title><rect x="99.6207%" y="565" width="0.1264%" height="15" fill="rgb(233,119,31)" fg:x="788" fg:w="1"/><text x="99.8707%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="99.6207%" y="549" width="0.1264%" height="15" fill="rgb(241,120,22)" fg:x="788" fg:w="1"/><text x="99.8707%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.13%)</title><rect x="99.6207%" y="533" width="0.1264%" height="15" fill="rgb(224,102,30)" fg:x="788" fg:w="1"/><text x="99.8707%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.13%)</title><rect x="99.6207%" y="517" width="0.1264%" height="15" fill="rgb(210,164,37)" fg:x="788" fg:w="1"/><text x="99.8707%" y="527.50"></text></g><g><title>__GI___libc_read (1 samples, 0.13%)</title><rect x="99.6207%" y="501" width="0.1264%" height="15" fill="rgb(226,191,16)" fg:x="788" fg:w="1"/><text x="99.8707%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.6207%" y="485" width="0.1264%" height="15" fill="rgb(214,40,45)" fg:x="788" fg:w="1"/><text x="99.8707%" y="495.50"></text></g><g><title>_start (719 samples, 90.90%)</title><rect x="8.9760%" y="1029" width="90.8976%" height="15" fill="rgb(244,29,26)" fg:x="71" fg:w="719"/><text x="9.2260%" y="1039.50">_start</text></g><g><title>_dl_start (1 samples, 0.13%)</title><rect x="99.7472%" y="1013" width="0.1264%" height="15" fill="rgb(216,16,5)" fg:x="789" fg:w="1"/><text x="99.9972%" y="1023.50"></text></g><g><title>_dl_start_final (1 samples, 0.13%)</title><rect x="99.7472%" y="997" width="0.1264%" height="15" fill="rgb(249,76,35)" fg:x="789" fg:w="1"/><text x="99.9972%" y="1007.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.13%)</title><rect x="99.7472%" y="981" width="0.1264%" height="15" fill="rgb(207,11,44)" fg:x="789" fg:w="1"/><text x="99.9972%" y="991.50"></text></g><g><title>init_cpu_features (1 samples, 0.13%)</title><rect x="99.7472%" y="965" width="0.1264%" height="15" fill="rgb(228,190,49)" fg:x="789" fg:w="1"/><text x="99.9972%" y="975.50"></text></g><g><title>get_cet_status (1 samples, 0.13%)</title><rect x="99.7472%" y="949" width="0.1264%" height="15" fill="rgb(214,173,12)" fg:x="789" fg:w="1"/><text x="99.9972%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.13%)</title><rect x="99.7472%" y="933" width="0.1264%" height="15" fill="rgb(218,26,35)" fg:x="789" fg:w="1"/><text x="99.9972%" y="943.50"></text></g><g><title>all (791 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(220,200,19)" fg:x="0" fg:w="791"/><text x="0.2500%" y="1071.50"></text></g><g><title>rustracer (786 samples, 99.37%)</title><rect x="0.6321%" y="1045" width="99.3679%" height="15" fill="rgb(239,95,49)" fg:x="5" fg:w="786"/><text x="0.8821%" y="1055.50">rustracer</text></g><g><title>anon.d62a7e7fce6baa56d207d9697665b04d.20.llvm.4965461720587879498 (1 samples, 0.13%)</title><rect x="99.8736%" y="1029" width="0.1264%" height="15" fill="rgb(235,85,53)" fg:x="790" fg:w="1"/><text x="100.1236%" y="1039.50"></text></g><g><title>rustracer::primitive::Primitive::intersect (1 samples, 0.13%)</title><rect x="99.8736%" y="1013" width="0.1264%" height="15" fill="rgb(233,133,31)" fg:x="790" fg:w="1"/><text x="100.1236%" y="1023.50"></text></g></svg></svg>